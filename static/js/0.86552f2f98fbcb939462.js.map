{"version":3,"sources":["webpack:///static/js/0.86552f2f98fbcb939462.js","webpack:///./src/components/DagreD3Output.vue","webpack:///./~/dagre-d3/lib/util.js","webpack:///./~/ciena-dagre/lib/util.js","webpack:///./~/ciena-graphlib/index.js","webpack:///./~/dagre-d3/lib/d3.js","webpack:///./~/dagre-d3/lib/lodash.js","webpack:///./~/d3/d3.js","webpack:///./~/ciena-dagre/lib/rank/util.js","webpack:///./~/ciena-graphlib/lib/graph.js","webpack:///./~/dagre-d3/lib/intersect/intersect-ellipse.js","webpack:///./~/dagre-d3/lib/label/add-label.js","webpack:///./~/ciena-dagre/lib/rank/feasible-tree.js","webpack:///./~/ciena-graphlib/lib/alg/dfs.js","webpack:///./~/ciena-graphlib/lib/alg/dijkstra.js","webpack:///./~/ciena-graphlib/lib/alg/tarjan.js","webpack:///./~/ciena-graphlib/lib/alg/topsort.js","webpack:///./~/ciena-graphlib/lib/data/priority-queue.js","webpack:///./~/dagre-d3/lib/dagre.js","webpack:///./~/dagre-d3/lib/intersect/intersect-circle.js","webpack:///./~/dagre-d3/lib/intersect/intersect-node.js","webpack:///./~/dagre-d3/lib/intersect/intersect-polygon.js","webpack:///./~/dagre-d3/lib/intersect/intersect-rect.js","webpack:///DagreD3Output.vue","webpack:///./~/babel-runtime/core-js/get-iterator.js","webpack:///./~/ciena-dagre/index.js","webpack:///./~/ciena-dagre/lib/acyclic.js","webpack:///./~/ciena-dagre/lib/add-border-segments.js","webpack:///./~/ciena-dagre/lib/coordinate-system.js","webpack:///./~/ciena-dagre/lib/data/list.js","webpack:///./~/ciena-dagre/lib/debug.js","webpack:///./~/ciena-dagre/lib/greedy-fas.js","webpack:///./~/ciena-dagre/lib/layout.js","webpack:///./~/ciena-dagre/lib/nesting-graph.js","webpack:///./~/ciena-dagre/lib/normalize.js","webpack:///./~/ciena-dagre/lib/order/add-subgraph-constraints.js","webpack:///./~/ciena-dagre/lib/order/barycenter.js","webpack:///./~/ciena-dagre/lib/order/build-layer-graph.js","webpack:///./~/ciena-dagre/lib/order/cross-count.js","webpack:///./~/ciena-dagre/lib/order/index.js","webpack:///./~/ciena-dagre/lib/order/init-order.js","webpack:///./~/ciena-dagre/lib/order/resolve-conflicts.js","webpack:///./~/ciena-dagre/lib/order/sort-subgraph.js","webpack:///./~/ciena-dagre/lib/order/sort.js","webpack:///./~/ciena-dagre/lib/parent-dummy-chains.js","webpack:///./~/ciena-dagre/lib/position/bk.js","webpack:///./~/ciena-dagre/lib/position/index.js","webpack:///./~/ciena-dagre/lib/rank/index.js","webpack:///./~/ciena-dagre/lib/rank/network-simplex.js","webpack:///./~/ciena-graphlib/lib/alg/components.js","webpack:///./~/ciena-graphlib/lib/alg/dijkstra-all.js","webpack:///./~/ciena-graphlib/lib/alg/find-cycles.js","webpack:///./~/ciena-graphlib/lib/alg/floyd-warshall.js","webpack:///./~/ciena-graphlib/lib/alg/index.js","webpack:///./~/ciena-graphlib/lib/alg/is-acyclic.js","webpack:///./~/ciena-graphlib/lib/alg/postorder.js","webpack:///./~/ciena-graphlib/lib/alg/preorder.js","webpack:///./~/ciena-graphlib/lib/alg/prim.js","webpack:///./~/ciena-graphlib/lib/json.js","webpack:///./~/core-js/library/fn/get-iterator.js","webpack:///./~/core-js/library/modules/_classof.js","webpack:///./~/core-js/library/modules/core.get-iterator-method.js","webpack:///./~/core-js/library/modules/core.get-iterator.js","webpack:///./src/components/DagreD3Output.vue?c53d","webpack:///./~/dagre-d3/lib/arrows.js","webpack:///./~/dagre-d3/lib/create-clusters.js","webpack:///./~/dagre-d3/lib/create-edge-labels.js","webpack:///./~/dagre-d3/lib/create-edge-paths.js","webpack:///./~/dagre-d3/lib/create-nodes.js","webpack:///./~/dagre-d3/lib/graphlib.js","webpack:///./~/dagre-d3/lib/index.js","webpack:///./~/dagre-d3/lib/intersect/index.js","webpack:///./~/dagre-d3/lib/intersect/intersect-line.js","webpack:///./~/dagre-d3/lib/label/add-html-label.js","webpack:///./~/dagre-d3/lib/label/add-svg-label.js","webpack:///./~/dagre-d3/lib/label/add-text-label.js","webpack:///./~/dagre-d3/lib/position-clusters.js","webpack:///./~/dagre-d3/lib/position-edge-labels.js","webpack:///./~/dagre-d3/lib/position-nodes.js","webpack:///./~/dagre-d3/lib/render.js","webpack:///./~/dagre-d3/lib/shapes.js","webpack:///./~/dagre-d3/lib/version.js","webpack:///./src/components/DagreD3Output.vue?4054","webpack:///./src/components/DagreD3Output.vue?ff47"],"names":["webpackJsonp","116","module","exports","__webpack_require__","Component","396","isSubgraph","g","v","children","length","edgeToId","e","escapeId","w","name","str","String","replace","ID_DELIM","applyStyle","dom","styleFn","attr","applyClass","classFn","otherClasses","applyTransition","selection","graph","_","isPlainObject","transition","isFunction","397","addDummyNode","type","attrs","_lodash2","default","uniqueId","hasNode","dummy","setNode","simplify","simplified","_cienaGraphlib","Graph","setGraph","forEach","nodes","node","edges","simpleLabel","edge","weight","minlen","label","setEdge","Math","max","asNonCompoundGraph","multigraph","isMultigraph","successorWeights","weightMap","map","sucs","outEdges","zipObject","predecessorWeights","preds","inEdges","intersectRect","rect","point","x","y","dx","dy","width","h","height","Error","sx","sy","abs","buildLayerMatrix","layering","range","maxRank","rank","isUndefined","order","normalizeRanks","min","has","removeEmptyRanks","offset","layers","push","delta","nodeRankFactor","vs","i","addBorderNode","prefix","arguments","partition","collection","fn","result","lhs","rhs","value","time","start","now","console","log","notime","Object","defineProperty","_lodash","obj","__esModule","398","alg","json","399","window","d3","400","401","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","mid","right","d3_transposeLength","d","d3_range_integerScale","k","d3_class","ctor","properties","key","prototype","enumerable","d3_Map","this","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","apply","d3_vendorSymbol","object","charAt","toUpperCase","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","get","indexOf","concat","remove","set","d3_eventPreventDefault","preventDefault","d3_eventSource","s","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","c","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElement","createElementNS","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","data","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","m","group","d3_selection_enter","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","call","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","d3_mouse_bug44083","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","pageY","clientX","clientY","matrixTransform","inverse","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","toString","format","hsl","color","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","then","Date","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","p","ceil","LN10","d3_formatPrefix","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","d3_date","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","context","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","d3_geom_quadtreeVisit","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","count","interrupt","d3_transition","id","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","cancelId","cancel","tick","tweens","ease","duration","d3_svg_axisX","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","transpose","matrix","row","zip","entries","arrays","merged","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","correspondingElement","origin","τε","SQRT2","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","responseXML","undefined","402","longestPath","dfs","visited","POSITIVE_INFINITY","sources","slack","403","opts","_isDirected","directed","_isMultigraph","_isCompound","compound","_label","_defaultNodeLabelFn","constant","_defaultEdgeLabelFn","_nodes","_parent","_children","GRAPH_NODE","_in","_preds","_out","_sucs","_edgeObjs","_edgeLabels","incrementOrInitEntry","decrementOrRemoveEntry","edgeArgsToId","isDirected","w_","tmp","EDGE_KEY_DELIM","DEFAULT_EDGE_NAME","edgeArgsToObj","edgeObj","edgeObjToId","_typeof","Symbol","iterator","constructor","_nodeCount","_edgeCount","isCompound","setDefaultNodeLabel","newDefault","nodeCount","isEmpty","sinks","setNodes","removeNode","removeEdge","_removeFromParentsChildList","setParent","predecessors","predsV","successors","sucsV","union","filterNodes","findParent","parents","setDefaultEdgeLabel","edgeCount","setPath","valueSpecified","arg0","freeze","hasEdge","inV","outV","nodeEdges","404","intersectEllipse","det","405","addLabel","labelSvg","labelType","addSVGLabel","addHtmlLabel","addTextLabel","labelBBox","getBBox","406","tightTree","edgeV","_util","findMinSlackEdge","minBy","shiftRanks","feasibleTree","407","doDfs","postorder","navigation","acc","408","_interopRequireDefault","runDijkstra","weightFn","edgeFn","vEntry","results","pq","_priorityQueue2","updateNeighbors","wEntry","predecessor","decrease","removeMin","DEFAULT_WEIGHT_FUNC","_priorityQueue","409","onStack","lowlink","cmpt","410","CycleException","topsort","411","PriorityQueue","_arr","_keyIndices","keyIndices","arr","_decrease","_swap","_heapify","largest","origArrI","origArrJ","412","dagre","413","intersectCircle","414","intersectNode","415","intersectPolygon","polyPoints","intersections","minX","minY","intersectLine","pdx","pdy","distp","qdx","qdy","distq","416","419","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default","__WEBPACK_IMPORTED_MODULE_1_dagre_d3__","__WEBPACK_IMPORTED_MODULE_2_d3__","computed","updateSVG","$store","getters","argdownData","rankDir","state","config","nodeSep","rankSep","watch","mounted","addNode","currentGroup","nodeProperties","class","paddingBottom","paddingTop","paddingLeft","paddingRight","labelTitle","labelText","tags","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","done","tag","tagsDictionary","cssClass","return","clusterLabelPos","level","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","$refs","rankdir","marginx","marginy","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_node","render","svgGroup","421","422","debug","util","__WEBPACK_IMPORTED_MODULE_0__lib_debug__","__WEBPACK_IMPORTED_MODULE_1__lib_layout__","__WEBPACK_IMPORTED_MODULE_1__lib_layout___default","__WEBPACK_IMPORTED_MODULE_2__lib_util__","debugOrdering","423","dfsFAS","fas","undo","reversed","forwardName","run","acyclicer","_greedyFas2","_greedyFas","424","prop","sg","sgNode","borderType","prev","curr","borderLeft","borderRight","minRank","425","swapWidthHeight","swapWidthHeightOne","reverseY","reverseYOne","swapXY","swapXYOne","adjust","426","List","sentinel","_next","_prev","_sentinel","unlink","filterOutLinks","dequeue","enqueue","strs","427","layerMatrix","layer","layerV","428","doGreedyFAS","buckets","zeroIdx","collectPredecessors","uEntry","assignBucket","buildState","fasGraph","maxIn","maxOut","prevWeight","edgeWeight","_list2","DEFAULT_WEIGHT_FN","flatten","_list","429","runLayout","makeSpaceForEdgeLabels","removeSelfEdges","_acyclic","_nestingGraph","_rank2","injectEdgeLabelProxies","cleanup","assignRankMinMax","removeEdgeLabelProxies","_normalize","_parentDummyChains2","_addBorderSegments2","_order2","insertSelfEdges","_coordinateSystem","_position2","positionSelfEdges","removeBorderNodes","fixupEdgeLabelCoords","translateGraph","assignNodeIntersects","reversePointsForReversedEdges","updateInputGraph","inputGraph","layoutGraph","inputLabel","layoutLabel","buildLayoutGraph","canonicalize","graphDefaults","selectNumberAttrs","graphNumAttrs","pick","graphAttrs","defaults","nodeNumAttrs","nodeDefaults","edgeDefaults","edgeNumAttrs","edgeAttrs","ranksep","labelpos","labeloffset","borderTop","borderBottom","labelRank","getExtremes","maxX","maxY","graphLabel","marginX","marginY","nodeV","nodeW","last","selfEdges","orderShift","selfEdge","selfNode","mapValues","newAttrs","timeFn","debugTiming","_rank","_parentDummyChains","_addBorderSegments","_order","_position","edgesep","nodesep","430","depths","childNode","childTop","childBottom","thisWeight","nestingEdge","sumWeights","treeDepths","nestingRoot","431","normalizeEdge","vRank","wRank","edgeLabel","dummyChains","origLabel","432","addSubgraphConstraints","cg","rootPrev","prevChild","433","barycenter","movable","nodeU","434","createRootNode","buildLayerGraph","relationship","435","twoLayerCrossCount","northLayer","southLayer","southPos","southEntries","chain","pos","sortBy","firstIndex","treeSize","cc","weightSum","crossCount","436","buildLayerGraphs","ranks","_buildLayerGraph2","sweepLayerGraphs","layerGraphs","biasRight","lg","sorted","_sortSubgraph2","_addSubgraphConstraints2","assignOrder","mr","downLayerGraphs","upLayerGraphs","_initOrder2","bestCC","lastBest","_crossCount2","cloneDeep","_initOrder","_crossCount","_sortSubgraph","_buildLayerGraph","_addSubgraphConstraints","437","initOrder","simpleNodes","orderedVs","438","doResolveConflicts","sourceSet","mergeEntries","indegree","resolveConflicts","mappedEntries","entryV","entryW","439","expandSubgraphs","subgraphs","mergeBarycenters","sortSubgraph","barycenters","_barycenter2","subgraphResult","_resolveConflicts2","_sort2","blPred","brPred","_barycenter","_resolveConflicts","_sort","440","consumeUnsortable","unsortable","compareWithBias","bias","parts","sortable","vsIndex","441","findPath","postorderNums","vPath","wPath","low","lim","parentDummyChains","pathData","pathIdx","pathV","442","findType1Conflicts","visitLayer","prevLayer","k0","scanPos","prevLayerLength","lastNode","findOtherInnerSegmentNode","k1","scanNode","uLabel","uPos","addConflict","conflicts","findType2Conflicts","scan","south","southEnd","prevNorthBorder","nextNorthBorder","uNode","north","nextNorthPos","prevNorthPos","southLookahead","conflictsV","hasConflict","verticalAlignment","neighborFn","prevIdx","ws","mp","il","horizontalCompaction","reverseSep","pass1","blockG","pass2","buildBlockGraph","blockGraph","sepFn","sep","vRoot","uRoot","prevMax","findSmallestWidthAlignment","xss","vals","maxVals","minVals","forIn","halfWidth","alignCoordinates","alignTo","alignToMin","alignToMax","vert","horiz","alignment","xsVals","balance","ul","ignore","positionX","adjustedLayering","inner","smallestWidth","edgeSep","vLabel","wLabel","443","positionY","prevY","maxHeight","_bk","444","tightTreeRanker","_feasibleTree2","networkSimplexRanker","_networkSimplex2","ranker","longestPathRanker","_feasibleTree","_networkSimplex","445","initCutValues","assignCutValue","childLab","cutvalue","calcCutValue","childIsTail","graphEdge","cutValue","isOutEdge","pointsToHead","otherWeight","isTreeEdge","otherCutValue","initLowLimValues","dfsAssignLowLim","nextLim","leaveEdge","enterEdge","tailLabel","flip","isDescendant","exchangeEdges","updateRanks","preorder","flipped","rootLabel","networkSimplex","_util2","446","cmpts","447","weightFunc","edgeFunc","_dijkstra2","_dijkstra","448","_tarjan2","_tarjan","449","runFloydWarshall","rowK","rowI","ik","kj","ij","altDistance","450","tarjan","prim","isAcyclic","floydWarshall","findCycles","dijkstraAll","dijkstra","components","_components","_components2","_dijkstraAll","_dijkstraAll2","_findCycles","_findCycles2","_floydWarshall","_floydWarshall2","_isAcyclic","_isAcyclic2","_postorder","_postorder2","_preorder","_preorder2","_prim","_prim2","_topsort","_topsort2","451","452","_dfs2","_dfs","453","454","pri","_graph2","init","_graph","455","writeNodes","nodeValue","writeEdges","edgeValue","read","options","write","clone","456","457","cof","TAG","ARG","tryGet","it","O","T","callee","458","classof","ITERATOR","Iterators","getIteratorMethod","459","anObject","getIterator","iterFn","TypeError","460","mappings","file","sourcesContent","sourceRoot","462","marker","vee","undirected","463","createClusters","clusters","svgClusters","thisGroup","labelGroup","domCluster","464","createEdgeLabels","svgEdgeLabels","labelId","465","createEdgePaths","arrows","svgPaths","domEdge","elem","arrowheadId","makeFragmentRef","href","calcPoints","arrowhead","fragmentId","tail","head","createLine","lineInterpolate","lineTension","getCoords","multiply","svgPathsEnter","sourceElem","svgPathExit","getTotalLength","466","createNodes","shapes","svgNodes","labelDom","shape","shapeSvg","shapeBBox","467","graphlib","468","469","ellipse","470","q2","a2","b2","r2","r3","r4","denom","num","sameSign","471","fo","div","labelStyle","client","472","domNode","473","processEscapeSequences","newText","escaped","ch","474","positionClusters","created","475","positionEdgeLabels","476","positionNodes","477","preProcessGraph","outputGroup","createOrSelectGroup","clustersGroup","edgePathsGroup","edgeLabels","postProcessGraph","paddingX","paddingY","NODE_DEFAULT_ATTRS","_prevWidth","_prevHeight","EDGE_DEFAULT_ATTRS","478","479","480","content","locals","484","_vm","_h","$createElement","_c","_self","ref","staticClass","staticStyle","staticRenderFns"],"mappings":"AAAAA,cAAc,IAERC,IACA,SAAUC,EAAQC,EAASC,GCDjCA,EAAA,IAEA,IAAAC,GAAAD,EAAA,GAEAA,EAAA,KAEAA,EAAA,KAEA,KAEA,KAGAF,GAAAC,QAAAE,EAAAF,SDUMG,IACA,SAAUJ,EAAQC,EAASC,GAEjC,YEZE,SAAAG,GAAAC,EAAAC,GACF,QAAAD,EAAAE,SAAAD,GAAAE,OAGA,QAAAC,GAAAC,GACA,MAAAC,GAAAD,EAAAJ,GAAA,IAAAK,EAAAD,EAAAE,GAAA,IAAAD,EAAAD,EAAAG,MAIA,QAAAF,GAAAG,GACA,MAAAA,GAAAC,OAAAD,GAAAE,QAAAC,EAAA,UAGA,QAAAC,GAAAC,EAAAC,GACAA,GACAD,EAAAE,KAAA,QAAAD,GAIA,QAAAE,GAAAH,EAAAI,EAAAC,GACAD,GACAJ,EAAAE,KAAA,QAAAE,GAAAF,KAAA,QAAAG,EAAA,IAAAL,EAAAE,KAAA,UAIA,QAAAI,GAAAC,EAAArB,GACA,GAAAsB,GAAAtB,EAAAsB,OAEA,IAAAC,EAAAC,cAAAF,GAAA,CACA,GAAAG,GAAAH,EAAAG,UACA,IAAAF,EAAAG,WAAAD,GACA,MAAAA,GAAAJ,GAIA,MAAAA,GAjDA,GAAAE,GAAA3B,EAAA,IAGEF,GAAAC,SACFI,aACAK,WACAS,aACAI,aACAG,kBAcA,IAAAR,GAAA,MF6DMe,IACA,SAAUjC,EAAQC,EAASC,GAEjC,YGzDA,SAAAgC,GAAA5B,EAAA6B,EAAAC,EAAAtB,GACA,GAAAP,EACA,IACAA,EAAA8B,EAAAC,QAAAC,SAAAzB,SACGR,EAAAkC,QAAAjC,GAIH,OAFA6B,GAAAK,MAAAN,EACA7B,EAAAoC,QAAAnC,EAAA6B,GACA7B,EAOA,QAAAoC,GAAArC,GACA,GAAAsC,IAAA,GAAAC,GAAAC,OAAAC,SAAAzC,EAAAsB,QAYA,OAXAS,GAAAC,QAAAU,QAAA1C,EAAA2C,QAAA,SAAA1C,GACAqC,EAAAF,QAAAnC,EAAAD,EAAA4C,KAAA3C,MAEA8B,EAAAC,QAAAU,QAAA1C,EAAA6C,QAAA,SAAAxC,GACA,GAAAyC,GAAAR,EAAAS,KAAA1C,EAAAJ,EAAAI,EAAAE,KAAoDyC,OAAA,EAAAC,OAAA,GACpDC,EAAAlD,EAAA+C,KAAA1C,EACAiC,GAAAa,QAAA9C,EAAAJ,EAAAI,EAAAE,GACAyC,OAAAF,EAAAE,OAAAE,EAAAF,OACAC,OAAAG,KAAAC,IAAAP,EAAAG,OAAAC,EAAAD,YAGAX,EAGA,QAAAgB,GAAAtD,GACA,GAAAsC,GAAA,GAAAC,GAAAC,OAA6Ce,WAAAvD,EAAAwD,iBAA+Bf,SAAAzC,EAAAsB,QAS5E,OARAS,GAAAC,QAAAU,QAAA1C,EAAA2C,QAAA,SAAA1C,GACAD,EAAAE,SAAAD,GAAAE,QACAmC,EAAAF,QAAAnC,EAAAD,EAAA4C,KAAA3C,MAGA8B,EAAAC,QAAAU,QAAA1C,EAAA6C,QAAA,SAAAxC,GACAiC,EAAAa,QAAA9C,EAAAL,EAAA+C,KAAA1C,MAEAiC,EAGA,QAAAmB,GAAAzD,GACA,GAAA0D,GAAA3B,EAAAC,QAAA2B,IAAA3D,EAAA2C,QAAA,SAAA1C,GACA,GAAA2D,KAIA,OAHA7B,GAAAC,QAAAU,QAAA1C,EAAA6D,SAAA5D,GAAA,SAAAI,GACAuD,EAAAvD,EAAAE,IAAAqD,EAAAvD,EAAAE,IAAA,GAAAP,EAAA+C,KAAA1C,GAAA2C,SAEAY,GAEA,OAAA7B,GAAAC,QAAA8B,UAAA9D,EAAA2C,QAAAe,GAGA,QAAAK,GAAA/D,GACA,GAAA0D,GAAA3B,EAAAC,QAAA2B,IAAA3D,EAAA2C,QAAA,SAAA1C,GACA,GAAA+D,KAIA,OAHAjC,GAAAC,QAAAU,QAAA1C,EAAAiE,QAAAhE,GAAA,SAAAI,GACA2D,EAAA3D,EAAAJ,IAAA+D,EAAA3D,EAAAJ,IAAA,GAAAD,EAAA+C,KAAA1C,GAAA2C,SAEAgB,GAEA,OAAAjC,GAAAC,QAAA8B,UAAA9D,EAAA2C,QAAAe,GAOA,QAAAQ,GAAAC,EAAAC,GACA,GAAAC,GAAAF,EAAAE,EACAC,EAAAH,EAAAG,EAIAC,EAAAH,EAAAC,IACAG,EAAAJ,EAAAE,IACA/D,EAAA4D,EAAAM,MAAA,EACAC,EAAAP,EAAAQ,OAAA,CAEA,KAAAJ,IAAAC,EACA,SAAAI,OAAA,4DAGA,IAAAC,GAAAC,CAiBA,OAhBA1B,MAAA2B,IAAAP,GAAAjE,EAAA6C,KAAA2B,IAAAR,GAAAG,GAEAF,EAAA,IACAE,MAEAG,EAAAH,EAAAH,EAAAC,EACAM,EAAAJ,IAGAH,EAAA,IACAhE,MAEAsE,EAAAtE,EACAuE,EAAAvE,EAAAiE,EAAAD,IAGUF,IAAAQ,EAAAP,IAAAQ,GAOV,QAAAE,GAAAhF,GACA,GAAAiF,GAAAlD,EAAAC,QAAA2B,IAAA5B,EAAAC,QAAAkD,MAAAC,EAAAnF,GAAA,cACA,UASA,OAPA+B,GAAAC,QAAAU,QAAA1C,EAAA2C,QAAA,SAAA1C,GACA,GAAA2C,GAAA5C,EAAA4C,KAAA3C,GACAmF,EAAAxC,EAAAwC,IACArD,GAAAC,QAAAqD,YAAAD,KACAH,EAAAG,GAAAxC,EAAA0C,OAAArF,KAGAgF,EAOA,QAAAM,GAAAvF,GACA,GAAAwF,GAAAzD,EAAAC,QAAAwD,IAAAzD,EAAAC,QAAA2B,IAAA3D,EAAA2C,QAAA,SAAA1C,GACA,MAAAD,GAAA4C,KAAA3C,GAAAmF,OAEArD,GAAAC,QAAAU,QAAA1C,EAAA2C,QAAA,SAAA1C,GACA,GAAA2C,GAAA5C,EAAA4C,KAAA3C,EACA8B,GAAAC,QAAAyD,IAAA7C,EAAA,UACAA,EAAAwC,MAAAI,KAKA,QAAAE,GAAA1F,GAEA,GAAA2F,GAAA5D,EAAAC,QAAAwD,IAAAzD,EAAAC,QAAA2B,IAAA3D,EAAA2C,QAAA,SAAA1C,GACA,MAAAD,GAAA4C,KAAA3C,GAAAmF,QAGAQ,IACA7D,GAAAC,QAAAU,QAAA1C,EAAA2C,QAAA,SAAA1C,GACA,GAAAmF,GAAApF,EAAA4C,KAAA3C,GAAAmF,KAAAO,CACAC,GAAAR,KACAQ,EAAAR,OAEAQ,EAAAR,GAAAS,KAAA5F,IAGA,IAAA6F,GAAA,EACAC,EAAA/F,EAAAsB,QAAAyE,cACAhE,GAAAC,QAAAU,QAAAkD,EAAA,SAAAI,EAAAC,GACAlE,EAAAC,QAAAqD,YAAAW,IAAAC,EAAAF,GAAA,IACAD,EACKA,GACL/D,EAAAC,QAAAU,QAAAsD,EAAA,SAAA/F,GACAD,EAAA4C,KAAA3C,GAAAmF,MAAAU,MAMA,QAAAI,GAAAlG,EAAAmG,EAAAf,EAAAE,GACA,GAAA1C,IACA6B,MAAA,EACAE,OAAA,EAMA,OAJAyB,WAAAjG,QAAA,IACAyC,EAAAwC,OACAxC,EAAA0C,SAEA1D,EAAA5B,EAAA,SAAA4C,EAAAuD,GAGA,QAAAhB,GAAAnF,GACA,MAAA+B,GAAAC,QAAAqB,IAAAtB,EAAAC,QAAA2B,IAAA3D,EAAA2C,QAAA,SAAA1C,GACA,GAAAmF,GAAApF,EAAA4C,KAAA3C,GAAAmF,IACA,KAAArD,EAAAC,QAAAqD,YAAAD,GACA,MAAAA,MAUA,QAAAiB,GAAAC,EAAAC,GACA,GAAAC,IAAgBC,OAAAC,OAQhB,OAPA3E,GAAAC,QAAAU,QAAA4D,EAAA,SAAAK,GACAJ,EAAAI,GACAH,EAAAC,IAAAZ,KAAAc,GAEAH,EAAAE,IAAAb,KAAAc,KAGAH,EAOA,QAAAI,GAAApG,EAAA+F,GACA,GAAAM,GAAA9E,EAAAC,QAAA8E,KACA,KACA,MAAAP,KACG,QACHQ,QAAAC,IAAAxG,EAAA,WAAAuB,EAAAC,QAAA8E,MAAAD,GAAA,OAIA,QAAAI,GAAAzG,EAAA+F,GACA,MAAAA,KAxPAW,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAEAhH,EAAAiC,eACAjC,EAAA0C,WACA1C,EAAA2D,qBACA3D,EAAA8D,mBACA9D,EAAAoE,qBACApE,EAAAuE,gBACAvE,EAAAqF,mBACArF,EAAA4F,iBACA5F,EAAA+F,mBACA/F,EAAAuG,gBACAvG,EAAAwF,UACAxF,EAAA0G,YACA1G,EAAAiH,OACAjH,EAAAsH,QAEA,IAAAG,GAAAxH,EAAA,GAEAmC,EAIA,SAAAsF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAJ7ED,GAEA7E,EAAA3C,EAAA,IAqOAD,GAAAqC,SACAkE,gBACAtE,eACA0B,qBACA0B,mBACAd,gBACAiB,UACAkB,YACAtC,qBACAwB,iBACA0B,SACAvB,mBACArD,WACAoB,mBACAmD,SH8FMW,IACA,SAAU7H,EAAQC,EAASC,GI5UjC,GAAA4H,GAAA5H,EAAA,KACA4C,EAAA5C,EAAA,KACA6H,EAAA7H,EAAA,IAEAF,GAAAC,SACA6H,MACAhF,QACAiF,SJkXMC,IACA,SAAUhI,EAAQC,EAASC,GAEjC,YKxZAF,GAAAC,QAAAC,EAAA,MAAA+H,OAAAC,IL+ZMC,IACA,SAAUnI,EAAQC,EAASC,GAEjC,YMlaAF,GAAAC,QAAAC,EAAA,IAAA+H,OAAApG,GNyaMuG,IACA,SAAUpI,EAAQC,EAASC,GO5ajC,GAAAmI,GAAAC,GAAA,WAQA,QAAAC,GAAArF,GACA,MAAAA,OAAAsF,eAAAtF,EAAAuF,UAAAvF,GAAAwF,gBAEA,QAAAC,GAAAzF,GACA,MAAAA,OAAAsF,eAAAtF,EAAAsF,cAAAI,aAAA1F,EAAAuF,UAAAvF,KAAA0F,aAiCA,QAAAC,GAAAC,EAAAC,GACA,MAAAD,GAAAC,GAAA,EAAAD,EAAAC,EAAA,EAAAD,GAAAC,EAAA,EAAAC,IA8DA,QAAAC,GAAAtE,GACA,cAAAA,EAAAqE,KAAArE,EAEA,QAAAuE,GAAAvE,GACA,OAAAwE,MAAAxE,GA0DA,QAAAyE,GAAAC,GACA,OACAC,KAAA,SAAAR,EAAAnE,EAAA4E,EAAAC,GAGA,IAFA9C,UAAAjG,OAAA,IAAA8I,EAAA,GACA7C,UAAAjG,OAAA,IAAA+I,EAAAV,EAAArI,QACA8I,EAAAC,GAAA,CACA,GAAAC,GAAAF,EAAAC,IAAA,CACAH,GAAAP,EAAAW,GAAA9E,GAAA,EAAA4E,EAAAE,EAAA,EAAmDD,EAAAC,EAEnD,MAAAF,IAEAG,MAAA,SAAAZ,EAAAnE,EAAA4E,EAAAC,GAGA,IAFA9C,UAAAjG,OAAA,IAAA8I,EAAA,GACA7C,UAAAjG,OAAA,IAAA+I,EAAAV,EAAArI,QACA8I,EAAAC,GAAA,CACA,GAAAC,GAAAF,EAAAC,IAAA,CACAH,GAAAP,EAAAW,GAAA9E,GAAA,EAAA6E,EAAAC,EAA+CF,EAAAE,EAAA,EAE/C,MAAAF,KA2CA,QAAAI,GAAAC,GACA,MAAAA,GAAAnJ,OAmDA,QAAAoJ,GAAAlF,GAEA,IADA,GAAAmF,GAAA,EACAnF,EAAAmF,EAAA,GAAAA,GAAA,EACA,OAAAA,GAEA,QAAAC,GAAAC,EAAAC,GACA,OAAAC,KAAAD,GACAzC,OAAAC,eAAAuC,EAAAG,UAAAD,GACAjD,MAAAgD,EAAAC,GACAE,YAAA,IAkBA,QAAAC,KACAC,KAAAzI,EAAA2F,OAAA+C,OAAA,MAgCA,QAAAC,GAAAN,GACA,OAAAA,GAAA,MAAAO,IAAAP,EAAA,KAAAQ,MAAAR,IAEA,QAAAS,GAAAT,GACA,OAAAA,GAAA,SAAAQ,GAAAR,EAAAU,MAAA,GAAAV,EAEA,QAAAW,GAAAX,GACA,MAAAM,GAAAN,IAAAI,MAAAzI,EAEA,QAAAiJ,GAAAZ,GACA,OAAAA,EAAAM,EAAAN,KAAAI,MAAAzI,SAAAyI,MAAAzI,EAAAqI,GAEA,QAAAa,KACA,GAAAC,KACA,QAAAd,KAAAI,MAAAzI,EAAAmJ,EAAA7E,KAAAwE,EAAAT,GACA,OAAAc,GAEA,QAAAC,KACA,GAAAC,GAAA,CACA,QAAAhB,KAAAI,MAAAzI,IAAAqJ,CACA,OAAAA,GAEA,QAAAC,KACA,OAAAjB,KAAAI,MAAAzI,EAAA,QACA,UAsEA,QAAAuJ,KACAd,KAAAzI,EAAA2F,OAAA+C,OAAA,MAiBA,QAAAc,GAAAzB,GACA,MAAAA,GAOA,QAAA0B,GAAAC,EAAAC,EAAAC,GACA,kBACA,GAAAxE,GAAAwE,EAAAC,MAAAF,EAAA9E,UACA,OAAAO,KAAAuE,EAAAD,EAAAtE,GAGA,QAAA0E,GAAAC,EAAA9K,GACA,GAAAA,IAAA8K,GAAA,MAAA9K,EACAA,KAAA+K,OAAA,GAAAC,cAAAhL,EAAA8J,MAAA,EACA,QAAArE,GAAA,EAAAwF,EAAAC,GAAAvL,OAAiD8F,EAAAwF,IAAOxF,EAAA,CACxD,GAAA0F,GAAAD,GAAAzF,GAAAzF,CACA,IAAAmL,IAAAL,GAAA,MAAAK,IAIA,QAAAC,MAMA,QAAAC,MAeA,QAAAC,GAAAC,GAEA,QAAAC,KAEA,IADA,GAAAC,GAAAC,EAAAC,EAAAlG,GAAA,EAAAwF,EAAAS,EAAA/L,SACA8F,EAAAwF,IAAAQ,EAAAC,EAAAjG,GAAAmG,KAAAH,EAAAb,MAAApB,KAAA5D,UACA,OAAA2F,GAJA,GAAAI,MAAAE,EAAA,GAAAtC,EAmBA,OAbAiC,GAAAI,GAAA,SAAA5L,EAAA8L,GACA,GAAArG,GAAAgG,EAAAI,EAAAE,IAAA/L,EACA,OAAA4F,WAAAjG,OAAA,EAAA8L,KAAAG,IACAH,IACAA,EAAAG,GAAA,KACAD,IAAA7B,MAAA,EAAArE,EAAAkG,EAAAK,QAAAP,IAAAQ,OAAAN,EAAA7B,MAAArE,EAAA,IACAoG,EAAAK,OAAAlM,IAEA8L,GAAAH,EAAAtG,KAAAwG,EAAAM,IAAAnM,GACA4L,GAAAE,KAEAP,IAEAC,EAGA,QAAAY,KACAhF,GAAAoE,MAAAa,iBAEA,QAAAC,KAEA,IADA,GAAAC,GAAA1M,EAAAuH,GAAAoE,MACAe,EAAA1M,EAAA2M,aAAA3M,EAAA0M,CACA,OAAA1M,GAEA,QAAA4M,GAAAhC,GAEA,IADA,GAAAc,GAAA,GAAAF,GAAA5F,EAAA,EAAAwF,EAAArF,UAAAjG,SACA8F,EAAAwF,GAAAM,EAAA3F,UAAAH,IAAA6F,EAAAC,EAaA,OAZAA,GAAAmB,GAAA,SAAAC,EAAAC,GACA,gBAAAC,GACA,IACA,GAAAC,GAAAD,EAAAL,YAAApF,GAAAoE,KACAqB,GAAApC,SACArD,GAAAoE,MAAAqB,EACAtB,EAAAsB,EAAAxL,MAAAuJ,MAAA+B,EAAAC,GACS,QACTxF,GAAAoE,MAAAsB,KAIAvB,EAWA,QAAAwB,GAAAC,GAEA,MADAC,IAAAD,EAAAE,IACAF,EAyCA,QAAAG,GAAAC,GACA,wBAAAA,KAAA,WACA,MAAAC,IAAAD,EAAA5D,OAgBA,QAAA8D,GAAAF,GACA,wBAAAA,KAAA,WACA,MAAAG,IAAAH,EAAA5D,OAkCA,QAAAgE,GAAAxN,EAAAmG,GAEA,QAAAsH,KACAjE,KAAAkE,gBAAA1N,GAEA,QAAA2N,KACAnE,KAAAoE,kBAAA5N,EAAA6N,MAAA7N,EAAA8N,OAEA,QAAAC,KACAvE,KAAAwE,aAAAhO,EAAAmG,GAEA,QAAA8H,KACAzE,KAAA0E,eAAAlO,EAAA6N,MAAA7N,EAAA8N,MAAA3H,GAEA,QAAAgI,KACA,GAAAtK,GAAAsC,EAAAyE,MAAApB,KAAA5D,UACA,OAAA/B,EAAA2F,KAAAkE,gBAAA1N,GAAgDwJ,KAAAwE,aAAAhO,EAAA6D,GAEhD,QAAAuK,KACA,GAAAvK,GAAAsC,EAAAyE,MAAApB,KAAA5D,UACA,OAAA/B,EAAA2F,KAAAoE,kBAAA5N,EAAA6N,MAAA7N,EAAA8N,OAAoEtE,KAAA0E,eAAAlO,EAAA6N,MAAA7N,EAAA8N,MAAAjK,GAEpE,MArBA7D,GAAAoH,GAAAiH,GAAAC,QAAAtO,GAqBA,MAAAmG,EAAAnG,EAAA8N,MAAAH,EAAAF,EAAA,kBAAAtH,GAAAnG,EAAA8N,MAAAM,EAAAD,EAAAnO,EAAA8N,MAAAG,EAAAF,EAEA,QAAAQ,GAAAhC,GACA,MAAAA,GAAAiC,OAAArO,QAAA,YAmBA,QAAAsO,GAAAzO,GACA,UAAA0O,QAAA,aAAAtH,GAAAuH,QAAA3O,GAAA,kBAEA,QAAA4O,GAAA5O,GACA,OAAAA,EAAA,IAAAwO,OAAAK,MAAA,SAEA,QAAAC,GAAA9O,EAAAmG,GAGA,QAAA4I,KAEA,IADA,GAAAtJ,IAAA,IACAA,EAAAwF,GAAAjL,EAAAyF,GAAA+D,KAAArD,GAEA,QAAA6I,KAEA,IADA,GAAAvJ,IAAA,EAAA5B,EAAAsC,EAAAyE,MAAApB,KAAA5D,aACAH,EAAAwF,GAAAjL,EAAAyF,GAAA+D,KAAA3F,GARA7D,EAAA4O,EAAA5O,GAAAmD,IAAA8L,EACA,IAAAhE,GAAAjL,EAAAL,MASA,yBAAAwG,GAAA6I,EAAAD,EAEA,QAAAE,GAAAjP,GACA,GAAAkP,GAAAT,EAAAzO,EACA,iBAAAoC,EAAA+D,GACA,GAAAgJ,EAAA/M,EAAAgN,UAAA,MAAAjJ,GAAAgJ,EAAAE,IAAArP,GAAAmP,EAAAjD,OAAAlM,EACA,IAAAmP,GAAA/M,EAAAkN,aAAA,YACAnJ,IACA+I,EAAAK,UAAA,EACAL,EAAAM,KAAAL,IAAA/M,EAAA4L,aAAA,QAAAO,EAAAY,EAAA,IAAAnP,KAEAoC,EAAA4L,aAAA,QAAAO,EAAAY,EAAAhP,QAAA+O,EAAA,QAoBA,QAAAO,GAAAzP,EAAAmG,EAAAuJ,GACA,QAAAC,KACAnG,KAAAoG,MAAAC,eAAA7P,GAEA,QAAA8P,KACAtG,KAAAoG,MAAAG,YAAA/P,EAAAmG,EAAAuJ,GAEA,QAAAM,KACA,GAAAnM,GAAAsC,EAAAyE,MAAApB,KAAA5D,UACA,OAAA/B,EAAA2F,KAAAoG,MAAAC,eAAA7P,GAAqDwJ,KAAAoG,MAAAG,YAAA/P,EAAA6D,EAAA6L,GAErD,aAAAvJ,EAAAwJ,EAAA,kBAAAxJ,GAAA6J,EAAAF,EAUA,QAAAG,GAAAjQ,EAAAmG,GACA,QAAA+J,WACA1G,MAAAxJ,GAEA,QAAAmQ,KACA3G,KAAAxJ,GAAAmG,EAEA,QAAAiK,KACA,GAAAvM,GAAAsC,EAAAyE,MAAApB,KAAA5D,UACA,OAAA/B,QAAA2F,MAAAxJ,GAAuCwJ,KAAAxJ,GAAA6D,EAEvC,aAAAsC,EAAA+J,EAAA,kBAAA/J,GAAAiK,EAAAD,EA4BA,QAAAE,GAAArQ,GACA,QAAAyJ,KACA,GAAA9B,GAAA6B,KAAA9B,cAAA4I,EAAA9G,KAAA+G,YACA,OAAAD,KAAAE,IAAA7I,EAAAC,gBAAA2I,eAAAC,GAAA7I,EAAA8I,cAAAzQ,GAAA2H,EAAA+I,gBAAAJ,EAAAtQ,GAEA,QAAA2Q,KACA,MAAAnH,MAAA9B,cAAAgJ,gBAAA1Q,EAAA6N,MAAA7N,EAAA8N,OAEA,wBAAA9N,QAAAoH,GAAAiH,GAAAC,QAAAtO,IAAA8N,MAAA6C,EAAAlH,EAYA,QAAAmH,KACA,GAAAC,GAAArH,KAAAsH,UACAD,MAAAE,YAAAvH,MAmFA,QAAAwH,GAAAC,GACA,OACAC,SAAAD,GAoBA,QAAAE,GAAA/D,GACA,kBACA,MAAAgE,IAAA5H,KAAA4D,IAmBA,QAAAiE,GAAAC,GAEA,MADA1L,WAAAjG,SAAA2R,EAAAvJ,GACA,SAAAC,EAAAC,GACA,MAAAD,IAAAC,EAAAqJ,EAAAtJ,EAAAkJ,SAAAjJ,EAAAiJ,WAAAlJ,GAAAC,GAQA,QAAAsJ,GAAAvE,EAAAwE,GACA,OAAAC,GAAA,EAAAC,EAAA1E,EAAArN,OAAsC8R,EAAAC,EAAOD,IAC7C,OAAArP,GAAAuP,EAAA3E,EAAAyE,GAAAhM,EAAA,EAAAwF,EAAA0G,EAAAhS,OAAgE8F,EAAAwF,EAAOxF,KACvErD,EAAAuP,EAAAlM,KAAA+L,EAAApP,EAAAqD,EAAAgM,EAGA,OAAAzE,GA0BA,QAAA4E,GAAA/Q,GAEA,MADAoM,IAAApM,EAAAgR,IACAhR,EA+BA,QAAAiR,GAAAC,GACA,GAAAC,GAAAC,CACA,iBAAAnJ,EAAArD,EAAAgM,GACA,GAAArP,GAAAuP,EAAAI,EAAAN,GAAAS,OAAAjH,EAAA0G,EAAAhS,MAGA,KAFA8R,GAAAQ,MAAAR,EAAAO,EAAA,GACAvM,GAAAuM,MAAAvM,EAAA,KACArD,EAAAuP,EAAAK,SAAA/G,IACA,MAAA7I,IAsCA,QAAA+P,GAAA9Q,EAAAyK,EAAAsG,GAKA,QAAAC,KACA,GAAA5G,GAAAjC,KAAAxJ,EACAyL,KACAjC,KAAA8I,oBAAAjR,EAAAoK,IAAA8G,SACA/I,MAAAxJ,IAGA,QAAAwS,KACA,GAAA/G,GAAAgH,EAAA3G,EAAA4G,GAAA9M,WACAyM,GAAAM,KAAAnJ,MACAA,KAAAoJ,iBAAAvR,EAAAmI,KAAAxJ,GAAAyL,IAAA8G,EAAAH,GACA3G,EAAA1K,EAAA+K,EAEA,QAAA+G,KACA,GAAAC,GAAA5D,EAAA,GAAAR,QAAA,eAAAtH,GAAAuH,QAAAtN,GAAA,IACA,QAAArB,KAAAwJ,MACA,GAAAsJ,EAAA9S,EAAA8S,MAAA5D,GAAA,CACA,GAAAzD,GAAAjC,KAAAxJ,EACAwJ,MAAA8I,oBAAAQ,EAAA,GAAArH,IAAA8G,SACA/I,MAAAxJ,IAvBA,GAAAA,GAAA,OAAAqB,EAAAoE,EAAApE,EAAA2K,QAAA,KAAAyG,EAAAM,CACAtN,GAAA,IAAApE,IAAAyI,MAAA,EAAArE,GACA,IAAAuN,GAAAC,GAAAlH,IAAA1K,EAyBA,OAxBA2R,KAAA3R,EAAA2R,EAAAP,EAAAS,GAwBAzN,EAAAqG,EAAA0G,EAAAH,EAAAvG,EAAAV,EAAAyH,EAWA,QAAAE,GAAAjH,EAAAc,GACA,gBAAA/M,GACA,GAAAsT,GAAA/L,GAAAoE,KACApE,IAAAoE,MAAA3L,EACA+M,EAAA,GAAApD,KAAA0H,QACA,KACApF,EAAAlB,MAAApB,KAAAoD,GACO,QACPxF,GAAAoE,MAAA2H,IAIA,QAAAD,GAAApH,EAAAc,GACA,GAAAnB,GAAAsH,EAAAjH,EAAAc,EACA,iBAAA/M,GACA,GAAA4K,GAAAjB,KAAA4J,EAAAvT,EAAAwT,aACAD,SAAA3I,GAAA,EAAA2I,EAAAE,wBAAA7I,KACAgB,EAAAkH,KAAAlI,EAAA5K,IAKA,QAAA0T,IAAAnR,GACA,GAAApC,GAAA,oBAAAwT,GAAAC,EAAA,QAAAzT,EAAAD,EAAAqH,GAAAsM,OAAA7L,EAAAzF,IAAAwJ,GAAA,YAAA5L,EAAAoM,GAAAR,GAAA,YAAA5L,EAAAoM,GAAAR,GAAA,cAAA5L,EAAAoM,EAIA,IAHA,MAAAuH,KACAA,KAAA,iBAAAvR,KAAAyI,EAAAzI,EAAAwN,MAAA,eAEA+D,GAAA,CACA,GAAA/D,GAAAnI,EAAArF,GAAAwN,MAAA8D,EAAA9D,EAAA+D,GACA/D,GAAA+D,IAAA,OAEA,gBAAAC,GAGA,GAFA7T,EAAA6L,GAAA5L,EAAA,MACA2T,KAAA/D,EAAA+D,IAAAD,GACAE,EAAA,CACA,GAAAC,GAAA,WACA9T,EAAA6L,GAAA6H,EAAA,MAEA1T,GAAA6L,GAAA6H,EAAA,WACArH,IACAyH,MACS,GACTC,WAAAD,EAAA,KAQA,QAAAE,IAAAC,EAAAnU,GACAA,EAAAoU,iBAAApU,IAAAoU,eAAA,GACA,IAAAC,GAAAF,EAAAG,iBAAAH,CACA,IAAAE,EAAAE,eAAA,CACA,GAAAxQ,GAAAsQ,EAAAE,gBACA,IAAAC,GAAA,GACA,GAAAlN,GAAAU,EAAAmM,EACA,IAAA7M,EAAAmN,SAAAnN,EAAAoN,QAAA,CACAL,EAAA9M,GAAAsM,OAAA,QAAAc,OAAA,OAAA5E,OACA6E,SAAA,WACAC,IAAA,EACAlM,KAAA,EACAmM,OAAA,EACAC,QAAA,EACAC,OAAA,QACW,YACX,IAAAC,GAAAZ,EAAA,MAAAa,cACAV,MAAAS,EAAAE,GAAAF,EAAAjV,GACAqU,EAAAhI,UAMA,MAHAmI,KAAAzQ,EAAAC,EAAAhE,EAAAoV,MAAArR,EAAAE,EAAAjE,EAAAqV,QAAkEtR,EAAAC,EAAAhE,EAAAsV,QAClEvR,EAAAE,EAAAjE,EAAAuV,SACAxR,IAAAyR,gBAAArB,EAAAe,eAAAO,YACA1R,EAAAC,EAAAD,EAAAE,GAEA,GAAAH,GAAAqQ,EAAAuB,uBACA,QAAA1V,EAAAsV,QAAAxR,EAAA6E,KAAAwL,EAAAwB,WAAA3V,EAAAuV,QAAAzR,EAAA+Q,IAAAV,EAAAyB,WA2DA,QAAAC,MACA,MAAAtO,IAAAoE,MAAAyI,eAAA,GAAA0B,WAWA,QAAAC,IAAA/R,GACA,MAAAA,GAAA,IAAAA,EAAA,OAEA,QAAAgS,IAAA7N,EAAAC,EAAAkH,GACA,OAAAlH,EAAA,GAAAD,EAAA,KAAAmH,EAAA,GAAAnH,EAAA,KAAAC,EAAA,GAAAD,EAAA,KAAAmH,EAAA,GAAAnH,EAAA,IAEA,QAAA8N,IAAAjS,GACA,MAAAA,GAAA,IAAAA,GAAA,EAAAkS,GAAAnT,KAAAoT,KAAAnS,GAEA,QAAAoS,IAAApS,GACA,MAAAA,GAAA,EAAAqS,GAAArS,GAAA,GAAAqS,GAAAtT,KAAAuT,KAAAtS,GAEA,QAAAuS,IAAAvS,GACA,QAAAA,EAAAjB,KAAAyT,IAAAxS,IAAA,EAAAA,GAAA,EAEA,QAAAyS,IAAAzS,GACA,QAAAA,EAAAjB,KAAAyT,IAAAxS,IAAA,EAAAA,GAAA,EAEA,QAAA0S,IAAA1S,GACA,QAAAA,EAAAjB,KAAAyT,IAAA,EAAAxS,IAAA,IAAAA,EAAA,GAEA,QAAA2S,IAAA3S,GACA,OAAAA,EAAAjB,KAAA6T,IAAA5S,EAAA,IAAAA,EAuSA,QAAA6S,OAKA,QAAAC,IAAAzS,EAAAqI,EAAAd,GACA,MAAAjC,gBAAAmN,KAAAnN,KAAAtF,KAAAsF,KAAA+C,UAAA/C,KAAAiC,OAAA7F,UAAAjG,OAAA,EAAAuE,YAAAyS,IAAA,GAAAA,IAAAzS,MAAAqI,EAAArI,EAAAuH,GAAAmL,GAAA,GAAA1S,EAAA2S,GAAAF,IAAA,GAAAA,IAAAzS,EAAAqI,EAAAd,GAcA,QAAAqL,IAAA5S,EAAAqI,EAAAd,GAOA,QAAAhM,GAAAyE,GAEA,MADAA,GAAA,IAAAA,GAAA,IAA4BA,EAAA,IAAAA,GAAA,KAC5BA,EAAA,GAAA6S,GAAAC,EAAAD,GAAA7S,EAAA,GACAA,EAAA,IAAA8S,EACA9S,EAAA,IAAA6S,GAAAC,EAAAD,IAAA,IAAA7S,GAAA,GACA6S,EAEA,QAAAE,GAAA/S,GACA,MAAAtB,MAAAsU,MAAA,IAAAzX,EAAAyE,IAdA,GAAA6S,GAAAC,CAgBA,OAfA9S,GAAAmE,MAAAnE,GAAA,GAAAA,GAAA,OAAAA,EAAA,IAAAA,EACAqI,EAAAlE,MAAAkE,GAAA,EAAAA,EAAA,IAAAA,EAAA,IAAAA,EACAd,IAAA,IAAAA,EAAA,IAAAA,EACAuL,EAAAvL,GAAA,GAAAA,GAAA,EAAAc,GAAAd,EAAAc,EAAAd,EAAAc,EACAwK,EAAA,EAAAtL,EAAAuL,EAWA,GAAAG,IAAAF,EAAA/S,EAAA,KAAA+S,EAAA/S,GAAA+S,EAAA/S,EAAA,MAGA,QAAAkT,IAAAlT,EAAAiL,EAAA1D,GACA,MAAAjC,gBAAA4N,KAAA5N,KAAAtF,KAAAsF,KAAA2F,UAAA3F,KAAAiC,OAAA7F,UAAAjG,OAAA,EAAAuE,YAAAkT,IAAA,GAAAA,IAAAlT,MAAAiL,EAAAjL,EAAAuH,GAAAvH,YAAAmT,IAAAC,GAAApT,EAAAuH,EAAAvH,EAAA8D,EAAA9D,EAAA+D,GAAAqP,IAAApT,EAAAqT,IAAArT,EAAAkD,GAAAoQ,IAAAtT,IAAAuT,EAAAvT,EAAA1E,EAAA0E,EAAA+D,IAAAwD,EAAAvH,EAAA8D,EAAA9D,EAAA+D,GAAA,GAAAmP,IAAAlT,EAAAiL,EAAA1D,GAYA,QAAAiM,IAAAxT,EAAAiL,EAAA1D,GAGA,MAFApD,OAAAnE,OAAA,GACAmE,MAAA8G,OAAA,GACA,GAAAkI,IAAA5L,EAAA7I,KAAA+U,IAAAzT,GAAA0T,IAAAzI,EAAAvM,KAAA6T,IAAAvS,GAAAiL,GAGA,QAAAkI,IAAA5L,EAAAzD,EAAAC,GACA,MAAAuB,gBAAA6N,KAAA7N,KAAAiC,KAAAjC,KAAAxB,UAAAwB,KAAAvB,OAAArC,UAAAjG,OAAA,EAAA8L,YAAA4L,IAAA,GAAAA,IAAA5L,MAAAzD,EAAAyD,EAAAxD,GAAAwD,YAAA2L,IAAAM,GAAAjM,EAAAvH,EAAAuH,EAAA0D,EAAA1D,KAAA8L,IAAA9L,EAAA0L,GAAA1L,IAAAgM,EAAAhM,EAAAjM,EAAAiM,EAAAxD,GAAA,GAAAoP,IAAA5L,EAAAzD,EAAAC,GAcA,QAAA4P,IAAApM,EAAAzD,EAAAC,GACA,GAAAnE,IAAA2H,EAAA,QAAA5H,EAAAC,EAAAkE,EAAA,IAAA0D,EAAA5H,EAAAmE,EAAA,GAIA,OAHApE,GAAAiU,GAAAjU,GAAAkU,GACAjU,EAAAgU,GAAAhU,GAAAkU,GACAtM,EAAAoM,GAAApM,GAAAuM,GACA,GAAAd,IAAAe,GAAA,UAAArU,EAAA,UAAAC,EAAA,SAAA4H,GAAAwM,IAAA,QAAArU,EAAA,UAAAC,EAAA,QAAA4H,GAAAwM,GAAA,SAAArU,EAAA,SAAAC,EAAA,UAAA4H,IAEA,QAAA4L,IAAA7L,EAAAzD,EAAAC,GACA,MAAAwD,GAAA,KAAA2L,IAAAxU,KAAAuV,MAAAlQ,EAAAD,GAAAoQ,GAAAxV,KAAAyV,KAAArQ,IAAAC,KAAAwD,GAAA,GAAA2L,IAAAlP,QAAAuD,GAEA,QAAAqM,IAAAjU,GACA,MAAAA,GAAA,WAAAA,SAAA,eAEA,QAAAyU,IAAAzU,GACA,MAAAA,GAAA,QAAAjB,KAAA2V,IAAA1U,EAAA,cAAAA,EAAA,KAEA,QAAAqU,IAAAT,GACA,MAAA7U,MAAAsU,MAAA,KAAAO,GAAA,aAAAA,EAAA,MAAA7U,KAAA2V,IAAAd,EAAA,cAGA,QAAAN,IAAAM,EAAAjY,EAAAyI,GACA,MAAAuB,gBAAA2N,KAAA3N,KAAAiO,MAAAjO,KAAAhK,WAAAgK,KAAAvB,QAAArC,UAAAjG,OAAA,EAAA8X,YAAAN,IAAA,GAAAA,IAAAM,MAAAjY,EAAAiY,EAAAxP,GAAA2O,GAAA,GAAAa,EAAAN,GAAAL,IAAA,GAAAK,IAAAM,EAAAjY,EAAAyI,GAEA,QAAAuQ,IAAArS,GACA,UAAAgR,IAAAhR,GAAA,GAAAA,GAAA,UAAAA,GAEA,QAAAsS,IAAAtS,GACA,MAAAqS,IAAArS,GAAA,GAsBA,QAAAuS,IAAAjZ,GACA,MAAAA,GAAA,OAAAmD,KAAAC,IAAA,EAAApD,GAAAkZ,SAAA,IAAA/V,KAAAoC,IAAA,IAAAvF,GAAAkZ,SAAA,IAEA,QAAA/B,IAAAgC,EAAApB,EAAAqB,GACA,GAAA9B,GAAAC,EAAA8B,EAAArB,EAAA,EAAAjY,EAAA,EAAAyI,EAAA,CAEA,IADA8O,EAAA,mBAAAgC,KAAAH,IAAAI,eAGA,OADAhC,EAAAD,EAAA,GAAAlI,MAAA,KACAkI,EAAA,IACA,UAEA,MAAA8B,GAAAI,WAAAjC,EAAA,IAAAiC,WAAAjC,EAAA,QAAAiC,WAAAjC,EAAA,QAGA,WAEA,MAAAQ,GAAA0B,GAAAlC,EAAA,IAAAkC,GAAAlC,EAAA,IAAAkC,GAAAlC,EAAA,KAIA,OAAA8B,EAAAK,GAAApN,IAAA6M,IACApB,EAAAsB,EAAArB,EAAAqB,EAAAtZ,EAAAsZ,EAAA7Q,IAEA,MAAA2Q,GAAA,MAAAA,EAAA7N,OAAA,IAAA1C,MAAAyQ,EAAAM,SAAAR,EAAA9O,MAAA,UACA,IAAA8O,EAAAjZ,QACA8X,GAAA,KAAAqB,IAAA,EACArB,MAAA,EACAjY,EAAA,IAAAsZ,EACAtZ,MAAA,EACAyI,EAAA,GAAA6Q,EACA7Q,MAAA,GACO,IAAA2Q,EAAAjZ,SACP8X,GAAA,SAAAqB,IAAA,GACAtZ,GAAA,MAAAsZ,IAAA,EACA7Q,EAAA,IAAA6Q,IAGAtB,EAAAC,EAAAjY,EAAAyI,IAEA,QAAA4O,IAAAY,EAAAjY,EAAAyI,GACA,GAAA/D,GAAAqI,EAAAvH,EAAApC,KAAAoC,IAAAyS,GAAA,IAAAjY,GAAA,IAAAyI,GAAA,KAAApF,EAAAD,KAAAC,IAAA4U,EAAAjY,EAAAyI,GAAAa,EAAAjG,EAAAmC,EAAAyG,GAAA5I,EAAAmC,GAAA,CASA,OARA8D,IACAyD,EAAAd,EAAA,GAAA3C,GAAAjG,EAAAmC,GAAA8D,GAAA,EAAAjG,EAAAmC,GACAd,EAAAuT,GAAA5U,GAAArD,EAAAyI,GAAAa,GAAAtJ,EAAAyI,EAAA,KAAsDzI,GAAAqD,GAAAoF,EAAAwP,GAAA3O,EAAA,GAAwC2O,EAAAjY,GAAAsJ,EAAA,EAC9F5E,GAAA,KAEAA,EAAAgE,IACAqE,EAAAd,EAAA,GAAAA,EAAA,IAAAvH,GAEA,GAAAyS,IAAAzS,EAAAqI,EAAAd,GAEA,QAAA8L,IAAAE,EAAAjY,EAAAyI,GACAwP,EAAA4B,GAAA5B,GACAjY,EAAA6Z,GAAA7Z,GACAyI,EAAAoR,GAAApR,EACA,IAAApE,GAAAyU,IAAA,SAAAb,EAAA,SAAAjY,EAAA,SAAAyI,GAAA8P,IAAAjU,EAAAwU,IAAA,SAAAb,EAAA,SAAAjY,EAAA,QAAAyI,GAAA+P,GACA,OAAAX,IAAA,IAAAvT,EAAA,QAAAD,EAAAC,GAAA,KAAAA,EADAwU,IAAA,SAAAb,EAAA,QAAAjY,EAAA,SAAAyI,GAAAgQ,MAGA,QAAAoB,IAAA5B,GACA,OAAAA,GAAA,aAAAA,EAAA,MAAA7U,KAAA2V,KAAAd,EAAA,iBAEA,QAAAyB,IAAA/J,GACA,GAAA6F,GAAAiE,WAAA9J,EACA,aAAAA,EAAApE,OAAAoE,EAAAxP,OAAA,GAAAiD,KAAAsU,MAAA,KAAAlC,KA2JA,QAAAsE,IAAA7Z,GACA,wBAAAA,KAAA,WACA,MAAAA,IAKA,QAAA8Z,IAAAC,GACA,gBAAAC,EAAAC,EAAAlI,GAGA,MAFA,KAAA5L,UAAAjG,QAAA,kBAAA+Z,KAAAlI,EAAAkI,EACAA,EAAA,MACAC,GAAAF,EAAAC,EAAAF,EAAAhI,IAGA,QAAAmI,IAAAF,EAAAC,EAAAF,EAAAhI,GAMA,QAAAoI,KACA,GAAA5T,GAAA6T,EAAAC,EAAAD,MACA,KAAAA,GAAAE,GAAAD,IAAAD,GAAA,KAAAA,EAAA,WAAAA,EAAA,CACA,IACA7T,EAAAwT,EAAA7G,KAAAqH,EAAAF,GACS,MAAAja,GAET,WADA0L,GAAA0O,MAAAtH,KAAAqH,EAAAna,GAGA0L,EAAA2O,KAAAvH,KAAAqH,EAAAhU,OAEAuF,GAAA0O,MAAAtH,KAAAqH,EAAAF,GAhBA,GAAAE,MAAgBzO,EAAAnE,GAAAmE,SAAA,wCAAA4O,KAAiFL,EAAA,GAAAM,gBAAAC,EAAA,IAwEjG,QAvEA7Q,KAAA8Q,gBAAA,mBAAAR,KAAA,oBAAAtK,KAAAiK,KAAAK,EAAA,GAAAQ,iBACA,UAAAR,KAAAS,OAAAT,EAAAU,QAAAZ,EAAAE,EAAAW,mBAAA,WACAX,EAAAY,WAAA,GAAAd,KAgBAE,EAAAa,WAAA,SAAAnP,GACA,GAAA2H,GAAA/L,GAAAoE,KACApE,IAAAoE,OACA,KACAD,EAAAqP,SAAAjI,KAAAqH,EAAAF,GACO,QACP1S,GAAAoE,MAAA2H,IAGA6G,EAAAa,OAAA,SAAA7a,EAAAmG,GAEA,MADAnG,MAAA,IAAAgZ,cACApT,UAAAjG,OAAA,EAAAwa,EAAAna,IACA,MAAAmG,QAAAgU,GAAAna,GAA8Cma,EAAAna,GAAAmG,EAAA,GAC9C6T,IAEAA,EAAAN,SAAA,SAAAvT,GACA,MAAAP,WAAAjG,QACA+Z,EAAA,MAAAvT,EAAA,KAAAA,EAAA,GACA6T,GAFAN,GAIAM,EAAAK,aAAA,SAAAlU,GACA,MAAAP,WAAAjG,QACA0a,EAAAlU,EACA6T,GAFAK,GAIAL,EAAAR,SAAA,SAAArT,GAEA,MADAqT,GAAArT,EACA6T,IAEA,cAAA9X,QAAA,SAAAyI,GACAqP,EAAArP,GAAA,WACA,MAAAqP,GAAAc,KAAAlQ,MAAAoP,GAAArP,GAAAsB,OAAAyG,GAAA9M,gBAGAoU,EAAAc,KAAA,SAAAnQ,EAAAsG,EAAAO,GAIA,GAHA,IAAA5L,UAAAjG,QAAA,kBAAAsR,KAAAO,EAAAP,IAAA,MACA6I,EAAAiB,KAAApQ,EAAA8O,GAAA,GACA,MAAAC,GAAA,UAAAS,OAAA,OAAAT,EAAA,QACAI,EAAAkB,iBAAA,OAAAhb,KAAAma,GAAAL,EAAAkB,iBAAAhb,EAAAma,EAAAna,GAQA,OAPA,OAAA0Z,GAAAI,EAAAmB,kBAAAnB,EAAAmB,iBAAAvB,GACA,MAAAW,IAAAP,EAAAO,gBACA,MAAA7I,GAAAwI,EAAApO,GAAA,QAAA4F,GAAA5F,GAAA,gBAAAkO,GACAtI,EAAA,KAAAsI,KAEAvO,EAAA2P,WAAAvI,KAAAqH,EAAAF,GACAA,EAAAgB,KAAA,MAAA7J,EAAA,KAAAA,GACA+I,GAEAA,EAAAmB,MAAA,WAEA,MADArB,GAAAqB,QACAnB,GAEA5S,GAAAgU,OAAApB,EAAAzO,EAAA,MACA,MAAAiG,EAAAwI,IAAAjO,IAAAsP,GAAA7J,IAEA,QAAA6J,IAAA7J,GACA,WAAAA,EAAA7R,OAAA,SAAAsa,EAAAH,GACAtI,EAAA,MAAAyI,EAAAH,EAAA,OACKtI,EAEL,QAAAuI,IAAAD,GACA,GAAAzY,GAAAyY,EAAAO,YACA,OAAAhZ,IAAA,SAAAA,EAAAyY,EAAAN,SAAAM,EAAAwB,aAgHA,QAAAC,IAAA/J,EAAAgK,EAAAC,GACA,GAAAxQ,GAAArF,UAAAjG,MACAsL,GAAA,IAAAuQ,EAAA,GACAvQ,EAAA,IAAAwQ,EAAAC,KAAApV,MACA,IAAAF,GAAAqV,EAAAD,EAAAG,GACAxM,EAAAqC,EACAoK,EAAAxV,EACA6E,EAAA,KASA,OAPA4Q,OAAA5Q,EAAA0Q,EAAyDG,GAAAH,EACzDE,GAAAF,EACAI,KACAC,GAAAC,aAAAD,IACAD,GAAA,EACAG,GAAAC,KAEAR,EAEA,QAAAQ,MACA,GAAA7V,GAAA8V,KAAAZ,EAAAa,KAAA/V,CACAkV,GAAA,IACAc,SAAAd,KACAS,aAAAD,IACAA,GAAAlI,WAAAqI,GAAAX,IAEAO,GAAA,IAEAA,GAAA,EACAG,GAAAC,KAOA,QAAAC,MAEA,IADA,GAAA9V,GAAAoV,KAAApV,MAAAqV,EAAAG,GACAH,GACArV,GAAAqV,EAAAC,GAAAD,EAAAxM,EAAA7I,EAAAqV,EAAAC,KAAAD,EAAAxM,EAAA,MACAwM,IAAA1Q,CAEA,OAAA3E,GAEA,QAAA+V,MAEA,IADA,GAAAE,GAAAC,EAAAV,GAAA1V,EAAAqW,IACAD,GACAA,EAAArN,GACAqN,EAAAZ,EAAAxV,MAAAoW,EAAAZ,GACAY,GAAAD,EAAAC,GAAAvR,GAEAuR,EAAAD,IAAAtR,EAAAuR,EAAAvR,EAAA6Q,GAAAU,EAAAvR,CAIA,OADA4Q,IAAAU,EACAnW,EAEA,QAAAsW,IAAA7Y,EAAA8Y,GACA,MAAAA,IAAA9Y,EAAAjB,KAAAga,KAAAha,KAAA4D,IAAA3C,GAAAjB,KAAAia,MAAA,GAgBA,QAAAC,IAAAhU,EAAArD,GACA,GAAAuD,GAAApG,KAAA2V,IAAA,KAAAhU,GAAA,EAAAkB,GACA,QACAsX,MAAAtX,EAAA,WAAAqD,GACA,MAAAA,GAAAE,GACO,SAAAF,GACP,MAAAA,GAAAE,GAEAgU,OAAAlU,GAGA,QAAAmU,IAAAC,GACA,GAAAC,GAAAD,EAAAE,QAAAC,EAAAH,EAAAI,UAAAC,EAAAL,EAAAM,SAAAC,EAAAP,EAAAQ,SAAAC,EAAAJ,GAAAF,EAAA,SAAAlX,EAAAlC,GAEA,IADA,GAAAwB,GAAAU,EAAAxG,OAAAic,KAAAnK,EAAA,EAAAjS,EAAA+d,EAAA,GAAA5d,EAAA,EACA8F,EAAA,GAAAjG,EAAA,IACAG,EAAAH,EAAA,EAAAyE,IAAAzE,EAAAoD,KAAAC,IAAA,EAAAoB,EAAAtE,IACAic,EAAAvW,KAAAc,EAAAyX,UAAAnY,GAAAjG,EAAAiG,EAAAjG,OACAG,GAAAH,EAAA,GAAAyE,KACAzE,EAAA+d,EAAA9L,KAAA,GAAA8L,EAAA5d,OAEA,OAAAic,GAAAiC,UAAAC,KAAAT,IACK9S,CACL,iBAAAwT,GACA,GAAAjL,GAAAkL,GAAAjF,KAAAgF,GAAAE,EAAAnL,EAAA,QAAAoL,EAAApL,EAAA,QAAAqL,EAAArL,EAAA,QAAAkK,EAAAlK,EAAA,OAAAsL,EAAAtL,EAAA,GAAA7O,GAAA6O,EAAA,GAAAuL,EAAAvL,EAAA,GAAAwL,EAAAxL,EAAA,GAAAzR,EAAAyR,EAAA,GAAAiK,EAAA,EAAApX,EAAA,GAAA4Y,EAAA,GAAAC,GAAA,EAAAC,GAAA,CAMA,QALAH,SAAAV,UAAA,KACAQ,GAAA,MAAAH,GAAA,MAAAC,KACAE,EAAAH,EAAA,IACAC,EAAA,KAEA7c,GACA,QACAgd,GAAA,EACAhd,EAAA,GACA,MAEA,SACA0b,EAAA,IACAwB,EAAA,IACAld,EAAA,GACA,MAEA,SACA0b,EAAA,IACAwB,EAAA,IACAld,EAAA,GACA,MAEA,SACA,QACA,QACA,QACA,MAAA2b,IAAArX,EAAA,IAAAtE,EAAA2X,cAEA,SACAyF,GAAA,CAEA,SACAD,GAAA,EACAF,EAAA,CACA,MAEA,SACAvB,GAAA,EACA1b,EAAA,IAGA,MAAA2b,IAAArX,EAAA8X,EAAA,GAAAc,EAAAd,EAAA,IACA,KAAApc,GAAAid,IAAAjd,EAAA,KACA,MAAAid,IACA,KAAAjd,EAAAid,EAAA1b,KAAAC,IAAA,EAAAD,KAAAoC,IAAA,GAAAsZ,IAA0E,KAAAjd,GAAA,KAAAA,IAAAid,EAAA1b,KAAAC,IAAA,EAAAD,KAAAoC,IAAA,GAAAsZ,MAE1Ejd,EAAAqd,GAAA3S,IAAA1K,IAAAsd,EACA,IAAAC,GAAAR,GAAAC,CACA,iBAAAlY,GACA,GAAA0Y,GAAAN,CACA,IAAAC,GAAArY,EAAA,UACA,IAAA2Y,GAAA3Y,EAAA,OAAAA,GAAA,EAAAA,EAAA,GAAAA,KAAA,WAAAgY,EAAA,GAAAA,CACA,IAAApB,EAAA,GACA,GAAAgC,GAAA3X,GAAA4X,aAAA7Y,EAAAmY,EACAnY,GAAA4Y,EAAAhC,MAAA5W,GACA0Y,EAAAE,EAAA/B,OAAAuB,MAEApY,IAAA4W,CAEA5W,GAAA9E,EAAA8E,EAAAmY,EACA,IAAAW,GAAAC,EAAAzZ,EAAAU,EAAAgZ,YAAA,IACA,IAAA1Z,EAAA,GACA,GAAAgM,GAAAgN,EAAAtY,EAAAgZ,YAAA,OACA1N,GAAA,GAAAwN,EAAA9Y,EAAA+Y,EAAA,KAAgDD,EAAA9Y,EAAAyX,UAAA,EAAAnM,GAAAyN,EAAA/Y,EAAAyX,UAAAnM,QAEhDwN,GAAA9Y,EAAAyX,UAAA,EAAAnY,GACAyZ,EAAA/B,EAAAhX,EAAAyX,UAAAnY,EAAA,IAEA2Y,GAAAC,IAAAY,EAAAtB,EAAAsB,EAAAxC,KACA,IAAA9c,GAAAgG,EAAAhG,OAAAsf,EAAAtf,OAAAuf,EAAAvf,QAAAif,EAAA,EAAAE,EAAAnf,QAAAiV,EAAAjV,EAAAsE,EAAA,GAAAmb,OAAAzf,EAAAsE,EAAAtE,EAAA,GAAAme,KAAAG,GAAA,EAIA,OAHAW,KAAAK,EAAAtB,EAAA/I,EAAAqK,EAAArK,EAAAjV,OAAAsE,EAAAib,EAAAvf,OAAA8c,MACAqC,GAAAnZ,EACAQ,EAAA8Y,EAAAC,GACA,MAAAhB,EAAAY,EAAA3Y,EAAAyO,EAAA,MAAAsJ,EAAAtJ,EAAAkK,EAAA3Y,EAAA,MAAA+X,EAAAtJ,EAAAgJ,UAAA,EAAAje,IAAA,GAAAmf,EAAA3Y,EAAAyO,EAAAgJ,UAAAje,GAAAmf,GAAAF,EAAAzY,EAAAyO,EAAAzO,IAAA0Y,IAkCA,QAAAF,IAAA9a,GACA,MAAAA,GAAA,GAGA,QAAAwb,MACA7V,KAAAzI,EAAA,GAAA2a,MAAA9V,UAAAjG,OAAA,EAAA+b,KAAA4D,IAAA1U,MAAApB,KAAA5D,qBAAA,IAiEA,QAAA2Z,IAAAzR,EAAA0R,EAAAC,GACA,QAAAvI,GAAAwI,GACA,GAAAC,GAAA7R,EAAA4R,GAAAE,EAAAza,EAAAwa,EAAA,EACA,OAAAD,GAAAC,EAAAC,EAAAF,EAAAC,EAAAC,EAEA,QAAAhD,GAAA8C,GAEA,MADAF,GAAAE,EAAA5R,EAAA,GAAA+R,IAAAH,EAAA,OACAA,EAEA,QAAAva,GAAAua,EAAA1W,GAEA,MADAwW,GAAAE,EAAA,GAAAG,KAAAH,GAAA1W,GACA0W,EAEA,QAAAhb,GAAA6X,EAAAC,EAAAsD,GACA,GAAA1Z,GAAAwW,EAAAL,GAAAwD,IACA,IAAAD,EAAA,EACA,KAAA1Z,EAAAoW,GACAiD,EAAArZ,GAAA0Z,GAAAC,EAAA1a,KAAA,GAAAqW,OAAAtV,IACAoZ,EAAApZ,EAAA,OAGA,MAAAA,EAAAoW,GAAAuD,EAAA1a,KAAA,GAAAqW,OAAAtV,IAAAoZ,EAAApZ,EAAA,EAEA,OAAA2Z,GAEA,QAAAC,GAAAzD,EAAAC,EAAAsD,GACA,IACAD,GAAAR,EACA,IAAAY,GAAA,GAAAZ,GAEA,OADAY,GAAAlf,EAAAwb,EACA7X,EAAAub,EAAAzD,EAAAsD,GACO,QACPD,GAAAnE,MAGA5N,EAAAoS,MAAApS,EACAA,EAAAoJ,QACApJ,EAAA8O,OACA9O,EAAA3I,SACA2I,EAAApJ,OACA,IAAAub,GAAAnS,EAAAmS,IAAAE,GAAArS,EAMA,OALAmS,GAAAC,MAAAD,EACAA,EAAA/I,MAAAiJ,GAAAjJ,GACA+I,EAAArD,KAAAuD,GAAAvD,GACAqD,EAAA9a,OAAAgb,GAAAhb,GACA8a,EAAAvb,MAAAsb,EACAlS,EAEA,QAAAqS,IAAAxV,GACA,gBAAA+U,EAAA1W,GACA,IACA6W,GAAAR,EACA,IAAAY,GAAA,GAAAZ,GAEA,OADAY,GAAAlf,EAAA2e,EACA/U,EAAAsV,EAAAjX,GAAAjI,EACO,QACP8e,GAAAnE,OAoDA,QAAA0E,IAAAlD,GAEA,QAAAmD,GAAAC,GAEA,QAAA1H,GAAA8G,GAEA,IADA,GAAAvQ,GAAAwN,EAAA3H,EAAAuL,KAAA9a,GAAA,EAAAgM,EAAA,IACAhM,EAAAwF,GACA,KAAAqV,EAAAE,WAAA/a,KACA8a,EAAAlb,KAAAib,EAAAxW,MAAA2H,EAAAhM,IACA,OAAAkX,EAAA8D,GAAAtR,EAAAmR,EAAAvV,SAAAtF,OAAA0J,EAAAmR,EAAAvV,SAAAtF,KACAuP,EAAA0L,EAAAvR,QAAA6F,EAAA0K,EAAA,MAAA/C,EAAA,MAAAxN,EAAA,QAAAwN,IACA4D,EAAAlb,KAAA8J,GACAsC,EAAAhM,EAAA,EAIA,OADA8a,GAAAlb,KAAAib,EAAAxW,MAAA2H,EAAAhM,IACA8a,EAAAzC,KAAA,IAbA,GAAA7S,GAAAqV,EAAA3gB,MAwCA,OAzBAiZ,GAAA+H,MAAA,SAAAJ,GACA,GAAAzX,IACAhF,EAAA,KACA4N,EAAA,EACA5I,EAAA,EACA8X,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,KAEA,IADSC,EAAAnY,EAAAwX,EAAAC,EAAA,IACTA,EAAA5gB,OAAA,WACA,MAAAmJ,OAAA8X,EAAA9X,EAAA8X,EAAA,MAAA9X,EAAA6T,EACA,IAAAuE,GAAA,MAAApY,EAAAkY,GAAAnB,KAAAR,GAAAK,EAAA,IAAAwB,EAAA7B,GAAAQ,GAOA,OANA,KAAA/W,GAAA4W,EAAAyB,YAAArY,EAAAhF,EAAA,EAAAgF,EAAA2I,GAAoD,KAAA3I,IAAA,KAAAA,IACpD,KAAAA,OAAA/I,EAAA,KAAA+I,GAAA,KACA4W,EAAAyB,YAAArY,EAAAhF,EAAA,KACA4b,EAAAyB,YAAArY,EAAAhF,EAAA,OAAAgF,MAAA/I,EAAA,OAAA+I,EAAAsY,GAAA1B,EAAA2B,SAAA,KAAAvY,EAAA/I,EAAA,EAAA+I,EAAAwY,GAAA5B,EAAA2B,SAAA,OACS3B,EAAAyB,YAAArY,EAAAhF,EAAAgF,EAAA4I,EAAA5I,KACT4W,EAAA6B,SAAAzY,EAAA8X,GAAA9X,EAAAkY,EAAA,OAAAlY,EAAA+X,EAAA/X,EAAAkY,EAAA,IAAAlY,EAAAgY,EAAAhY,EAAAiY,GACAG,EAAAxB,EAAA3e,EAAA2e,GAEA9G,EAAAD,SAAA,WACA,MAAA2H,IAEA1H,EAEA,QAAAqI,GAAAvB,EAAAY,EAAAC,EAAA9O,GAEA,IADA,GAAAtC,GAAAwN,EAAAf,EAAAnW,EAAA,EAAAwF,EAAAqV,EAAA3gB,OAAA+R,EAAA6O,EAAA5gB,OACA8F,EAAAwF,GAAA,CACA,GAAAwG,GAAAC,EAAA,QAEA,UADAvC,EAAAmR,EAAAE,WAAA/a,OAIA,GAFAmW,EAAA0E,EAAAvV,OAAAtF,OACAkX,EAAA6E,EAAA5F,IAAA6E,IAAAH,EAAAvV,OAAAtF,KAAAmW,MACAnK,EAAAkL,EAAA+C,EAAAa,EAAA9O,IAAA,eACS,IAAAtC,GAAAoR,EAAAC,WAAA/O,KACT,SAGA,MAAAA,GA2HA,QAAAgQ,GAAA/B,EAAAa,EAAA9a,GACAic,EAAAnS,UAAA,CACA,IAAAtE,GAAAyW,EAAA3I,KAAAwH,EAAAzW,MAAArE,GACA,OAAAwF,IAAAyU,EAAA3f,EAAA4hB,EAAA5V,IAAAd,EAAA,GAAA+N,eAAAvT,EAAAwF,EAAA,GAAAtL,SAAA,EAEA,QAAAiiB,GAAAlC,EAAAa,EAAA9a,GACAoc,EAAAtS,UAAA,CACA,IAAAtE,GAAA4W,EAAA9I,KAAAwH,EAAAzW,MAAArE,GACA,OAAAwF,IAAAyU,EAAA3f,EAAA+hB,EAAA/V,IAAAd,EAAA,GAAA+N,eAAAvT,EAAAwF,EAAA,GAAAtL,SAAA,EAEA,QAAAoiB,GAAArC,EAAAa,EAAA9a,GACAuc,EAAAzS,UAAA,CACA,IAAAtE,GAAA+W,EAAAjJ,KAAAwH,EAAAzW,MAAArE,GACA,OAAAwF,IAAAyU,EAAAhO,EAAAuQ,EAAAlW,IAAAd,EAAA,GAAA+N,eAAAvT,EAAAwF,EAAA,GAAAtL,SAAA,EAEA,QAAAuiB,GAAAxC,EAAAa,EAAA9a,GACA0c,EAAA5S,UAAA,CACA,IAAAtE,GAAAkX,EAAApJ,KAAAwH,EAAAzW,MAAArE,GACA,OAAAwF,IAAAyU,EAAAhO,EAAA0Q,EAAArW,IAAAd,EAAA,GAAA+N,eAAAvT,EAAAwF,EAAA,GAAAtL,SAAA,EAEA,QAAA0iB,GAAA3C,EAAAa,EAAA9a,GACA,MAAAwb,GAAAvB,EAAAgB,EAAAvR,EAAAwJ,WAAA4H,EAAA9a,GAEA,QAAA6c,GAAA5C,EAAAa,EAAA9a,GACA,MAAAwb,GAAAvB,EAAAgB,EAAA7c,EAAA8U,WAAA4H,EAAA9a,GAEA,QAAA8c,GAAA7C,EAAAa,EAAA9a,GACA,MAAAwb,GAAAvB,EAAAgB,EAAA8B,EAAA7J,WAAA4H,EAAA9a,GAEA,QAAAgd,GAAA/C,EAAAa,EAAA9a,GACA,GAAAwF,GAAAyX,EAAA3W,IAAAwU,EAAAzW,MAAArE,KAAA,GAAAuT,cACA,cAAA/N,GAAA,GAAAyU,EAAA/C,EAAA1R,EAAAxF,GAnNA,GAAAkd,GAAAzF,EAAA0F,SAAAC,EAAA3F,EAAAwC,KAAAoD,EAAA5F,EAAA9W,KAAA2c,EAAA7F,EAAA8F,QAAAC,EAAA/F,EAAAgG,KAAAC,EAAAjG,EAAAkG,UAAAC,EAAAnG,EAAAoG,OAAAC,EAAArG,EAAAsG,WA2DAnD,GAAAJ,IAAA,SAAAK,GAEA,QAAA1H,GAAA8G,GACA,IACAG,GAAAR,EACA,IAAAY,GAAA,GAAAJ,GAEA,OADAI,GAAAlf,EAAA2e,EACA5R,EAAAmS,GACS,QACTJ,GAAAnE,MARA,GAAA5N,GAAAuS,EAAAC,EAqBA,OAVA1H,GAAA+H,MAAA,SAAAJ,GACA,IACAV,GAAAR,EACA,IAAAK,GAAA5R,EAAA6S,MAAAJ,EACA,OAAAb,MAAA3e,EACS,QACT8e,GAAAnE,OAGA9C,EAAAD,SAAA7K,EAAA6K,SACAC,GAEAyH,EAAAoD,MAAApD,EAAAJ,IAAAwD,MAAAC,EACA,IAAAhB,GAAAtb,GAAAjE,MAAA0e,EAAA8B,GAAAV,GAAAnB,EAAA8B,GAAAX,GAAAvB,EAAAiC,GAAAR,GAAAxB,EAAAiC,GAAAT,GAAAhB,EAAAwB,GAAAN,GAAAjB,EAAAwB,GAAAP,GAAArB,EAAA2B,GAAAJ,GAAAtB,EAAA2B,GAAAL,EACAR,GAAA7gB,QAAA,SAAAya,EAAAlX,GACAid,EAAAvW,IAAAwQ,EAAA3D,cAAAvT,IAEA,IAAAib,IACA1Y,EAAA,SAAAc,GACA,MAAAqa,GAAAra,EAAAuY,WAEAwC,EAAA,SAAA/a,GACA,MAAAma,GAAAna,EAAAuY,WAEApZ,EAAA,SAAAa,GACA,MAAAya,GAAAza,EAAAgb,aAEAC,EAAA,SAAAjb,GACA,MAAAua,GAAAva,EAAAgb,aAEA3U,EAAAkR,EAAAsC,GACA7Z,EAAA,SAAAA,EAAA6T,GACA,MAAAqH,IAAAlb,EAAAmb,UAAAtH,EAAA,IAEA9c,EAAA,SAAAiJ,EAAA6T,GACA,MAAAqH,IAAAlb,EAAAmb,UAAAtH,EAAA,IAEAiE,EAAA,SAAA9X,EAAA6T,GACA,MAAAqH,IAAAlb,EAAAob,WAAAvH,EAAA,IAEAwH,EAAA,SAAArb,EAAA6T,GACA,MAAAqH,IAAAlb,EAAAob,WAAA,OAAAvH,EAAA,IAEAlL,EAAA,SAAA3I,EAAA6T,GACA,MAAAqH,IAAA,EAAAI,GAAAC,UAAAvb,GAAA6T,EAAA,IAEAoE,EAAA,SAAAjY,EAAA6T,GACA,MAAAqH,IAAAlb,EAAAwb,kBAAA3H,EAAA,IAEAjL,EAAA,SAAA5I,EAAA6T,GACA,MAAAqH,IAAAlb,EAAAgb,WAAA,EAAAnH,EAAA,IAEAkE,EAAA,SAAA/X,EAAA6T,GACA,MAAAqH,IAAAlb,EAAAyb,aAAA5H,EAAA,IAEAA,EAAA,SAAA7T,GACA,MAAAia,KAAAja,EAAAob,YAAA,MAEApD,EAAA,SAAAhY,EAAA6T,GACA,MAAAqH,IAAAlb,EAAA0b,aAAA7H,EAAA,IAEA2E,EAAA,SAAAxY,EAAA6T,GACA,MAAAqH,IAAAI,GAAAK,aAAA3b,GAAA6T,EAAA,IAEA5c,EAAA,SAAA+I,GACA,MAAAA,GAAAuY,UAEAD,EAAA,SAAAtY,EAAA6T,GACA,MAAAqH,IAAAI,GAAAM,aAAA5b,GAAA6T,EAAA,IAEA9Y,EAAAwc,EAAAwC,GACAL,EAAAnC,EAAAyC,GACAhf,EAAA,SAAAgF,EAAA6T,GACA,MAAAqH,IAAAlb,EAAA6b,cAAA,IAAAhI,EAAA,IAEAiI,EAAA,SAAA9b,EAAA6T,GACA,MAAAqH,IAAAlb,EAAA6b,cAAA,IAAAhI,EAAA,IAEAqE,EAAA6D,GACAC,IAAA,WACA,YAGAtD,GACAxZ,EAAAyZ,EACAoC,EAAAjC,EACA3Z,EAAA8Z,EACAgC,EAAA7B,EACA/S,EAAAkT,EACAvZ,EAAAic,GACAllB,EAAAklB,GACAnE,EAAAoE,GACAb,EAAAa,GACAvT,EAAAwT,GACAlE,EAAAmE,GACAxT,EAAAyT,GACAtE,EAAAuE,GACAzI,EAAA8F,EACA3B,EAAAuE,GACA/D,EAAAgE,GACAvlB,EAAAwlB,GACAnE,EAAAoE,GACA3hB,EAAAye,EACAE,EAAAD,EACAze,EAAA2hB,GACAb,EAAAc,GACA1E,EAAA2E,GACAb,IAAAc,GAmCA,OAAAvF,GAOA,QAAA2D,IAAA7d,EAAA8X,EAAAha,GACA,GAAAka,GAAAhY,EAAA,SAAAoa,GAAApC,GAAAhY,KAAA,GAAAxG,EAAA4gB,EAAA5gB,MACA,OAAAwe,IAAAxe,EAAAsE,EAAA,GAAAmb,OAAAnb,EAAAtE,EAAA,GAAAme,KAAAG,GAAAsC,KAEA,QAAAoD,IAAAkC,GACA,UAAAnX,QAAA,OAAAmX,EAAA1iB,IAAAiE,GAAAuH,SAAAmP,KAAA,cAEA,QAAA8F,IAAAiC,GAEA,IADA,GAAA1iB,GAAA,GAAAoG,GAAA9D,GAAA,EAAAwF,EAAA4a,EAAAlmB,SACA8F,EAAAwF,GAAA9H,EAAAgJ,IAAA0Z,EAAApgB,GAAAuT,cAAAvT,EACA,OAAAtC,GAEA,QAAAoiB,IAAA7F,EAAAa,EAAA9a,GACAqgB,GAAAvW,UAAA,CACA,IAAAtE,GAAA6a,GAAA/M,KAAAwH,EAAAzW,MAAArE,IAAA,GACA,OAAAwF,IAAAyU,EAAA3f,GAAAkL,EAAA,GAAAxF,EAAAwF,EAAA,GAAAtL,SAAA,EAEA,QAAA2lB,IAAA5F,EAAAa,EAAA9a,GACAqgB,GAAAvW,UAAA,CACA,IAAAtE,GAAA6a,GAAA/M,KAAAwH,EAAAzW,MAAArE,GACA,OAAAwF,IAAAyU,EAAA4B,GAAArW,EAAA,GAAAxF,EAAAwF,EAAA,GAAAtL,SAAA,EAEA,QAAA6lB,IAAA9F,EAAAa,EAAA9a,GACAqgB,GAAAvW,UAAA,CACA,IAAAtE,GAAA6a,GAAA/M,KAAAwH,EAAAzW,MAAArE,GACA,OAAAwF,IAAAyU,EAAA0B,GAAAnW,EAAA,GAAAxF,EAAAwF,EAAA,GAAAtL,SAAA,EAEA,QAAA+lB,IAAAhG,EAAAa,EAAA9a,GACAqgB,GAAAvW,UAAA,CACA,IAAAtE,GAAA6a,GAAA/M,KAAAwH,EAAAzW,MAAArE,IAAA,GACA,OAAAwF,IAAAyU,EAAA5b,GAAAmH,EAAA,GAAAxF,EAAAwF,EAAA,GAAAtL,SAAA,EAEA,QAAA8lB,IAAA/F,EAAAa,EAAA9a,GACAqgB,GAAAvW,UAAA,CACA,IAAAtE,GAAA6a,GAAA/M,KAAAwH,EAAAzW,MAAArE,IAAA,GACA,OAAAwF,IAAAyU,EAAA5b,EAAAiiB,IAAA9a,EAAA,IAAAxF,EAAAwF,EAAA,GAAAtL,SAAA,EAEA,QAAAgmB,IAAAjG,EAAAa,EAAA9a,GACA,oBAAsB+J,KAAA+Q,IAAAzW,MAAArE,IAAA,KAAAia,EAAAsB,GAAAT,EACtB9a,EAAA,MAEA,QAAAsgB,IAAAjd,GACA,MAAAA,MAAA,aAEA,QAAAqc,IAAAzF,EAAAa,EAAA9a,GACAqgB,GAAAvW,UAAA,CACA,IAAAtE,GAAA6a,GAAA/M,KAAAwH,EAAAzW,MAAArE,IAAA,GACA,OAAAwF,IAAAyU,EAAAhO,EAAAzG,EAAA,KAAAxF,EAAAwF,EAAA,GAAAtL,SAAA,EAEA,QAAAolB,IAAArF,EAAAa,EAAA9a,GACAqgB,GAAAvW,UAAA,CACA,IAAAtE,GAAA6a,GAAA/M,KAAAwH,EAAAzW,MAAArE,IAAA,GACA,OAAAwF,IAAAyU,EAAA5W,GAAAmC,EAAA,GAAAxF,EAAAwF,EAAA,GAAAtL,SAAA,EAEA,QAAAslB,IAAAvF,EAAAa,EAAA9a,GACAqgB,GAAAvW,UAAA,CACA,IAAAtE,GAAA6a,GAAA/M,KAAAwH,EAAAzW,MAAArE,IAAA,GACA,OAAAwF,IAAAyU,EAAAjO,GAAAxG,EAAA,GAAAxF,EAAAwF,EAAA,GAAAtL,SAAA,EAEA,QAAAqlB,IAAAtF,EAAAa,EAAA9a,GACAqgB,GAAAvW,UAAA,CACA,IAAAtE,GAAA6a,GAAA/M,KAAAwH,EAAAzW,MAAArE,IAAA,GACA,OAAAwF,IAAAyU,EAAAkB,GAAA3V,EAAA,GAAAxF,EAAAwF,EAAA,GAAAtL,SAAA,EAEA,QAAAylB,IAAA1F,EAAAa,EAAA9a,GACAqgB,GAAAvW,UAAA,CACA,IAAAtE,GAAA6a,GAAA/M,KAAAwH,EAAAzW,MAAArE,IAAA,GACA,OAAAwF,IAAAyU,EAAAmB,GAAA5V,EAAA,GAAAxF,EAAAwF,EAAA,GAAAtL,SAAA,EAEA,QAAA0lB,IAAA3F,EAAAa,EAAA9a,GACAqgB,GAAAvW,UAAA,CACA,IAAAtE,GAAA6a,GAAA/M,KAAAwH,EAAAzW,MAAArE,IAAA,GACA,OAAAwF,IAAAyU,EAAAoB,GAAA7V,EAAA,GAAAxF,EAAAwF,EAAA,GAAAtL,SAAA,EAEA,QAAAulB,IAAAxF,EAAAa,EAAA9a,GACAqgB,GAAAvW,UAAA,CACA,IAAAtE,GAAA6a,GAAA/M,KAAAwH,EAAAzW,MAAArE,IAAA,GACA,OAAAwF,IAAAyU,EAAAqB,GAAA9V,EAAA,GAAAxF,EAAAwF,EAAA,GAAAtL,SAAA,EAEA,QAAAklB,IAAA/b,GACA,GAAA4C,GAAA5C,EAAAkd,oBAAAC,EAAAva,EAAA,UAAAwa,EAAA3hB,GAAAmH,GAAA,KAAAya,EAAA5hB,GAAAmH,GAAA,EACA,OAAAua,GAAAjC,GAAAkC,EAAA,OAAAlC,GAAAmC,EAAA,OAEA,QAAAP,IAAAlG,EAAAa,EAAA9a,GACA2gB,GAAA7W,UAAA,CACA,IAAAtE,GAAAmb,GAAArN,KAAAwH,EAAAzW,MAAArE,IAAA,GACA,OAAAwF,GAAAxF,EAAAwF,EAAA,GAAAtL,QAAA,EAEA,QAAA+jB,IAAA2C,GAEA,IADA,GAAApb,GAAAob,EAAA1mB,OAAA8F,GAAA,IACAA,EAAAwF,GAAAob,EAAA5gB,GAAA,GAAA+D,KAAA6c,EAAA5gB,GAAA,GACA,iBAAAia,GAEA,IADA,GAAAja,GAAA,EAAAuP,EAAAqR,EAAA5gB,IACAuP,EAAA,GAAA0K,IAAA1K,EAAAqR,IAAA5gB,EACA,OAAAuP,GAAA,GAAA0K,IAyBA,QAAA4G,OAiBA,QAAAC,IAAAve,EAAAC,EAAAkL,GACA,GAAAtP,GAAAsP,EAAA5G,EAAAvE,EAAAC,EAAAue,EAAA3iB,EAAAmE,EAAAye,EAAA5iB,EAAA2iB,CACArT,GAAAyI,EAAA5T,EAAAye,GAAAxe,EAAAue,GASA,QAAAE,IAAAC,EAAA7a,GACA6a,GAAAC,GAAAC,eAAAF,EAAAtlB,OACAulB,GAAAD,EAAAtlB,MAAAslB,EAAA7a,GA2CA,QAAAgb,IAAAC,EAAAjb,EAAAkb,GACA,GAAAC,GAAAxhB,GAAA,EAAAwF,EAAA8b,EAAApnB,OAAAqnB,CAEA,KADAlb,EAAAob,cACAzhB,EAAAwF,GAAAgc,EAAAF,EAAAthB,GAAAqG,EAAAlI,MAAAqjB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAnb,GAAAqb,UAEA,QAAAC,IAAAL,EAAAjb,GACA,GAAArG,IAAA,EAAAwF,EAAA8b,EAAApnB,MAEA,KADAmM,EAAAub,iBACA5hB,EAAAwF,GAAA6b,GAAAC,EAAAthB,GAAAqG,EAAA,EACAA,GAAAwb,aAyBA,QAAAC,MAOA,QAAAC,GAAAC,EAAAC,GACAD,GAAA7P,GACA8P,IAAA9P,GAAA,EAAA7B,GAAA,CACA,IAAA4R,GAAAF,EAAAG,EAAAC,EAAAF,GAAA,OAAAG,EAAAD,EAAAF,EAAAI,EAAAnlB,KAAA+U,IAAA+P,GAAAM,EAAAplB,KAAA6T,IAAAiR,GAAA1e,EAAAif,EAAAD,EAAAE,EAAAC,EAAAJ,EAAA/e,EAAApG,KAAA+U,IAAAmQ,GAAAroB,EAAAuJ,EAAA6e,EAAAjlB,KAAA6T,IAAAqR,EACAM,IAAA/Y,IAAAzM,KAAAuV,MAAA1Y,EAAAyoB,IACAN,EAAAH,EAAAU,EAAAJ,EAAAE,EAAAD,EAXA,GAAAK,GAAAC,EAAAV,EAAAO,EAAAF,CACAM,IAAA3kB,MAAA,SAAA6jB,EAAAC,GACAa,GAAA3kB,MAAA4jB,EACAI,GAAAS,EAAAZ,GAAA7P,GAAAuQ,EAAAvlB,KAAA+U,IAAA+P,GAAAY,EAAAZ,GAAA9P,GAAA,EAAA7B,GAAA,GACAkS,EAAArlB,KAAA6T,IAAAiR,IASAa,GAAApB,QAAA,WACAK,EAAAa,EAAAC,IAGA,QAAAE,IAAAC,GACA,GAAAhB,GAAAgB,EAAA,GAAAf,EAAAe,EAAA,GAAAV,EAAAnlB,KAAA+U,IAAA+P,EACA,QAAAK,EAAAnlB,KAAA+U,IAAA8P,GAAAM,EAAAnlB,KAAA6T,IAAAgR,GAAA7kB,KAAA6T,IAAAiR,IAEA,QAAAgB,IAAA1gB,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAEA,QAAA0gB,IAAA3gB,EAAAC,GACA,OAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAEA,QAAA2gB,IAAA5gB,EAAAC,GACAD,EAAA,IAAAC,EAAA,GACAD,EAAA,IAAAC,EAAA,GACAD,EAAA,IAAAC,EAAA,GAEA,QAAA4gB,IAAAC,EAAA9f,GACA,OAAA8f,EAAA,GAAA9f,EAAA8f,EAAA,GAAA9f,EAAA8f,EAAA,GAAA9f,GAEA,QAAA+f,IAAAjgB,GACA,GAAA2C,GAAA7I,KAAAyV,KAAAvP,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAA,GAAA,IAAA2C,EACA3C,EAAA,IAAA2C,EACA3C,EAAA,IAAA2C,EAEA,QAAAud,IAAAC,GACA,OAAArmB,KAAAuV,MAAA8Q,EAAA,GAAAA,EAAA,IAAAhT,GAAAgT,EAAA,KAEA,QAAAC,IAAAlhB,EAAAC,GACA,MAAA1D,IAAAyD,EAAA,GAAAC,EAAA,IAAAkhB,IAAA5kB,GAAAyD,EAAA,GAAAC,EAAA,IAAAkhB,GA2JA,QAAAC,IAAA3B,EAAAC,GACAD,GAAA7P,EACA,IAAAmQ,GAAAnlB,KAAA+U,IAAA+P,GAAA9P,GACAyR,IAAAtB,EAAAnlB,KAAA+U,IAAA8P,GAAAM,EAAAnlB,KAAA6T,IAAAgR,GAAA7kB,KAAA6T,IAAAiR,IAEA,QAAA2B,IAAAxlB,EAAAC,EAAA4H,KACA4d,GACAC,KAAA1lB,EAAA0lB,IAAAD,GACAE,KAAA1lB,EAAA0lB,IAAAF,GACAG,KAAA/d,EAAA+d,IAAAH,GAEA,QAAAI,MAWA,QAAAlC,GAAAC,EAAAC,GACAD,GAAA7P,EACA,IAAAmQ,GAAAnlB,KAAA+U,IAAA+P,GAAA9P,IAAA/T,EAAAkkB,EAAAnlB,KAAA+U,IAAA8P,GAAA3jB,EAAAikB,EAAAnlB,KAAA6T,IAAAgR,GAAA/b,EAAA9I,KAAA6T,IAAAiR,GAAA3nB,EAAA6C,KAAAuV,MAAAvV,KAAAyV,MAAAtY,EAAA4pB,EAAAje,EAAAke,EAAA9lB,GAAA/D,KAAA6pB,EAAA/lB,EAAAgmB,EAAAne,GAAA3L,KAAA8pB,EAAA/lB,EAAA6lB,EAAA9lB,GAAA9D,GAAA8pB,EAAAhmB,EAAA8lB,EAAA7lB,EAAA8lB,EAAAle,EACAoe,KAAA/pB,EACAgqB,IAAAhqB,GAAA8pB,KAAAhmB,IACAmmB,IAAAjqB,GAAA4pB,KAAA7lB,IACAmmB,IAAAlqB,GAAA6pB,KAAAle,IACA2d,GAAAQ,EAAAF,EAAAC,GAjBA,GAAAC,GAAAF,EAAAC,CACAM,IAAAtmB,MAAA,SAAA6jB,EAAAC,GACAD,GAAA7P,EACA,IAAAmQ,GAAAnlB,KAAA+U,IAAA+P,GAAA9P,GACAiS,GAAA9B,EAAAnlB,KAAA+U,IAAA8P,GACAkC,EAAA5B,EAAAnlB,KAAA6T,IAAAgR,GACAmC,EAAAhnB,KAAA6T,IAAAiR,GACAwC,GAAAtmB,MAAA4jB,EACA6B,GAAAQ,EAAAF,EAAAC,IAYA,QAAAO,MACAD,GAAAtmB,MAAAwlB,GAEA,QAAAgB,MAiBA,QAAA5C,GAAAC,EAAAC,GACAD,GAAA7P,EACA,IAAAmQ,GAAAnlB,KAAA+U,IAAA+P,GAAA9P,IAAA/T,EAAAkkB,EAAAnlB,KAAA+U,IAAA8P,GAAA3jB,EAAAikB,EAAAnlB,KAAA6T,IAAAgR,GAAA/b,EAAA9I,KAAA6T,IAAAiR,GAAA2C,EAAAV,EAAAje,EAAAke,EAAA9lB,EAAAwmB,EAAAV,EAAA/lB,EAAAgmB,EAAAne,EAAA6e,EAAAV,EAAA/lB,EAAA6lB,EAAA9lB,EAAA6N,EAAA9O,KAAAyV,KAAAgS,IAAAC,IAAAC,KAAArC,EAAA2B,EAAAhmB,EAAA8lB,EAAA7lB,EAAA8lB,EAAAle,EAAAjM,EAAAiS,IAAAoE,GAAAoS,GAAAxW,EAAA3R,EAAA6C,KAAAuV,MAAAzG,EAAAwW,EACAsC,KAAA/qB,EAAA4qB,EACAI,IAAAhrB,EAAA6qB,EACAI,IAAAjrB,EAAA8qB,EACAT,IAAA/pB,EACAgqB,IAAAhqB,GAAA8pB,KAAAhmB,IACAmmB,IAAAjqB,GAAA4pB,KAAA7lB,IACAmmB,IAAAlqB,GAAA6pB,KAAAle,IACA2d,GAAAQ,EAAAF,EAAAC,GA1BA,GAAAvB,GAAAC,EAAAuB,EAAAF,EAAAC,CACAM,IAAAtmB,MAAA,SAAA6jB,EAAAC,GACAW,EAAAZ,EAAAa,EAAAZ,EACAwC,GAAAtmB,MAAA4jB,EACAC,GAAA7P,EACA,IAAAmQ,GAAAnlB,KAAA+U,IAAA+P,GAAA9P,GACAiS,GAAA9B,EAAAnlB,KAAA+U,IAAA8P,GACAkC,EAAA5B,EAAAnlB,KAAA6T,IAAAgR,GACAmC,EAAAhnB,KAAA6T,IAAAiR,GACA2B,GAAAQ,EAAAF,EAAAC,IAEAM,GAAA/C,QAAA,WACAK,EAAAa,EAAAC,GACA4B,GAAA/C,QAAAgD,GACAD,GAAAtmB,MAAAwlB,IAeA,QAAAuB,IAAA3iB,EAAAC,GACA,QAAA2iB,GAAA/mB,EAAAC,GACA,MAAAD,GAAAmE,EAAAnE,EAAAC,GAAAmE,EAAApE,EAAA,GAAAA,EAAA,IAKA,MAHAmE,GAAA6iB,QAAA5iB,EAAA4iB,SAAAD,EAAAC,OAAA,SAAAhnB,EAAAC,GACA,OAAAD,EAAAoE,EAAA4iB,OAAAhnB,EAAAC,KAAAkE,EAAA6iB,OAAAhnB,EAAA,GAAAA,EAAA,MAEA+mB,EAEA,QAAAE,MACA,SAEA,QAAAC,IAAAC,EAAAziB,EAAA0iB,EAAAC,EAAApf,GACA,GAAAqf,MAAAC,IAuBA,IAtBAJ,EAAA9oB,QAAA,SAAAmpB,GACA,MAAApgB,EAAAogB,EAAA1rB,OAAA,QACA,GAAAsL,GAAAqgB,EAAAD,EAAA,GAAAE,EAAAF,EAAApgB,EACA,IAAAie,GAAAoC,EAAAC,GAAA,CACAzf,EAAAob,WACA,QAAAzhB,GAAA,EAAuBA,EAAAwF,IAAOxF,EAAAqG,EAAAlI,OAAA0nB,EAAAD,EAAA5lB,IAAA,GAAA6lB,EAAA,GAE9B,YADAxf,GAAAqb,UAGA,GAAAnf,GAAA,GAAAwjB,IAAAF,EAAAD,EAAA,SAAApjB,EAAA,GAAAujB,IAAAF,EAAA,KAAAtjB,GAAA,EACAA,GAAAmL,EAAAlL,EACAkjB,EAAA9lB,KAAA2C,GACAojB,EAAA/lB,KAAA4C,GACAD,EAAA,GAAAwjB,IAAAD,EAAAF,EAAA,SACApjB,EAAA,GAAAujB,IAAAD,EAAA,KAAAvjB,GAAA,GACAA,EAAAmL,EAAAlL,EACAkjB,EAAA9lB,KAAA2C,GACAojB,EAAA/lB,KAAA4C,MAEAmjB,EAAAK,KAAAljB,GACAmjB,GAAAP,GACAO,GAAAN,GACAD,EAAAxrB,OAAA,CACA,OAAA8F,GAAA,EAAAkmB,EAAAV,EAAAhgB,EAAAmgB,EAAAzrB,OAA6D8F,EAAAwF,IAAOxF,EACpE2lB,EAAA3lB,GAAA5F,EAAA8rB,IAGA,KADA,GAAAC,GAAAhoB,EAAAyC,EAAA8kB,EAAA,KACA,CAEA,IADA,GAAAU,GAAAxlB,EAAAylB,GAAA,EACAD,EAAApsB,GAAA,IAAAosB,IAAA5gB,KAAA5E,EAAA,MACAulB,GAAAC,EAAAngB,EACAI,EAAAob,WACA,IAEA,GADA2E,EAAApsB,EAAAosB,EAAA1Y,EAAA1T,GAAA,EACAosB,EAAAhsB,EAAA,CACA,GAAAisB,EACA,OAAArmB,GAAA,EAAAwF,EAAA2gB,EAAAjsB,OAA8C8F,EAAAwF,IAAOxF,EAAAqG,EAAAlI,SAAAgoB,EAAAnmB,IAAA,GAAA7B,EAAA,QAErDsnB,GAAAW,EAAAhoB,EAAAgoB,EAAA5gB,EAAApH,EAAA,EAAAiI,EAEA+f,KAAA5gB,MACS,CACT,GAAA6gB,EAAA,CACAF,EAAAC,EAAAlP,EAAAjR,CACA,QAAAjG,GAAAmmB,EAAAjsB,OAAA,EAA2C8F,GAAA,IAAQA,EAAAqG,EAAAlI,SAAAgoB,EAAAnmB,IAAA,GAAA7B,EAAA,QAEnDsnB,GAAAW,EAAAhoB,EAAAgoB,EAAAlP,EAAA9Y,GAAA,EAAAiI,EAEA+f,KAAAlP,EAEAkP,IAAA1Y,EACAyY,EAAAC,EAAAngB,EACAogB,YACOD,EAAApsB,EACPqM,GAAAqb,YAGA,QAAAuE,IAAAK,GACA,GAAA9gB,EAAA8gB,EAAApsB,OAAA,CAEA,IADA,GAAAsL,GAAAhD,EAAAxC,EAAA,EAAAuC,EAAA+jB,EAAA,KACAtmB,EAAAwF,GACAjD,EAAAiD,EAAAhD,EAAA8jB,EAAAtmB,GACAwC,EAAA0U,EAAA3U,EACAA,EAAAC,CAEAD,GAAAiD,EAAAhD,EAAA8jB,EAAA,GACA9jB,EAAA0U,EAAA3U,GAEA,QAAAwjB,IAAA5nB,EAAAgoB,EAAAI,EAAAL,GACAniB,KAAA3F,EAAAD,EACA4F,KAAAkC,EAAAkgB,EACApiB,KAAA2J,EAAA6Y,EACAxiB,KAAA3J,EAAA8rB,EACAniB,KAAA/J,GAAA,EACA+J,KAAAyB,EAAAzB,KAAAmT,EAAA,KAEA,QAAAsP,IAAAC,EAAAC,EAAAjB,EAAAkB,GACA,gBAAAC,EAAAvgB,GAuCA,QAAAlI,GAAA6jB,EAAAC,GACA,GAAA9jB,GAAAyoB,EAAA5E,EAAAC,EACAwE,GAAAzE,EAAA7jB,EAAA,GAAA8jB,EAAA9jB,EAAA,KAAAkI,EAAAlI,MAAA6jB,EAAAC,GAEA,QAAA4E,GAAA7E,EAAAC,GACA,GAAA9jB,GAAAyoB,EAAA5E,EAAAC,EACA6E,GAAA3oB,QAAA,GAAAA,EAAA,IAEA,QAAAsjB,KACAkE,EAAAxnB,MAAA0oB,EACAC,EAAArF,YAEA,QAAAC,KACAiE,EAAAxnB,QACA2oB,EAAApF,UAIA,QAAAqF,GAAA/E,EAAAC,GACA+E,EAAApnB,MAAAoiB,EAAAC,GACA,IAAA9jB,GAAAyoB,EAAA5E,EAAAC,EACAgF,GAAA9oB,QAAA,GAAAA,EAAA,IAEA,QAAA+oB,KACAD,EAAAxF,YACAuF,KAEA,QAAAG,KACAJ,EAAAC,EAAA,MAAAA,EAAA,OACAC,EAAAvF,SACA,IAAAkE,GAAAwB,EAAAH,EAAAG,QAAAC,EAAAC,WAAA9hB,EAAA6hB,EAAAntB,MAIA,IAHA8sB,EAAAO,MACAC,EAAA5nB,KAAAonB,GACAA,EAAA,KACAxhB,EACA,KAAA4hB,EAAA,CACAxB,EAAAyB,EAAA,EACA,IAAAlpB,GAAAqH,EAAAogB,EAAA1rB,OAAA,EAAA8F,GAAA,CACA,IAAAwF,EAAA,GAGA,IAFAiiB,IAAAphB,EAAAub,eAAA6F,GAAA,GACAphB,EAAAob,cACAzhB,EAAAwF,GAAAa,EAAAlI,SAAAynB,EAAA5lB,IAAA,GAAA7B,EAAA,GACAkI,GAAAqb,eAIAlc,GAAA,KAAA4hB,GAAAC,EAAAznB,KAAAynB,EAAAE,MAAA/gB,OAAA6gB,EAAAK,UACAnC,EAAA3lB,KAAAynB,EAAA9Z,OAAAoa,KArFA,GAsDApC,GACAiC,EAAAR,EAvDAF,EAAAJ,EAAArgB,GAAAuhB,EAAAhB,EAAAxB,OAAAuB,EAAA,GAAAA,EAAA,IACAhB,GACAxnB,QACAsjB,YACAC,UACAE,aAAA,WACA+D,EAAAxnB,MAAA4oB,EACApB,EAAAlE,UAAAyF,EACAvB,EAAAjE,QAAAyF,EACA5B,KACAiC,MAEA3F,WAAA,WACA8D,EAAAxnB,QACAwnB,EAAAlE,YACAkE,EAAAjE,UACA6D,EAAA5jB,GAAAkmB,MAAAtC,EACA,IAAAC,GAAAsC,GAAAF,EAAAJ,EACAjC,GAAArrB,QACAutB,IAAAphB,EAAAub,eAAA6F,GAAA,GACAnC,GAAAC,EAAAwC,GAAAvC,EAAAC,EAAApf,IACWmf,IACXiC,IAAAphB,EAAAub,eAAA6F,GAAA,GACAphB,EAAAob,YACAgE,EAAA,YAAApf,GACAA,EAAAqb,WAEA+F,IAAAphB,EAAAwb,aAAA4F,GAAA,GACAlC,EAAAiC,EAAA,MAEAQ,OAAA,WACA3hB,EAAAub,eACAvb,EAAAob,YACAgE,EAAA,YAAApf,GACAA,EAAAqb,UACArb,EAAAwb,eAoBAyF,EAAAW,KAAAhB,EAAAP,EAAAY,GAAAG,GAAA,CAgCA,OAAA9B,IAGA,QAAAgC,IAAA/B,GACA,MAAAA,GAAA1rB,OAAA,EAEA,QAAA+tB,MACA,GAAAnB,GAAAoB,IACA,QACAzG,UAAA,WACAyG,EAAAtoB,KAAAknB,OAEA3oB,MAAA,SAAA6jB,EAAAC,GACA6E,EAAAlnB,MAAAoiB,EAAAC,KAEAP,QAAA/b,EACA2hB,OAAA,WACA,GAAAA,GAAAY,CAGA,OAFAA,MACApB,EAAA,KACAQ,GAEAa,OAAA,WACAD,EAAAhuB,OAAA,GAAAguB,EAAAtoB,KAAAsoB,EAAAX,MAAA/gB,OAAA0hB,EAAAR,YAIA,QAAAK,IAAAxlB,EAAAC,GACA,QAAAD,IAAAnE,GAAA,KAAAmE,EAAA,GAAAkO,GAAAiT,GAAAjT,GAAAlO,EAAA,MAAAC,IAAApE,GAAA,KAAAoE,EAAA,GAAAiO,GAAAiT,GAAAjT,GAAAjO,EAAA,IAGA,QAAA4lB,IAAA/hB,GACA,GAAA+gB,GAAAjF,EAAA1f,IAAA4lB,EAAA5lB,IAAA6lB,EAAA7lB,GACA,QACAgf,UAAA,WACApb,EAAAob,YACA2F,EAAA,GAEAjpB,MAAA,SAAAoqB,EAAAC,GACA,GAAAC,GAAAF,EAAA,EAAAjY,OAAA4R,EAAApjB,GAAAypB,EAAApG,EACArjB,IAAAojB,EAAA5R,IAAAoT,IACArd,EAAAlI,MAAAgkB,EAAAkG,KAAAG,GAAA,IAAA/X,QACApK,EAAAlI,MAAAmqB,EAAAD,GACAhiB,EAAAqb,UACArb,EAAAob,YACApb,EAAAlI,MAAAsqB,EAAAJ,GACAhiB,EAAAlI,MAAAoqB,EAAAF,GACAjB,EAAA,GACSkB,IAAAG,GAAAvG,GAAA5R,KACTxR,GAAAqjB,EAAAmG,GAAA5E,KAAAvB,GAAAmG,EAAA5E,IACA5kB,GAAAypB,EAAAE,GAAA/E,KAAA6E,GAAAE,EAAA/E,IACA2E,EAAAK,GAAAvG,EAAAkG,EAAAE,EAAAC,GACAniB,EAAAlI,MAAAmqB,EAAAD,GACAhiB,EAAAqb,UACArb,EAAAob,YACApb,EAAAlI,MAAAsqB,EAAAJ,GACAjB,EAAA,GAEA/gB,EAAAlI,MAAAgkB,EAAAoG,EAAAF,EAAAG,GACAF,EAAAG,GAEA/G,QAAA,WACArb,EAAAqb,UACAS,EAAAkG,EAAA5lB,KAEA2kB,MAAA,WACA,SAAAA,IAIA,QAAAsB,IAAAvG,EAAAkG,EAAAE,EAAAC,GACA,GAAA9F,GAAAiG,EAAAC,EAAAzrB,KAAA6T,IAAAmR,EAAAoG,EACA,OAAAzpB,IAAA8pB,GAAAlF,GAAAvmB,KAAA0rB,MAAA1rB,KAAA6T,IAAAqX,IAAAM,EAAAxrB,KAAA+U,IAAAsW,IAAArrB,KAAA6T,IAAAuX,GAAAprB,KAAA6T,IAAAwX,IAAA9F,EAAAvlB,KAAA+U,IAAAmW,IAAAlrB,KAAA6T,IAAAmR,KAAAO,EAAAiG,EAAAC,KAAAP,EAAAG,GAAA,EAEA,QAAAM,IAAAC,EAAAC,EAAAC,EAAA5iB,GACA,GAAA4b,EACA,UAAA8G,EACA9G,EAAAgH,EAAAxY,GACApK,EAAAlI,OAAAmS,GAAA2R,GACA5b,EAAAlI,MAAA,EAAA8jB,GACA5b,EAAAlI,MAAAmS,GAAA2R,GACA5b,EAAAlI,MAAAmS,GAAA,GACAjK,EAAAlI,MAAAmS,IAAA2R,GACA5b,EAAAlI,MAAA,GAAA8jB,GACA5b,EAAAlI,OAAAmS,IAAA2R,GACA5b,EAAAlI,OAAAmS,GAAA,GACAjK,EAAAlI,OAAAmS,GAAA2R,OACK,IAAAnjB,GAAAiqB,EAAA,GAAAC,EAAA,IAAAtF,GAAA,CACL,GAAA5c,GAAAiiB,EAAA,GAAAC,EAAA,GAAA1Y,MACA2R,GAAAgH,EAAAniB,EAAA,EACAT,EAAAlI,OAAA2I,EAAAmb,GACA5b,EAAAlI,MAAA,EAAA8jB,GACA5b,EAAAlI,MAAA2I,EAAAmb,OAEA5b,GAAAlI,MAAA6qB,EAAA,GAAAA,EAAA,IAGA,QAAAlB,IAAA3pB,EAAAqpB,GACA,GAAA0B,GAAA/qB,EAAA,GAAAgrB,EAAAhrB,EAAA,GAAAirB,GAAAjsB,KAAA6T,IAAAkY,IAAA/rB,KAAA+U,IAAAgX,GAAA,GAAAG,EAAA,EAAAC,EAAA,CACA3G,IAAA4G,OACA,QAAAvpB,GAAA,EAAAwF,EAAAgiB,EAAAttB,OAAuC8F,EAAAwF,IAAOxF,EAAA,CAC9C,GAAAgnB,GAAAQ,EAAAxnB,GAAAiM,EAAA+a,EAAA9sB,MACA,IAAA+R,EAEA,IADA,GAAAud,GAAAxC,EAAA,GAAA7E,EAAAqH,EAAA,GAAAnB,EAAAmB,EAAA,KAAAlZ,GAAA,EAAAkS,EAAArlB,KAAA6T,IAAAqX,GAAA3F,EAAAvlB,KAAA+U,IAAAmW,GAAArc,EAAA,IACA,CACAA,IAAAC,IAAAD,EAAA,GACA7N,EAAA6oB,EAAAhb,EACA,IAAAgW,GAAA7jB,EAAA,GAAA8jB,EAAA9jB,EAAA,KAAAmS,GAAA,EAAAiS,EAAAplB,KAAA6T,IAAAiR,GAAAK,EAAAnlB,KAAA+U,IAAA+P,GAAAC,EAAAF,EAAAG,EAAAC,EAAAF,GAAA,OAAAG,EAAAD,EAAAF,EAAAuH,EAAApH,EAAA/R,GAAA/M,EAAAif,EAAAD,CAGA,IAFAI,GAAA/Y,IAAAzM,KAAAuV,MAAAnP,EAAA6e,EAAAjlB,KAAA6T,IAAAqR,GAAAK,EAAAJ,EAAA/e,EAAApG,KAAA+U,IAAAmQ,KACAgH,GAAAI,EAAAvH,EAAAE,EAAAsH,GAAAxH,EACAuH,EAAAtH,GAAA+G,EAAAlH,GAAAkH,EAAA,CACA,GAAAS,GAAAzG,GAAAH,GAAAyG,GAAAzG,GAAA5kB,GACAmlB,IAAAqG,EACA,IAAAC,GAAA1G,GAAAkG,EAAAO,EACArG,IAAAsG,EACA,IAAAC,IAAAJ,EAAAvH,GAAA,QAAA1R,GAAAoZ,EAAA,KACAT,EAAAU,GAAAV,IAAAU,IAAAF,EAAA,IAAAA,EAAA,OACAL,GAAAG,EAAAvH,GAAA,QAGA,IAAAlW,IAAA,KACAmW,GAAAH,EAAAQ,EAAAD,EAAAG,EAAAJ,EAAAkH,EAAArrB,GAGA,OAAAkrB,GAAA3F,IAAA2F,EAAA3F,IAAAf,IAAAe,IAAA,EAAA4F,EAEA,QAAAQ,IAAAC,GAGA,QAAAC,GAAAhI,EAAAC,GACA,MAAA9kB,MAAA+U,IAAA8P,GAAA7kB,KAAA+U,IAAA+P,GAAAgI,EAEA,QAAAvD,GAAArgB,GACA,GAAAmjB,GAAAU,EAAAC,EAAAC,EAAAhD,CACA,QACA3F,UAAA,WACA2I,EAAAD,GAAA,EACA/C,EAAA,GAEAjpB,MAAA,SAAA6jB,EAAAC,GACA,GAAAoI,GAAAC,GAAAtI,EAAAC,GAAAjoB,EAAAgwB,EAAAhI,EAAAC,GAAAvY,EAAA6gB,EAAAvwB,EAAA,EAAAwwB,EAAAxI,EAAAC,GAAAjoB,EAAAwwB,EAAAxI,KAAA,EAAA1R,QAAA2R,GAAA,CAUA,KATAuH,IAAAY,EAAAD,EAAAnwB,IAAAqM,EAAAob,YACAznB,IAAAmwB,IACAE,EAAAI,EAAAjB,EAAAc,IACA7G,GAAA+F,EAAAa,IAAA5G,GAAA6G,EAAAD,MACAC,EAAA,IAAA5G,GACA4G,EAAA,IAAA5G,GACA1pB,EAAAgwB,EAAAM,EAAA,GAAAA,EAAA,MAGAtwB,IAAAmwB,EACA/C,EAAA,EACAptB,GACAqM,EAAAob,YACA4I,EAAAI,EAAAH,EAAAd,GACAnjB,EAAAlI,MAAAksB,EAAA,GAAAA,EAAA,MAEAA,EAAAI,EAAAjB,EAAAc,GACAjkB,EAAAlI,MAAAksB,EAAA,GAAAA,EAAA,IACAhkB,EAAAqb,WAEA8H,EAAAa,MACW,IAAAK,GAAAlB,GAAAe,EAAAvwB,EAAA,CACX,GAAAmc,EACAzM,GAAAwgB,KAAA/T,EAAAsU,EAAAH,EAAAd,GAAA,MACApC,EAAA,EACAmD,GACAlkB,EAAAob,YACApb,EAAAlI,MAAAgY,EAAA,MAAAA,EAAA,OACA9P,EAAAlI,MAAAgY,EAAA,MAAAA,EAAA,OACA9P,EAAAqb,YAEArb,EAAAlI,MAAAgY,EAAA,MAAAA,EAAA,OACA9P,EAAAqb,UACArb,EAAAob,YACApb,EAAAlI,MAAAgY,EAAA,MAAAA,EAAA,UAIAnc,GAAAwvB,GAAA/F,GAAA+F,EAAAc,IACAjkB,EAAAlI,MAAAmsB,EAAA,GAAAA,EAAA,IAEAd,EAAAc,EAAAH,EAAAnwB,EAAAkwB,EAAAxgB,GAEAgY,QAAA,WACAyI,GAAA9jB,EAAAqb,UACA8H,EAAA,MAEApC,MAAA,WACA,MAAAA,IAAAgD,GAAAD,IAAA,IAIA,QAAAM,GAAAloB,EAAAC,EAAAmoB,GACA,GAAAC,GAAA7H,GAAAxgB,GAAAsoB,EAAA9H,GAAAvgB,GACAsoB,GAAA,OAAAC,EAAA7H,GAAA0H,EAAAC,GAAAG,EAAA/H,GAAA8H,KAAAE,EAAAF,EAAA,GAAAG,EAAAF,EAAAC,GACA,KAAAC,EAAA,OAAAP,GAAApoB,CACA,IAAA4oB,GAAAlB,EAAAe,EAAAE,EAAAE,GAAAnB,EAAAgB,EAAAC,EAAAG,EAAAnI,GAAA4H,EAAAC,GAAA3M,EAAAgF,GAAA0H,EAAAK,EACAhI,IAAA/E,EADAgF,GAAA2H,EAAAK,GAEA,IAAA3I,GAAA4I,EAAA/wB,EAAA2oB,GAAA7E,EAAAqE,GAAA6I,EAAArI,GAAAR,KAAA8I,EAAAjxB,IAAAgxB,GAAArI,GAAA7E,KAAA,EACA,MAAAmN,EAAA,IACA,GAAApV,GAAAhZ,KAAAyV,KAAA2Y,GAAAC,EAAApI,GAAAX,IAAAnoB,EAAA6b,GAAAmV,EAGA,IAFAnI,GAAAqI,EAAApN,GACAoN,EAAAjI,GAAAiI,IACAb,EAAA,MAAAa,EACA,IAAAvlB,GAAAkc,EAAA5f,EAAA,GAAAgmB,EAAA/lB,EAAA,GAAA6lB,EAAA9lB,EAAA,GAAAimB,EAAAhmB,EAAA,EACA+lB,GAAApG,IAAAlc,EAAAkc,IAAAoG,IAAAtiB,EACA,IAAAwlB,GAAAlD,EAAApG,EAAAuJ,EAAA5sB,GAAA2sB,EAAAnb,IAAAoT,GAAAwF,EAAAwC,GAAAD,EAAA/H,EAEA,KADAgI,GAAAlD,EAAAH,IAAApiB,EAAAoiB,IAAAG,IAAAviB,GACAijB,EAAAwC,EAAArD,EAAAG,EAAA,EAAAgD,EAAA,IAAA1sB,GAAA0sB,EAAA,GAAArJ,GAAAuB,GAAA2E,EAAAG,GAAAH,GAAAmD,EAAA,IAAAA,EAAA,IAAAhD,EAAAiD,EAAAnb,IAAA6R,GAAAqJ,EAAA,IAAAA,EAAA,IAAAjD,GAAA,CACA,GAAAoD,GAAAvI,GAAAX,IAAAnoB,EAAA6b,GAAAmV,EAEA,OADAnI,IAAAwI,EAAAvN,IACAoN,EAAAjI,GAAAoI,MAGA,QAAAnB,GAAAxI,EAAAC,GACA,GAAAjQ,GAAAuY,EAAAR,EAAAzZ,GAAAyZ,EAAAS,EAAA,CAGA,OAFAxI,IAAAhQ,EAAAwY,GAAA,EAA4BxI,EAAAhQ,IAAAwY,GAAA,GAC5BvI,GAAAjQ,EAAAwY,GAAA,EAA4BvI,EAAAjQ,IAAAwY,GAAA,GAC5BA,EA5FA,GAAAP,GAAA9sB,KAAA+U,IAAA6X,GAAAQ,EAAAN,EAAA,EAAAS,EAAA5rB,GAAAmrB,GAAAvG,EACA,OAAA8C,IAAAwD,EAAAtD,EADAkF,GAAA7B,EAAA,EAAA5X,IACAoY,GAAA,GAAAR,KAAAzZ,GAAAyZ,EAAAzZ,KA8FA,QAAAub,IAAAzH,EAAAF,EAAA4H,EAAAC,GACA,gBAAAjF,GACA,GAAA9U,GAAAzP,EAAAukB,EAAAvkB,EAAAC,EAAAskB,EAAAtkB,EAAAwpB,EAAAzpB,EAAAnE,EAAA6tB,EAAA1pB,EAAAlE,EAAA6tB,EAAA1pB,EAAApE,EAAA+tB,EAAA3pB,EAAAnE,EAAAyY,EAAA,EAAAC,EAAA,EAAAzY,EAAA4tB,EAAAF,EAAAztB,EAAA4tB,EAAAF,CAEA,IADAja,EAAAoS,EAAA4H,EACA1tB,KAAA0T,EAAA,IAEA,GADAA,GAAA1T,EACAA,EAAA,GACA,GAAA0T,EAAA8E,EAAA,MACA9E,GAAA+E,MAAA/E,OACO,IAAA1T,EAAA,GACP,GAAA0T,EAAA+E,EAAA,MACA/E,GAAA8E,MAAA9E,GAGA,GADAA,EAAA8Z,EAAAE,EACA1tB,KAAA0T,EAAA,IAEA,GADAA,GAAA1T,EACAA,EAAA,GACA,GAAA0T,EAAA+E,EAAA,MACA/E,GAAA8E,MAAA9E,OACO,IAAA1T,EAAA,GACP,GAAA0T,EAAA8E,EAAA,MACA9E,GAAA+E,MAAA/E,GAGA,GADAA,EAAAkS,EAAA+H,EACA1tB,KAAAyT,EAAA,IAEA,GADAA,GAAAzT,EACAA,EAAA,GACA,GAAAyT,EAAA8E,EAAA,MACA9E,GAAA+E,MAAA/E,OACO,IAAAzT,EAAA,GACP,GAAAyT,EAAA+E,EAAA,MACA/E,GAAA8E,MAAA9E,GAGA,GADAA,EAAA+Z,EAAAE,EACA1tB,KAAAyT,EAAA,IAEA,GADAA,GAAAzT,EACAA,EAAA,GACA,GAAAyT,EAAA+E,EAAA,MACA/E,GAAA8E,MAAA9E,OACO,IAAAzT,EAAA,GACP,GAAAyT,EAAA8E,EAAA,MACA9E,GAAA+E,MAAA/E,GAUA,MARA8E,GAAA,IAAAgQ,EAAAvkB,GACAnE,EAAA4tB,EAAAlV,EAAAxY,EACAD,EAAA4tB,EAAAnV,EAAAvY,IAEAwY,EAAA,IAAA+P,EAAAtkB,GACApE,EAAA4tB,EAAAjV,EAAAzY,EACAD,EAAA4tB,EAAAlV,EAAAxY,IAEAuoB,OAqBA,QAAAsF,IAAAhI,EAAAF,EAAA4H,EAAAC,GA2HA,QAAAM,GAAAnV,EAAA+R,GACA,MAAAnqB,IAAAoY,EAAA,GAAAkN,GAAAV,GAAAuF,EAAA,MAAAnqB,GAAAoY,EAAA,GAAA4U,GAAApI,GAAAuF,EAAA,MAAAnqB,GAAAoY,EAAA,GAAAgN,GAAAR,GAAAuF,EAAA,MAAAA,EAAA,MAEA,QAAAnmB,GAAAP,EAAAC,GACA,MAAA8pB,GAAA/pB,EAAAnE,EAAAoE,EAAApE,GAEA,QAAAkuB,GAAA/pB,EAAAC,GACA,GAAA+pB,GAAAF,EAAA9pB,EAAA,GAAAiqB,EAAAH,EAAA7pB,EAAA,EACA,OAAA+pB,KAAAC,EAAAD,EAAAC,EAAA,IAAAD,EAAA/pB,EAAA,GAAAD,EAAA,OAAAgqB,EAAAhqB,EAAA,GAAAC,EAAA,OAAA+pB,EAAAhqB,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,GAlIA,gBAAA8D,GA+BA,QAAAomB,GAAAvV,GAEA,OADAwV,GAAA,EAAAlnB,EAAAgiB,EAAAttB,OAAAmE,EAAA6Y,EAAA,GACAlX,EAAA,EAAuBA,EAAAwF,IAAOxF,EAC9B,OAAAwC,GAAAwJ,EAAA,EAAAhS,EAAAwtB,EAAAxnB,GAAAiM,EAAAjS,EAAAE,OAAAqI,EAAAvI,EAAA,GAAoEgS,EAAAC,IAAOD,EAC3ExJ,EAAAxI,EAAAgS,GACAzJ,EAAA,IAAAlE,EACAmE,EAAA,GAAAnE,GAAA+R,GAAA7N,EAAAC,EAAA0U,GAAA,KAAAwV,EAEAlqB,EAAA,IAAAnE,GAAA+R,GAAA7N,EAAAC,EAAA0U,GAAA,KAAAwV,EAEAnqB,EAAAC,CAGA,YAAAkqB,EAEA,QAAAjH,GAAAsD,EAAAC,EAAAC,EAAA5iB,GACA,GAAA9D,GAAA,EAAAoqB,EAAA,CACA,UAAA5D,IAAAxmB,EAAA8pB,EAAAtD,EAAAE,OAAA0D,EAAAN,EAAArD,EAAAC,KAAAqD,EAAAvD,EAAAC,GAAA,EAAAC,EAAA,EACA,GACA5iB,EAAAlI,MAAA,IAAAoE,GAAA,IAAAA,EAAA6hB,EAAA0H,EAAAvpB,EAAA,EAAAwpB,EAAA7H,UACW3hB,KAAA0mB,EAAA,QAAA0D,OAEXtmB,GAAAlI,MAAA6qB,EAAA,GAAAA,EAAA,IAGA,QAAAvC,GAAAroB,EAAAC,GACA,MAAA+lB,IAAAhmB,MAAA0tB,GAAA5H,GAAA7lB,MAAA0tB,EAEA,QAAA5tB,GAAAC,EAAAC,GACAooB,EAAAroB,EAAAC,IAAAgI,EAAAlI,MAAAC,EAAAC,GAGA,QAAAojB,KACAkE,EAAAxnB,MAAAyuB,EACApF,KAAA5nB,KAAAonB,MACA6F,GAAA,EACAC,GAAA,EACAC,EAAAC,EAAAvqB,IAEA,QAAAif,KACA6D,IACAqH,EAAAK,EAAAC,GACAC,GAAAL,GAAAM,EAAAjF,SACA5C,EAAA3lB,KAAAwtB,EAAA9F,WAEA3B,EAAAxnB,QACA2uB,GAAAzmB,EAAAqb,UAEA,QAAAkL,GAAAxuB,EAAAC,GACAD,EAAAjB,KAAAC,KAAAiwB,GAAAlwB,KAAAoC,IAAA8tB,GAAAjvB,IACAC,EAAAlB,KAAAC,KAAAiwB,GAAAlwB,KAAAoC,IAAA8tB,GAAAhvB,GACA,IAAArE,GAAAysB,EAAAroB,EAAAC,EAEA,IADAmpB,GAAAR,EAAApnB,MAAAxB,EAAAC,IACAwuB,EACAI,EAAA7uB,EAAA8uB,EAAA7uB,EAAA8uB,EAAAnzB,EACA6yB,GAAA,EACA7yB,IACAqM,EAAAob,YACApb,EAAAlI,MAAAC,EAAAC,QAGA,IAAArE,GAAA8yB,EAAAzmB,EAAAlI,MAAAC,EAAAC,OAA4C,CAC5C,GAAA2H,IACAzD,GACAnE,EAAA2uB,EACA1uB,EAAA2uB,GAEAxqB,GACApE,IACAC,KAGAqoB,GAAA1gB,IACA8mB,IACAzmB,EAAAob,YACApb,EAAAlI,MAAA6H,EAAAzD,EAAAnE,EAAA4H,EAAAzD,EAAAlE,IAEAgI,EAAAlI,MAAA6H,EAAAxD,EAAApE,EAAA4H,EAAAxD,EAAAnE,GACArE,GAAAqM,EAAAqb,UACA0F,GAAA,GACaptB,IACbqM,EAAAob,YACApb,EAAAlI,MAAAC,EAAAC,GACA+oB,GAAA,GAIA2F,EAAA3uB,EAAA4uB,EAAA3uB,EAAAyuB,EAAA9yB,EArHA,GAAAurB,GAAAiC,EAAAR,EA6DAiG,EAAAC,EAAAC,EAAAJ,EAAAC,EAAAF,EAAAD,EAAAzF,EA7DAkG,EAAAjnB,EAAA+mB,EAAAnF,KAAAvB,EAAAmF,GAAAzH,EAAAF,EAAA4H,EAAAC,GACApG,GACAxnB,QACAsjB,YACAC,UACAE,aAAA,WACAvb,EAAA+mB,EACA7H,KACAiC,KACAJ,GAAA,GAEAvF,WAAA,WACAxb,EAAAinB,EACA/H,EAAA5jB,GAAAkmB,MAAAtC,EACA,IAAAC,GAAAiH,GAAArI,EAAA2H,IAAAwB,EAAAnG,GAAA5B,EAAAwE,EAAAzE,EAAArrB,QACAqzB,GAAAvD,KACA3jB,EAAAub,eACA2L,IACAlnB,EAAAob,YACAgE,EAAA,YAAApf,GACAA,EAAAqb,WAEAsI,GACA1E,GAAAC,EAAAziB,EAAA0iB,EAAAC,EAAApf,GAEAA,EAAAwb,cAEA0D,EAAAiC,EAAAR,EAAA,MA4FA,OAAArB,IAaA,QAAA6H,IAAAC,GACA,GAAApF,GAAA,EAAAG,EAAAlY,GAAA,EAAArE,EAAAyhB,GAAAD,GAAAvW,EAAAjL,EAAAoc,EAAAG,EAKA,OAJAtR,GAAAyW,UAAA,SAAAryB,GACA,MAAA6E,WAAAjG,OACA+R,EAAAoc,EAAA/sB,EAAA,GAAAgV,GAAA,IAAAkY,EAAAltB,EAAA,GAAAgV,GAAA,MADA+X,EAAA/X,GAAA,IAAAkY,EAAAlY,GAAA,MAGA4G,EAEA,QAAA0W,IAAAvF,EAAAG,GAEA,QAAAqF,GAAA7L,EAAAC,GACA,GAAA6L,GAAA3wB,KAAAyV,KAAAmb,EAAA,EAAAvoB,EAAArI,KAAA6T,IAAAiR,IAAAzc,CACA,QAAAsoB,EAAA3wB,KAAA6T,IAAAgR,GAAAxc,GAAAwoB,EAAAF,EAAA3wB,KAAA+U,IAAA8P,IAHA,GAAAQ,GAAArlB,KAAA6T,IAAAqX,GAAA7iB,GAAAgd,EAAArlB,KAAA6T,IAAAwX,IAAA,EAAAuF,EAAA,EAAAvL,GAAA,EAAAhd,EAAAgd,GAAAwL,EAAA7wB,KAAAyV,KAAAmb,GAAAvoB,CASA,OAJAqoB,GAAAzI,OAAA,SAAAhnB,EAAAC,GACA,GAAA4vB,GAAAD,EAAA3vB,CACA,QAAAlB,KAAAuV,MAAAtU,EAAA6vB,GAAAzoB,EAAAgL,IAAAud,GAAA3vB,IAAA6vB,KAAAzoB,MAAA,EAAAA,MAEAqoB,EAmGA,QAAAK,MAMA,QAAAnM,GAAA3jB,EAAAC,GACA8vB,IAAAjK,EAAA9lB,EAAAgmB,EAAA/lB,EACA+lB,EAAAhmB,EAAA8lB,EAAA7lB,EAPA,GAAA+vB,GAAAC,EAAAjK,EAAAF,CACAoK,IAAAnwB,MAAA,SAAAC,EAAAC,GACAiwB,GAAAnwB,MAAA4jB,EACAqM,EAAAhK,EAAAhmB,EAAAiwB,EAAAnK,EAAA7lB,GAMAiwB,GAAA5M,QAAA,WACAK,EAAAqM,EAAAC,IAWA,QAAAE,IAAAnwB,EAAAC,GACAD,EAAAowB,QAAApwB,GACAA,EAAAqwB,QAAArwB,GACAC,EAAAqwB,QAAArwB,GACAA,EAAAswB,QAAAtwB,GAEA,QAAAuwB,MA2BA,QAAAzwB,GAAAC,EAAAC,GACAipB,EAAA1nB,KAAA,IAAAxB,EAAA,IAAAC,EAAAwwB,GAEA,QAAAC,GAAA1wB,EAAAC,GACAipB,EAAA1nB,KAAA,IAAAxB,EAAA,IAAAC,GACA0wB,EAAA5wB,MAAA0oB,EAEA,QAAAA,GAAAzoB,EAAAC,GACAipB,EAAA1nB,KAAA,IAAAxB,EAAA,IAAAC,GAEA,QAAAqjB,KACAqN,EAAA5wB,QAEA,QAAA6wB,KACA1H,EAAA1nB,KAAA,KAxCA,GAAAivB,GAAAI,GAAA,KAAA3H,KACAyH,GACA5wB,QACAsjB,UAAA,WACAsN,EAAA5wB,MAAA2wB,GAEApN,UACAE,aAAA,WACAmN,EAAArN,QAAAsN,GAEAnN,WAAA,WACAkN,EAAArN,UACAqN,EAAA5wB,SAEA+wB,YAAA,SAAA5zB,GAEA,MADAuzB,GAAAI,GAAA3zB,GACAyzB,GAEAxuB,OAAA,WACA,GAAA+mB,EAAAptB,OAAA,CACA,GAAAqG,GAAA+mB,EAAAjP,KAAA,GAEA,OADAiP,MACA/mB,IAoBA,OAAAwuB,GAEA,QAAAE,IAAAlF,GACA,YAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,eAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,cAAAA,EAAA,IAeA,QAAAoF,IAAA/wB,EAAAC,GACAylB,IAAA1lB,EACA2lB,IAAA1lB,IACA2lB,GAEA,QAAAoL,MAMA,QAAArN,GAAA3jB,EAAAC,GACA,GAAAC,GAAAF,EAAAgmB,EAAA7lB,EAAAF,EAAA6lB,EAAAje,EAAA9I,KAAAyV,KAAAtU,IAAAC,IACA+lB,KAAAre,GAAAme,EAAAhmB,GAAA,EACAmmB,IAAAte,GAAAie,EAAA7lB,GAAA,EACAmmB,IAAAve,EACAkpB,GAAA/K,EAAAhmB,EAAA8lB,EAAA7lB,GAVA,GAAA+lB,GAAAF,CACAmL,IAAAlxB,MAAA,SAAAC,EAAAC,GACAgxB,GAAAlxB,MAAA4jB,EACAoN,GAAA/K,EAAAhmB,EAAA8lB,EAAA7lB,IAUA,QAAAixB,MACAD,GAAAlxB,MAAAgxB,GAEA,QAAAI,MAMA,QAAAxN,GAAA3jB,EAAAC,GACA,GAAAC,GAAAF,EAAAgmB,EAAA7lB,EAAAF,EAAA6lB,EAAAje,EAAA9I,KAAAyV,KAAAtU,IAAAC,IACA+lB,KAAAre,GAAAme,EAAAhmB,GAAA,EACAmmB,IAAAte,GAAAie,EAAA7lB,GAAA,EACAmmB,IAAAve,EACAA,EAAAie,EAAA9lB,EAAAgmB,EAAA/lB,EACA0mB,IAAA9e,GAAAme,EAAAhmB,GACA4mB,IAAA/e,GAAAie,EAAA7lB,GACA4mB,IAAA,EAAAhf,EACAkpB,GAAA/K,EAAAhmB,EAAA8lB,EAAA7lB,GAdA,GAAA+vB,GAAAC,EAAAjK,EAAAF,CACAmL,IAAAlxB,MAAA,SAAAC,EAAAC,GACAgxB,GAAAlxB,MAAA4jB,EACAoN,GAAAf,EAAAhK,EAAAhmB,EAAAiwB,EAAAnK,EAAA7lB,IAaAgxB,GAAA3N,QAAA,WACAK,EAAAqM,EAAAC,IAGA,QAAAmB,IAAAC,GAqBA,QAAAtxB,GAAAC,EAAAC,GACAoxB,EAAAC,OAAAtxB,EAAA8wB,EAAA7wB,GACAoxB,EAAA9F,IAAAvrB,EAAAC,EAAA6wB,EAAA,EAAAxF,IAEA,QAAAoF,GAAA1wB,EAAAC,GACAoxB,EAAAC,OAAAtxB,EAAAC,GACA0wB,EAAA5wB,MAAA0oB,EAEA,QAAAA,GAAAzoB,EAAAC,GACAoxB,EAAAE,OAAAvxB,EAAAC,GAEA,QAAAqjB,KACAqN,EAAA5wB,QAEA,QAAA6wB,KACAS,EAAAG,YAnCA,GAAAV,GAAA,IACAH,GACA5wB,QACAsjB,UAAA,WACAsN,EAAA5wB,MAAA2wB,GAEApN,UACAE,aAAA,WACAmN,EAAArN,QAAAsN,GAEAnN,WAAA,WACAkN,EAAArN,UACAqN,EAAA5wB,SAEA+wB,YAAA,SAAA5zB,GAEA,MADA4zB,GAAA5zB,EACAyzB,GAEAxuB,OAAAoF,EAmBA,OAAAopB,GAEA,QAAAc,IAAAC,GAEA,QAAAC,GAAAhB,GACA,OAAAiB,EAAAC,EAAAC,GAAAnB,GAEA,QAAAmB,GAAAnB,GACA,MAAAoB,IAAApB,EAAA,SAAA3wB,EAAAC,GACAD,EAAA0xB,EAAA1xB,EAAAC,GACA0wB,EAAA5wB,MAAAC,EAAA,GAAAA,EAAA,MAGA,QAAA6xB,GAAAlB,GAeA,QAAA5wB,GAAAC,EAAAC,GACAD,EAAA0xB,EAAA1xB,EAAAC,GACA0wB,EAAA5wB,MAAAC,EAAA,GAAAA,EAAA,IAEA,QAAAqjB,KACA2C,EAAA3hB,IACAstB,EAAA5xB,MAAAyuB,EACAmC,EAAAtN,YAEA,QAAAmL,GAAA5K,EAAAC,GACA,GAAAvY,GAAAqZ,IAAAf,EAAAC,IAAA/K,EAAA4Y,EAAA9N,EAAAC,EACAmO,GAAAhM,EAAAF,EAAA/B,EAAAkO,EAAAC,EAAApG,EAAA9F,EAAAlN,EAAA,GAAAgN,EAAAhN,EAAA,GAAAiL,EAAAH,EAAAqO,EAAA3mB,EAAA,GAAA4mB,EAAA5mB,EAAA,GAAAwgB,EAAAxgB,EAAA,GAAAsmB,EAAAjB,GACAA,EAAA5wB,MAAAimB,EAAAF,GAEA,QAAAxC,KACAqO,EAAA5xB,QACA4wB,EAAArN,UAEA,QAAAwF,KACAzF,IACAsO,EAAA5xB,MAAAoyB,EACAR,EAAArO,QAAAyF,EAEA,QAAAoJ,GAAAvO,EAAAC,GACA2K,EAAAhK,EAAAZ,EAAAa,EAAAZ,GAAAmM,EAAAhK,EAAAiK,EAAAnK,EAAAsM,EAAAH,EAAAI,EAAAH,EAAAI,EAAAxG,EACA6F,EAAA5xB,MAAAyuB,EAEA,QAAAzF,KACAiJ,EAAAhM,EAAAF,EAAA/B,EAAAkO,EAAAC,EAAApG,EAAAkE,EAAAC,EAAAzL,EAAA4N,EAAAC,EAAAC,EAAAV,EAAAjB,GACAgB,EAAArO,UACAA,IA5CA,GAAAkB,GAAAC,EAAAuL,EAAAC,EAAAmC,EAAAC,EAAAC,EAAAvO,EAAAiC,EAAAF,EAAAmM,EAAAC,EAAApG,EACA6F,GACA5xB,QACAsjB,YACAC,UACAE,aAAA,WACAmN,EAAAnN,eACAmO,EAAAtO,UAAAyF,GAEArF,WAAA,WACAkN,EAAAlN,aACAkO,EAAAtO,aAmCA,OAAAsO,GAEA,QAAAK,GAAAhM,EAAAF,EAAA/B,EAAAkO,EAAAC,EAAApG,EAAA4B,EAAAC,EAAAxD,EAAAoE,EAAAgE,EAAAxF,EAAAyF,EAAA7B,GACA,GAAAzwB,GAAAwtB,EAAA1H,EAAA7lB,EAAAwtB,EAAA7H,EAAA2M,EAAAvyB,IAAAC,GACA,IAAAsyB,EAAA,EAAAC,GAAAF,IAAA,CACA,GAAAruB,GAAA8tB,EAAA1D,EAAAnqB,EAAA8tB,EAAAK,EAAAjnB,EAAAwgB,EAAAiB,EAAAlf,EAAA9O,KAAAyV,KAAArQ,IAAAC,IAAAkH,KAAAqnB,EAAA5zB,KAAAuT,KAAAhH,GAAAuC,GAAA+kB,EAAAlyB,MAAA4K,GAAA,GAAAga,IAAA5kB,GAAAqjB,EAAAoG,GAAA7E,IAAAvB,EAAAoG,GAAA,EAAAprB,KAAAuV,MAAAlQ,EAAAD,GAAA2U,EAAA4Y,EAAAkB,EAAAD,GAAAE,EAAA/Z,EAAA,GAAAga,EAAAha,EAAA,GAAAia,EAAAF,EAAA7M,EAAAgN,EAAAF,EAAAhN,EAAAmN,EAAA9yB,EAAA4yB,EAAA7yB,EAAA8yB,GACAC,IAAAR,EAAAC,GAAAhyB,IAAAR,EAAA6yB,EAAA5yB,EAAA6yB,GAAAP,EAAA,QAAAR,EAAA1D,EAAA2D,EAAAK,EAAAzG,EAAAiB,EAAAmG,KACAlB,EAAAhM,EAAAF,EAAA/B,EAAAkO,EAAAC,EAAApG,EAAA+G,EAAAC,EAAAF,EAAAzuB,GAAA0J,EAAAzJ,GAAAyJ,EAAAvC,EAAAknB,EAAA7B,GACAA,EAAA5wB,MAAA8yB,EAAAC,GACAd,EAAAa,EAAAC,EAAAF,EAAAzuB,EAAAC,EAAAkH,EAAAoiB,EAAAC,EAAAxD,EAAAoE,EAAAgE,EAAAxF,EAAAyF,EAAA7B,KAlEA,GAAA+B,GAAA,GAAAQ,EAAAn0B,KAAA+U,IAAA,GAAAC,IAAA6d,EAAA,EA2EA,OALAD,GAAAlX,UAAA,SAAAvd,GACA,MAAA6E,WAAAjG,QACA81B,GAAAc,EAAAx1B,KAAA,MACAy0B,GAFA5yB,KAAAyV,KAAAke,IAIAf,EAiDA,QAAAwB,IAAAzB,GACA,GAAAC,GAAAF,GAAA,SAAAzxB,EAAAC,GACA,MAAAyxB,IAAA1xB,EAAAuU,GAAAtU,EAAAsU,MAEA,iBAAAoc,GACA,MAAAyC,IAAAzB,EAAAhB,KAYA,QAAA0C,IAAA1C,GACAhrB,KAAAgrB,SAsBA,QAAAoB,IAAApB,EAAA5wB,GACA,OACAA,QACA6pB,OAAA,WACA+G,EAAA/G,UAEAvG,UAAA,WACAsN,EAAAtN,aAEAC,QAAA,WACAqN,EAAArN,WAEAE,aAAA,WACAmN,EAAAnN,gBAEAC,WAAA,WACAkN,EAAAlN,eAMA,QAAA6P,IAAA5B,GACA,MAAApC,IAAA,WACA,MAAAoC,OAGA,QAAApC,IAAAD,GAKA,QAAAkE,GAAAxzB,GAEA,MADAA,GAAAyzB,EAAAzzB,EAAA,GAAAgU,GAAAhU,EAAA,GAAAgU,KACAhU,EAAA,GAAAoF,EAAAsuB,EAAAC,EAAA3zB,EAAA,GAAAoF,GAEA,QAAA6hB,GAAAjnB,GAEA,OADAA,EAAAyzB,EAAAxM,QAAAjnB,EAAA,GAAA0zB,GAAAtuB,GAAAuuB,EAAA3zB,EAAA,IAAAoF,MACApF,EAAA,GAAAwU,GAAAxU,EAAA,GAAAwU,IA4CA,QAAA4W,KACAqI,EAAA1M,GAAA0B,EAAAmL,GAAAtG,EAAAuG,EAAAC,GAAAnC,EACA,IAAAoC,GAAApC,EAAA9N,EAAAC,EAGA,OAFA4P,GAAAzzB,EAAA8zB,EAAA,GAAA3uB,EACAuuB,EAAAzzB,EAAA6zB,EAAA,GAAA3uB,EACA4uB,IAEA,QAAAA,KAEA,MADApD,OAAAqD,OAAA,EAAArD,EAAA,MACA4C,EA/DA,GAAA7B,GAAAlJ,EAAAgL,EAGKC,EAAAC,EAAA/C,EAHLsD,EAAAxC,GAAA,SAAAzxB,EAAAC,GAEA,MADAD,GAAA0xB,EAAA1xB,EAAAC,IACAD,EAAA,GAAAmF,EAAAsuB,EAAAC,EAAA1zB,EAAA,GAAAmF,KACKA,EAAA,IAAAnF,EAAA,IAAAC,EAAA,IAAA2jB,EAAA,EAAAC,EAAA,EAAAwJ,EAAA,EAAAuG,EAAA,EAAAC,EAAA,EAAAK,EAAAC,GAAAC,EAAA1tB,EAAA2tB,EAAA,KAAAC,EAAA,IA8DL,OArDAf,GAAA5C,OAAA,SAAA4D,GAIA,MAHA5D,OAAAqD,OAAA,GACArD,EAAAyC,GAAAc,EAAA1L,EAAAyL,EAAAG,EAAAG,MACA5D,EAAAqD,OAAA,EACArD,GAEA4C,EAAAc,UAAA,SAAAn3B,GACA,MAAA6E,WAAAjG,QACAo4B,EAAA,MAAAh3B,GAAAm3B,EAAAn3B,EAAAi3B,IAAAzI,IAAA2I,GAAAn3B,GAAA6W,IACAggB,KAFAM,GAIAd,EAAAe,WAAA,SAAAp3B,GACA,MAAA6E,WAAAjG,QACAw4B,EAAAp3B,EACAk3B,EAAAl3B,EAAA8wB,GAAA9wB,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,OAAAwJ,EACAqtB,KAHAO,GAKAf,EAAAra,MAAA,SAAAhc,GACA,MAAA6E,WAAAjG,QACAqJ,GAAAjI,EACAiuB,KAFAhmB,GAIAouB,EAAAiB,UAAA,SAAAt3B,GACA,MAAA6E,WAAAjG,QACAkE,GAAA9C,EAAA,GACA+C,GAAA/C,EAAA,GACAiuB,MAHAnrB,EAAAC,IAKAszB,EAAAO,OAAA,SAAA52B,GACA,MAAA6E,WAAAjG,QACA8nB,EAAA1mB,EAAA,OAAA6W,GACA8P,EAAA3mB,EAAA,OAAA6W,GACAoX,MAHAvH,EAAArP,GAAAsP,EAAAtP,KAKAgf,EAAA/K,OAAA,SAAAtrB,GACA,MAAA6E,WAAAjG,QACAuxB,EAAAnwB,EAAA,OAAA6W,GACA6f,EAAA12B,EAAA,OAAA6W,GACA8f,EAAA32B,EAAApB,OAAA,EAAAoB,EAAA,OAAA6W,GAAA,EACAoX,MAJAkC,EAAA9Y,GAAAqf,EAAArf,GAAAsf,EAAAtf,KAMAhR,GAAAgU,OAAAgc,EAAAU,EAAA,aAYA,WAGA,MAFAvC,GAAArC,EAAAtoB,MAAApB,KAAA5D,WACAwxB,EAAAvM,OAAA0K,EAAA1K,UACAmE,KAGA,QAAAiI,IAAAzC,GACA,MAAAoB,IAAApB,EAAA,SAAA3wB,EAAAC,GACA0wB,EAAA5wB,MAAAC,EAAA+T,GAAA9T,EAAA8T,MAGA,QAAA0gB,IAAA7Q,EAAAC,GACA,OAAAD,EAAAC,GAiBA,QAAA6Q,IAAA9Q,EAAAC,GACA,OAAAD,EAAA1R,GAAA0R,EAAA0H,GAAA1H,GAAA1R,GAAA0R,EAAA0H,GAAA1H,EAAAC,GAGA,QAAA8P,IAAAtG,EAAAuG,EAAAC,GACA,MAAAxG,GAAAuG,GAAAC,EAAA/M,GAAA6N,GAAAtH,GAAAuH,GAAAhB,EAAAC,IAAAc,GAAAtH,GAAAuG,GAAAC,EAAAe,GAAAhB,EAAAC,GAAAa,GAEA,QAAAG,IAAAxH,GACA,gBAAAzJ,EAAAC,GACA,MAAAD,IAAAyJ,GAAAzJ,EAAA1R,GAAA0R,EAAA0H,GAAA1H,GAAA1R,GAAA0R,EAAA0H,GAAA1H,EAAAC,IAGA,QAAA8Q,IAAAtH,GACA,GAAAyH,GAAAD,GAAAxH,EAEA,OADAyH,GAAA9N,OAAA6N,IAAAxH,GACAyH,EAEA,QAAAF,IAAAhB,EAAAC,GAEA,QAAAiB,GAAAlR,EAAAC,GACA,GAAAK,GAAAnlB,KAAA+U,IAAA+P,GAAA7jB,EAAAjB,KAAA+U,IAAA8P,GAAAM,EAAAjkB,EAAAlB,KAAA6T,IAAAgR,GAAAM,EAAArc,EAAA9I,KAAA6T,IAAAiR,GAAA1e,EAAA0C,EAAAktB,EAAA/0B,EAAAg1B,CACA,QAAAj2B,KAAAuV,MAAArU,EAAAg1B,EAAA9vB,EAAA+vB,EAAAl1B,EAAA+0B,EAAAltB,EAAAmtB,GAAA5iB,GAAAjN,EAAA8vB,EAAAh1B,EAAAi1B,IAHA,GAAAH,GAAAh2B,KAAA+U,IAAA8f,GAAAoB,EAAAj2B,KAAA6T,IAAAghB,GAAAqB,EAAAl2B,KAAA+U,IAAA+f,GAAAqB,EAAAn2B,KAAA6T,IAAAihB,EASA,OAJAiB,GAAA9N,OAAA,SAAApD,EAAAC,GACA,GAAAK,GAAAnlB,KAAA+U,IAAA+P,GAAA7jB,EAAAjB,KAAA+U,IAAA8P,GAAAM,EAAAjkB,EAAAlB,KAAA6T,IAAAgR,GAAAM,EAAArc,EAAA9I,KAAA6T,IAAAiR,GAAA1e,EAAA0C,EAAAotB,EAAAh1B,EAAAi1B,CACA,QAAAn2B,KAAAuV,MAAArU,EAAAg1B,EAAAptB,EAAAqtB,EAAAl1B,EAAA+0B,EAAA5vB,EAAA6vB,GAAA5iB,GAAAjN,EAAA4vB,EAAA/0B,EAAAg1B,KAEAF,EAkCA,QAAAtH,IAAA7B,EAAAlR,GACA,GAAAoR,GAAA9sB,KAAA+U,IAAA6X,GAAAwJ,EAAAp2B,KAAA6T,IAAA+Y,EACA,iBAAAhB,EAAAC,EAAAC,EAAA5iB,GACA,GAAA0T,GAAAkP,EAAApQ,CACA,OAAAkQ,GACAA,EAAAyK,GAAAvJ,EAAAlB,GACAC,EAAAwK,GAAAvJ,EAAAjB,IACAC,EAAA,EAAAF,EAAAC,EAAAD,EAAAC,KAAAD,GAAAE,EAAAS,MAEAX,EAAAgB,EAAAd,EAAAS,GACAV,EAAAe,EAAA,GAAAhQ,EAEA,QAAA5b,GAAAgY,EAAA4S,EAA+BE,EAAA,EAAA9S,EAAA6S,EAAA7S,EAAA6S,EAAiC7S,GAAA4D,EAChE1T,EAAAlI,SAAAolB,IAAA0G,GAAAsJ,EAAAp2B,KAAA+U,IAAAiE,IAAAod,EAAAp2B,KAAA6T,IAAAmF,MAAA,GAAAhY,EAAA,KAIA,QAAAq1B,IAAAvJ,EAAA9rB,GACA,GAAAoE,GAAAwgB,GAAA5kB,EACAoE,GAAA,IAAA0nB,EACA3G,GAAA/gB,EACA,IAAAkxB,GAAApjB,IAAA9N,EAAA,GACA,UAAAA,EAAA,MAAAkxB,KAAA,EAAAt2B,KAAAu2B,GAAAhQ,KAAA,EAAAvmB,KAAAu2B,IAgFA,QAAAC,IAAAzP,EAAA6H,EAAAxtB,GACA,GAAAF,GAAAsD,GAAA1C,MAAAilB,EAAA6H,EAAArI,GAAAnlB,GAAAiI,OAAAulB,EACA,iBAAA3tB,GACA,MAAAC,GAAAX,IAAA,SAAAW,GACA,OAAAD,EAAAC,MAIA,QAAAu1B,IAAAxP,EAAA0H,EAAAxtB,GACA,GAAAF,GAAAuD,GAAA1C,MAAAmlB,EAAA0H,EAAApI,GAAAplB,GAAAkI,OAAAslB,EACA,iBAAAztB,GACA,MAAAD,GAAAV,IAAA,SAAAU,GACA,OAAAA,EAAAC,MAIA,QAAAw1B,IAAAxwB,GACA,MAAAA,GAAA4B,OAEA,QAAA6uB,IAAAzwB,GACA,MAAAA,GAAA2B,OA+BA,QAAA+uB,IAAA3P,EAAAF,EAAA4H,EAAAC,GACA,GAAAiI,GAAA72B,KAAA+U,IAAAgS,GAAA+P,EAAA92B,KAAA6T,IAAAkT,GAAAgQ,EAAA/2B,KAAA+U,IAAA6Z,GAAAoI,EAAAh3B,KAAA6T,IAAA+a,GAAAqI,EAAAJ,EAAA72B,KAAA+U,IAAAkS,GAAAiQ,EAAAL,EAAA72B,KAAA6T,IAAAoT,GAAAkQ,EAAAJ,EAAA/2B,KAAA+U,IAAA4Z,GAAAyI,EAAAL,EAAA/2B,KAAA6T,IAAA8a,GAAAzoB,EAAA,EAAAlG,KAAAuT,KAAAvT,KAAAyV,KAAA7B,GAAAgb,EAAA7H,GAAA8P,EAAAE,EAAAnjB,GAAA+a,EAAA1H,KAAA7gB,EAAA,EAAApG,KAAA6T,IAAA3N,GACAoiB,EAAApiB,EAAA,SAAA8S,GACA,GAAAmI,GAAAnhB,KAAA6T,IAAAmF,GAAA9S,GAAAE,EAAA6a,EAAAjhB,KAAA6T,IAAA3N,EAAA8S,GAAA5S,EAAAnF,EAAAggB,EAAAgW,EAAA9V,EAAAgW,EAAAj2B,EAAA+f,EAAAiW,EAAA/V,EAAAiW,EAAAtuB,EAAAmY,EAAA6V,EAAA3V,EAAA6V,CACA,QAAAh3B,KAAAuV,MAAArU,EAAAD,GAAAuU,GAAAxV,KAAAuV,MAAAzM,EAAA9I,KAAAyV,KAAAxU,IAAAC,MAAAsU,KACK,WACL,OAAAyR,EAAAzR,GAAAuR,EAAAvR,IAGA,OADA8S,GAAA+O,SAAAnxB,EACAoiB,EAgBA,QAAAgP,MASA,QAAA1S,GAAAC,EAAAC,GACA,GAAAM,GAAAplB,KAAA6T,IAAAiR,GAAA9P,IAAAmQ,EAAAnlB,KAAA+U,IAAA+P,GAAA9L,EAAArX,IAAAkjB,GAAA7P,IAAAgQ,GAAAuS,EAAAv3B,KAAA+U,IAAAiE,EACAwe,KAAAx3B,KAAAuV,MAAAvV,KAAAyV,MAAAuD,EAAAmM,EAAAnlB,KAAA6T,IAAAmF,SAAAuM,EAAAH,EAAAC,EAAAF,EAAAoS,GAAAve,GAAAqM,EAAAD,EAAAG,EAAAJ,EAAAoS,GACAvS,EAAAH,EAAAQ,EAAAD,EAAAG,EAAAJ,EAXA,GAAAH,GAAAK,EAAAE,CACAkS,IAAAz2B,MAAA,SAAA6jB,EAAAC,GACAE,EAAAH,EAAA7P,GAAAqQ,EAAArlB,KAAA6T,IAAAiR,GAAA9P,IAAAuQ,EAAAvlB,KAAA+U,IAAA+P,GACA2S,GAAAz2B,MAAA4jB,GAEA6S,GAAAlT,QAAA,WACAkT,GAAAz2B,MAAAy2B,GAAAlT,QAAA/b,GAQA,QAAAkvB,IAAAvd,EAAAmc,GACA,QAAAqB,GAAA9S,EAAAC,GACA,GAAA8S,GAAA53B,KAAA+U,IAAA8P,GAAAM,EAAAnlB,KAAA+U,IAAA+P,GAAA1e,EAAA+T,EAAAyd,EAAAzS,EACA,QAAA/e,EAAA+e,EAAAnlB,KAAA6T,IAAAgR,GAAAze,EAAApG,KAAA6T,IAAAiR,IAMA,MAJA6S,GAAA1P,OAAA,SAAAhnB,EAAAC,GACA,GAAAyvB,GAAA3wB,KAAAyV,KAAAxU,IAAAC,KAAAqL,EAAA+pB,EAAA3F,GAAAkH,EAAA73B,KAAA6T,IAAAtH,GAAAurB,EAAA93B,KAAA+U,IAAAxI,EACA,QAAAvM,KAAAuV,MAAAtU,EAAA42B,EAAAlH,EAAAmH,GAAA93B,KAAAuT,KAAAod,GAAAzvB,EAAA22B,EAAAlH,KAEAgH,EAiBA,QAAAI,IAAA7M,EAAAG,GAKA,QAAAqF,GAAA7L,EAAAC,GACAkT,EAAA,EACAlT,GAAAxR,GAAAiT,KAAAzB,GAAAxR,GAAAiT,IAEAzB,EAAAxR,GAAAiT,KAAAzB,EAAAxR,GAAAiT,GAEA,IAAAoK,GAAAqH,EAAAh4B,KAAA2V,IAAAqD,EAAA8L,GAAAzc,EACA,QAAAsoB,EAAA3wB,KAAA6T,IAAAxL,EAAAwc,GAAAmT,EAAArH,EAAA3wB,KAAA+U,IAAA1M,EAAAwc,IAXA,GAAAU,GAAAvlB,KAAA+U,IAAAmW,GAAAlS,EAAA,SAAA8L,GACA,MAAA9kB,MAAAi4B,IAAA9kB,GAAA,EAAA2R,EAAA,IACKzc,EAAA6iB,IAAAG,EAAArrB,KAAA6T,IAAAqX,GAAAlrB,KAAA4D,IAAA2hB,EAAAvlB,KAAA+U,IAAAsW,IAAArrB,KAAA4D,IAAAoV,EAAAqS,GAAArS,EAAAkS,IAAA8M,EAAAzS,EAAAvlB,KAAA2V,IAAAqD,EAAAkS,GAAA7iB,IACL,OAAAA,IAUAqoB,EAAAzI,OAAA,SAAAhnB,EAAAC,GACA,GAAA4vB,GAAAkH,EAAA92B,EAAAyvB,EAAA3d,GAAA3K,GAAArI,KAAAyV,KAAAxU,IAAA6vB,IACA,QAAA9wB,KAAAuV,MAAAtU,EAAA6vB,GAAAzoB,EAAA,EAAArI,KAAA0rB,KAAA1rB,KAAA2V,IAAAqiB,EAAArH,EAAA,EAAAtoB,IAAAiL,KAEAod,GAdAwH,GAmBA,QAAAC,IAAAjN,EAAAG,GAGA,QAAAqF,GAAA7L,EAAAC,GACA,GAAA6L,GAAAyH,EAAAtT,CACA,QAAA6L,EAAA3wB,KAAA6T,IAAAxL,EAAAwc,GAAAuT,EAAAzH,EAAA3wB,KAAA+U,IAAA1M,EAAAwc,IAJA,GAAAU,GAAAvlB,KAAA+U,IAAAmW,GAAA7iB,EAAA6iB,IAAAG,EAAArrB,KAAA6T,IAAAqX,IAAA3F,EAAAvlB,KAAA+U,IAAAsW,OAAAH,GAAAkN,EAAA7S,EAAAld,EAAA6iB,CACA,OAAAvpB,IAAA0G,GAAAke,GAAAmP,IAKAhF,EAAAzI,OAAA,SAAAhnB,EAAAC,GACA,GAAA4vB,GAAAsH,EAAAl3B,CACA,QAAAlB,KAAAuV,MAAAtU,EAAA6vB,GAAAzoB,EAAA+vB,EAAAplB,GAAA3K,GAAArI,KAAAyV,KAAAxU,IAAA6vB,OAEAJ,GAWA,QAAAwH,IAAArT,EAAAC,GACA,OAAAD,EAAA7kB,KAAA4D,IAAA5D,KAAAi4B,IAAA9kB,GAAA,EAAA2R,EAAA,KAKA,QAAAuT,IAAA1F,GACA,GAAA2F,GAAAxpB,EAAAylB,GAAA5B,GAAAxY,EAAArL,EAAAqL,MAAAsb,EAAA3mB,EAAA2mB,UAAAF,EAAAzmB,EAAAymB,UAqBA,OApBAzmB,GAAAqL,MAAA,WACA,GAAAtd,GAAAsd,EAAAnS,MAAA8G,EAAA9L,UACA,OAAAnG,KAAAiS,EAAAwpB,EAAAxpB,EAAAymB,WAAA,MAAAzmB,EAAAjS,GAEAiS,EAAA2mB,UAAA,WACA,GAAA54B,GAAA44B,EAAAztB,MAAA8G,EAAA9L,UACA,OAAAnG,KAAAiS,EAAAwpB,EAAAxpB,EAAAymB,WAAA,MAAAzmB,EAAAjS,GAEAiS,EAAAymB,WAAA,SAAAp3B,GACA,GAAAtB,GAAA04B,EAAAvtB,MAAA8G,EAAA9L,UACA,IAAAnG,IAAAiS,GACA,GAAAwpB,EAAA,MAAAn6B,EAAA,CACA,GAAAiI,GAAA+M,GAAAgH,IAAAnB,EAAAyc,GACAF,KAAAvc,EAAA,GAAA5S,EAAA4S,EAAA,GAAA5S,IAAA4S,EAAA,GAAA5S,EAAA4S,EAAA,GAAA5S,UAEOkyB,KACPz7B,EAAA,KAEA,OAAAA,IAEAiS,EAAAymB,WAAA,MAmBA,QAAAgD,IAAA1T,EAAAC,GACA,OAAA9kB,KAAA4D,IAAA5D,KAAAi4B,IAAA9kB,GAAA,EAAA2R,EAAA,KAAAD,GAiBA,QAAA2T,IAAAtyB,GACA,MAAAA,GAAA,GAEA,QAAAuyB,IAAAvyB,GACA,MAAAA,GAAA,GA2BA,QAAAwyB,IAAA1P,GAEA,OADA3gB,GAAA2gB,EAAAjsB,OAAA47B,GAAA,KAAAC,EAAA,EACA/1B,EAAA,EAAmBA,EAAAwF,EAAOxF,IAAA,CAC1B,KAAA+1B,EAAA,GAAA3lB,GAAA+V,EAAA2P,EAAAC,EAAA,IAAA5P,EAAA2P,EAAAC,EAAA,IAAA5P,EAAAnmB,KAAA,KAAA+1B,CACAD,GAAAC,KAAA/1B,EAEA,MAAA81B,GAAAzxB,MAAA,EAAA0xB,GAEA,QAAAC,IAAAzzB,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,GAqDA,QAAAyzB,IAAA/e,EAAA3U,EAAAC,GACA,OAAAA,EAAA,GAAAD,EAAA,KAAA2U,EAAA,GAAA3U,EAAA,KAAAC,EAAA,GAAAD,EAAA,KAAA2U,EAAA,GAAA3U,EAAA,IAEA,QAAA2zB,IAAAxsB,EAAArG,EAAAd,EAAAC,GACA,GAAAspB,GAAApiB,EAAA,GAAAysB,EAAA5zB,EAAA,GAAA6zB,EAAA/yB,EAAA,GAAAyoB,EAAAuK,EAAA7zB,EAAA,GAAA2zB,EAAApK,EAAAriB,EAAA,GAAA4sB,EAAA/zB,EAAA,GAAAg0B,EAAAlzB,EAAA,GAAA0oB,EAAAyK,EAAAh0B,EAAA,GAAA8zB,EAAAG,GAAAJ,GAAAtK,EAAAuK,GAAAE,GAAA1K,EAAAqK,KAAAK,EAAAJ,EAAAC,EAAAE,EACA,QAAAzK,EAAA2K,EAAAL,EAAArK,EAAA0K,EAAAF,GAEA,QAAAG,IAAApV,GACA,GAAA/e,GAAA+e,EAAA,GAAA9e,EAAA8e,IAAApnB,OAAA,EACA,SAAAqI,EAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,IAGA,QAAAm0B,MACAC,GAAA7yB,MACAA,KAAAjH,KAAAiH,KAAA8yB,KAAA9yB,KAAA+yB,OAAA,KAEA,QAAAC,IAAAF,GACA,GAAAG,GAAAC,GAAA1P,OAAA,GAAAoP,GAEA,OADAK,GAAAH,OACAG,EAEA,QAAAE,IAAAF,GACAG,GAAAH,GACAI,GAAA3wB,OAAAuwB,GACAC,GAAAr3B,KAAAo3B,GACAJ,GAAAI,GAEA,QAAAK,IAAAL,GACA,GAAAF,GAAAE,EAAAF,OAAA14B,EAAA04B,EAAA14B,EAAAC,EAAAy4B,EAAAjS,GAAAyS,GACAl5B,IACAC,KACKk5B,EAAAP,EAAAQ,EAAAC,EAAAT,EAAAU,EAAAC,GAAAX,EACLE,IAAAF,EAEA,KADA,GAAAY,GAAAL,EACAK,EAAAd,QAAAh4B,GAAAV,EAAAw5B,EAAAd,OAAA14B,GAAAslB,IAAA5kB,GAAAT,EAAAu5B,EAAAd,OAAAjS,IAAAnB,IACA6T,EAAAK,EAAAJ,EACAG,EAAAE,QAAAD,GACAV,GAAAU,GACAA,EAAAL,CAEAI,GAAAE,QAAAD,GACAT,GAAAS,EAEA,KADA,GAAAE,GAAAL,EACAK,EAAAhB,QAAAh4B,GAAAV,EAAA05B,EAAAhB,OAAA14B,GAAAslB,IAAA5kB,GAAAT,EAAAy5B,EAAAhB,OAAAjS,IAAAnB,IACA+T,EAAAK,EAAAJ,EACAC,EAAA/3B,KAAAk4B,GACAZ,GAAAY,GACAA,EAAAL,CAEAE,GAAA/3B,KAAAk4B,GACAX,GAAAW,EACA,IAAAC,GAAAC,EAAAL,EAAAz9B,MACA,KAAA69B,EAAA,EAAkBA,EAAAC,IAAcD,EAChCD,EAAAH,EAAAI,GACAH,EAAAD,EAAAI,EAAA,GACAE,GAAAH,EAAAh7B,KAAA86B,EAAAf,KAAAiB,EAAAjB,KAAAS,EAEAM,GAAAD,EAAA,GACAG,EAAAH,EAAAK,EAAA,GACAF,EAAAh7B,KAAAo7B,GAAAN,EAAAf,KAAAiB,EAAAjB,KAAA,KAAAS,GACAa,GAAAP,GACAO,GAAAL,GAEA,QAAAM,IAAAvB,GAEA,IADA,GAAAe,GAAAE,EAAAO,EAAAC,EAAAl6B,EAAAy4B,EAAAz4B,EAAAm6B,EAAA1B,EAAAx4B,EAAA1B,EAAAy6B,GAAA97B,EACAqB,GAEA,IADA07B,EAAAG,GAAA77B,EAAA47B,GAAAn6B,GACAslB,GAAA/mB,IAAA2e,MAAiC,CAEjC,MADAgd,EAAAl6B,EAAAq6B,GAAA97B,EAAA47B,IACA7U,IAMS,CACT2U,GAAA3U,IACAkU,EAAAj7B,EAAA66B,EACAM,EAAAn7B,GACW27B,GAAA5U,IACXkU,EAAAj7B,EACAm7B,EAAAn7B,EAAA+6B,GAEAE,EAAAE,EAAAn7B,CAEA,OAfA,IAAAA,EAAA+7B,EAAA,CACAd,EAAAj7B,CACA,OAEAA,IAAA+7B,EAeA,GAAAC,GAAA5B,GAAAF,EAEA,IADAO,GAAAwB,OAAAhB,EAAAe,GACAf,GAAAE,EAAA,CACA,GAAAF,IAAAE,EAOA,MANAX,IAAAS,GACAE,EAAAf,GAAAa,EAAAf,MACAO,GAAAwB,OAAAD,EAAAb,GACAa,EAAA77B,KAAAg7B,EAAAh7B,KAAAo7B,GAAAN,EAAAf,KAAA8B,EAAA9B,MACAsB,GAAAP,OACAO,IAAAL,EAGA,KAAAA,EAEA,YADAa,EAAA77B,KAAAo7B,GAAAN,EAAAf,KAAA8B,EAAA9B,MAGAM,IAAAS,GACAT,GAAAW,EACA,IAAAe,GAAAjB,EAAAf,KAAA7K,EAAA6M,EAAAz6B,EAAA6tB,EAAA4M,EAAAx6B,EAAA6tB,EAAA2K,EAAAz4B,EAAA4tB,EAAAG,EAAA0K,EAAAx4B,EAAA4tB,EAAA6M,EAAAhB,EAAAjB,KAAAjS,EAAAkU,EAAA16B,EAAA4tB,EAAAnH,EAAAiU,EAAAz6B,EAAA4tB,EAAA5oB,EAAA,GAAA6oB,EAAArH,EAAAsH,EAAAvH,GAAAmU,EAAA7M,IAAAC,IAAA6M,EAAApU,IAAAC,IAAAyS,GACAl5B,GAAAymB,EAAAkU,EAAA5M,EAAA6M,GAAA31B,EAAA2oB,EACA3tB,GAAA6tB,EAAA8M,EAAApU,EAAAmU,GAAA11B,EAAA4oB,EAEAgM,IAAAH,EAAAh7B,KAAA+7B,EAAAC,EAAAxB,GACAqB,EAAA77B,KAAAo7B,GAAAW,EAAAhC,EAAA,KAAAS,GACAQ,EAAAh7B,KAAAo7B,GAAArB,EAAAiC,EAAA,KAAAxB,GACAa,GAAAP,GACAO,GAAAL,IAEA,QAAAU,IAAA7O,EAAA4O,GACA,GAAA1B,GAAAlN,EAAAkN,KAAAoC,EAAApC,EAAAz4B,EAAA86B,EAAArC,EAAAx4B,EAAA86B,EAAAD,EAAAX,CACA,KAAAY,EAAA,MAAAF,EACA,IAAArB,GAAAjO,EAAA6N,CACA,KAAAI,EAAA,OAAA5gB,GACA6f,GAAAe,EAAAf,IACA,IAAAuC,GAAAvC,EAAAz4B,EAAAi7B,EAAAxC,EAAAx4B,EAAAi7B,EAAAD,EAAAd,CACA,KAAAe,EAAA,MAAAF,EACA,IAAAG,GAAAH,EAAAH,EAAAO,EAAA,EAAAL,EAAA,EAAAG,EAAA92B,EAAA+2B,EAAAD,CACA,OAAAE,KAAAh3B,EAAArF,KAAAyV,KAAApQ,IAAA,EAAAg3B,GAAAD,MAAA,EAAAD,GAAAD,EAAAC,EAAA,EAAAJ,EAAAC,EAAA,KAAAK,EAAAP,GACAA,EAAAG,GAAA,EAEA,QAAAX,IAAA9O,EAAA4O,GACA,GAAAT,GAAAnO,EAAA+N,CACA,IAAAI,EAAA,MAAAU,IAAAV,EAAAS,EACA,IAAA1B,GAAAlN,EAAAkN,IACA,OAAAA,GAAAx4B,IAAAk6B,EAAA1B,EAAAz4B,EAAA4Y,IAEA,QAAAyiB,IAAA5C,GACA9yB,KAAA8yB,OACA9yB,KAAAnH,SAWA,QAAA88B,IAAAC,GAEA,IADA,GAAA1I,GAAAC,EAAAiF,EAAAG,EAAAsD,EAAAC,EAAAC,EAAAC,EAAAn5B,EAAAo5B,EAAA5V,EAAAuV,EAAA,MAAA7N,EAAA6N,EAAA,MAAAzV,EAAAyV,EAAA,MAAA5N,EAAA4N,EAAA,MAAAM,EAAAC,GAAAC,EAAAF,EAAA//B,OACAigC,KAEA,IADAP,EAAAK,EAAAE,KACAP,EAAAQ,UAIA,IAHAN,EAAAF,EAAAh9B,MACAm9B,EAAAD,EAAA5/B,OACA2/B,EAAA,EACAA,EAAAE,GACAC,EAAAF,EAAAD,GAAAG,MAAA7D,EAAA6D,EAAA57B,EAAAk4B,EAAA0D,EAAA37B,EACAuC,EAAAk5B,IAAAD,EAAAE,GAAAn5B,QAAAqwB,EAAArwB,EAAAxC,EAAA8yB,EAAAtwB,EAAAvC,GACAS,GAAAq3B,EAAAlF,GAAAvN,IAAA5kB,GAAAw3B,EAAApF,GAAAxN,MACAoW,EAAAO,OAAAR,EAAA,KAAAS,IAAAC,GAAAX,EAAA/C,KAAAmD,EAAAl7B,GAAAq3B,EAAA/R,GAAAV,IAAAqI,EAAAuK,EAAA5S,IACAtlB,EAAAgmB,EACA/lB,EAAAS,GAAAmyB,EAAA7M,GAAAV,GAAAwN,EAAAnF,GACWjtB,GAAAw3B,EAAAvK,GAAArI,IAAAoI,EAAAqK,EAAAzS,IACXtlB,EAAAU,GAAAoyB,EAAAnF,GAAArI,GAAAuN,EAAAnF,EACAztB,EAAA0tB,GACWjtB,GAAAq3B,EAAArK,GAAApI,IAAA4S,EAAApS,EAAAR,IACXtlB,EAAA0tB,EACAztB,EAAAS,GAAAmyB,EAAAnF,GAAApI,GAAAwN,EAAAhN,GACWplB,GAAAw3B,EAAApS,GAAAR,IAAAyS,EAAA/R,EAAAV,IACXtlB,EAAAU,GAAAoyB,EAAAhN,GAAAR,GAAAuN,EAAA7M,EACA/lB,EAAA6lB,GACW,MAAA0V,EAAA/C,KAAA,SACXkD,GAKA,QAAAS,IAAAj4B,EAAAC,GACA,MAAAA,GAAAixB,MAAAlxB,EAAAkxB,MAEA,QAAAgH,MACA7D,GAAA7yB,MACAA,KAAA3F,EAAA2F,KAAA1F,EAAA0F,KAAA4lB,IAAA5lB,KAAA8yB,KAAA9yB,KAAA8gB,GAAA,KAEA,QAAAsT,IAAAxO,GACA,GAAAiO,GAAAjO,EAAA6N,EAAAM,EAAAnO,EAAA+N,CACA,IAAAE,GAAAE,EAAA,CACA,GAAAe,GAAAjB,EAAAf,KAAA6D,EAAA/Q,EAAAkN,KAAAiC,EAAAhB,EAAAjB,IACA,IAAAgC,IAAAC,EAAA,CACA,GAAA5M,GAAAwO,EAAAt8B,EAAA+tB,EAAAuO,EAAAr8B,EAAA2tB,EAAA6M,EAAAz6B,EAAA8tB,EAAAD,EAAA4M,EAAAx6B,EAAA8tB,EAAAvH,EAAAkU,EAAA16B,EAAA8tB,EAAArH,EAAAiU,EAAAz6B,EAAA8tB,EACA9oB,EAAA,GAAA2oB,EAAAnH,EAAAoH,EAAArH,EACA,MAAAvhB,IAAAs3B,IAAA,CACA,GAAAC,GAAA5O,IAAAC,IAAA+M,EAAApU,IAAAC,IAAAzmB,GAAAymB,EAAA+V,EAAA3O,EAAA+M,GAAA31B,EAAAhF,GAAA2tB,EAAAgN,EAAApU,EAAAgW,GAAAv3B,EAAAwhB,EAAAxmB,EAAA8tB,EACA2K,EAAA+D,GAAAtT,OAAA,GAAAkT,GACA3D,GAAAnN,MACAmN,EAAAD,KAAA6D,EACA5D,EAAA14B,IAAA8tB,EACA4K,EAAAz4B,EAAAwmB,EAAA1nB,KAAAyV,KAAAxU,IAAAC,KACAy4B,EAAAjS,KACA8E,EAAAmN,QAEA,KADA,GAAAtd,GAAA,KAAA7c,EAAAm+B,GAAAx/B,EACAqB,GACA,GAAAm6B,EAAAz4B,EAAA1B,EAAA0B,GAAAy4B,EAAAz4B,IAAA1B,EAAA0B,GAAAy4B,EAAA14B,GAAAzB,EAAAyB,EAAA,CACA,IAAAzB,EAAA2e,EAAkC,CAClC9B,EAAA7c,EAAA66B,CACA,OAFA76B,IAAA2e,MAIO,CACP,IAAA3e,EAAA+7B,EAAkC,CAClClf,EAAA7c,CACA,OAFAA,IAAA+7B,EAMAoC,GAAAlC,OAAApf,EAAAsd,GACAtd,IAAAuhB,GAAAjE,MAEA,QAAAK,IAAAxN,GACA,GAAAmN,GAAAnN,EAAAmN,MACAA,KACAA,EAAAU,IAAAuD,GAAAjE,EAAAY,GACAoD,GAAAr0B,OAAAqwB,GACA+D,GAAAj7B,KAAAk3B,GACAF,GAAAE,GACAnN,EAAAmN,OAAA,MAGA,QAAAkE,IAAArB,GAEA,IADA,GAAAv/B,GAAAwC,EAAAq+B,GAAAtV,EAAAkG,GAAA8N,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,OAAA35B,EAAApD,EAAA1C,OACA8F,KACA5F,EAAAwC,EAAAoD,KACAk7B,GAAA9gC,EAAAu/B,KAAAhU,EAAAvrB,IAAA0E,GAAA1E,EAAAmI,EAAAnE,EAAAhE,EAAAoI,EAAApE,GAAAslB,IAAA5kB,GAAA1E,EAAAmI,EAAAlE,EAAAjE,EAAAoI,EAAAnE,GAAAqlB,MACAtpB,EAAAmI,EAAAnI,EAAAoI,EAAA,KACA5F,EAAAy9B,OAAAr6B,EAAA,IAIA,QAAAk7B,IAAAp+B,EAAA68B,GACA,GAAAwB,GAAAr+B,EAAA0F,CACA,IAAA24B,EAAA,QACA,IAAAC,GAAAC,EAAAC,EAAAx+B,EAAAyF,EAAA6hB,EAAAuV,EAAA,MAAA7N,EAAA6N,EAAA,MAAAzV,EAAAyV,EAAA,MAAA5N,EAAA4N,EAAA,MAAAd,EAAA/7B,EAAAkJ,EAAA8yB,EAAAh8B,EAAAkV,EAAAupB,EAAA1C,EAAAz6B,EAAAo9B,EAAA3C,EAAAx6B,EAAAo9B,EAAA3C,EAAA16B,EAAAs9B,EAAA5C,EAAAz6B,EAAAs9B,GAAAJ,EAAAE,GAAA,EAAAG,GAAAJ,EAAAE,GAAA,CACA,IAAAA,IAAAF,EAAA,CACA,GAAAG,EAAAvX,GAAAuX,GAAA7P,EAAA,MACA,IAAAyP,EAAAE,EAAA,CACA,GAAAH,GAGU,GAAAA,EAAAj9B,GAAA0tB,EAAA,WAHVuP,IACAl9B,EAAAu9B,EACAt9B,EAAA6lB,EAEAiX,IACA/8B,EAAAu9B,EACAt9B,EAAA0tB,OAEO,CACP,GAAAuP,GAGU,GAAAA,EAAAj9B,EAAA6lB,EAAA,WAHVoX,IACAl9B,EAAAu9B,EACAt9B,EAAA0tB,EAEAoP,IACA/8B,EAAAu9B,EACAt9B,EAAA6lB,QAMA,IAFAkX,GAAAG,EAAAE,IAAAC,EAAAF,GACAH,EAAAO,EAAAR,EAAAO,EACAP,GAAA,GAAAA,EAAA,EACA,GAAAG,EAAAE,EAAA,CACA,GAAAH,GAGY,GAAAA,EAAAj9B,GAAA0tB,EAAA,WAHZuP,IACAl9B,GAAA8lB,EAAAmX,GAAAD,EACA/8B,EAAA6lB,EAEAiX,IACA/8B,GAAA2tB,EAAAsP,GAAAD,EACA/8B,EAAA0tB,OAES,CACT,GAAAuP,GAGY,GAAAA,EAAAj9B,EAAA6lB,EAAA,WAHZoX,IACAl9B,GAAA2tB,EAAAsP,GAAAD,EACA/8B,EAAA0tB,EAEAoP,IACA/8B,GAAA8lB,EAAAmX,GAAAD,EACA/8B,EAAA6lB,OAIA,IAAAsX,EAAAE,EAAA,CACA,GAAAJ,GAGY,GAAAA,EAAAl9B,GAAA0tB,EAAA,WAHZwP,IACAl9B,EAAAgmB,EACA/lB,EAAA+8B,EAAAhX,EAAAiX,EAEAF,IACA/8B,EAAA0tB,EACAztB,EAAA+8B,EAAAtP,EAAAuP,OAES,CACT,GAAAC,GAGY,GAAAA,EAAAl9B,EAAAgmB,EAAA,WAHZkX,IACAl9B,EAAA0tB,EACAztB,EAAA+8B,EAAAtP,EAAAuP,EAEAF,IACA/8B,EAAAgmB,EACA/lB,EAAA+8B,EAAAhX,EAAAiX,GAOA,MAFAv+B,GAAAyF,EAAA+4B,EACAx+B,EAAA0F,EAAA24B,GACA,EAEA,QAAAU,IAAAhD,EAAAC,GACA/0B,KAAAiC,EAAA6yB,EACA90B,KAAAiO,EAAA8mB,EACA/0B,KAAAxB,EAAAwB,KAAAvB,EAAA,KAEA,QAAA01B,IAAAW,EAAAC,EAAAwC,EAAAH,GACA,GAAAr+B,GAAA,GAAA++B,IAAAhD,EAAAC,EAMA,OALAmC,IAAAr7B,KAAA9C,GACAw+B,GAAArD,GAAAn7B,EAAA+7B,EAAAC,EAAAwC,GACAH,GAAAlD,GAAAn7B,EAAAg8B,EAAAD,EAAAsC,GACAjB,GAAArB,EAAA74B,GAAApD,MAAAgD,KAAA,GAAA06B,IAAAx9B,EAAA+7B,EAAAC,IACAoB,GAAApB,EAAA94B,GAAApD,MAAAgD,KAAA,GAAA06B,IAAAx9B,EAAAg8B,EAAAD,IACA/7B,EAEA,QAAAy9B,IAAA1B,EAAAyC,EAAAH,GACA,GAAAr+B,GAAA,GAAA++B,IAAAhD,EAAA,KAIA,OAHA/7B,GAAAyF,EAAA+4B,EACAx+B,EAAA0F,EAAA24B,EACAF,GAAAr7B,KAAA9C,GACAA,EAEA,QAAAm7B,IAAAn7B,EAAA+7B,EAAAC,EAAAxB,GACAx6B,EAAAyF,GAAAzF,EAAA0F,EAIK1F,EAAAkJ,IAAA8yB,EACLh8B,EAAA0F,EAAA80B,EAEAx6B,EAAAyF,EAAA+0B,GANAx6B,EAAAyF,EAAA+0B,EACAx6B,EAAAkJ,EAAA6yB,EACA/7B,EAAAkV,EAAA8mB,GAOA,QAAAwB,IAAAx9B,EAAA+7B,EAAAC,GACA,GAAAwC,GAAAx+B,EAAAyF,EAAA44B,EAAAr+B,EAAA0F,CACAuB,MAAAjH,OACAiH,KAAA8yB,KAAAgC,EACA90B,KAAA0vB,MAAAqF,EAAA37B,KAAAuV,MAAAomB,EAAAz6B,EAAAw6B,EAAAx6B,EAAAy6B,EAAA16B,EAAAy6B,EAAAz6B,GAAAtB,EAAAkJ,IAAA6yB,EAAA17B,KAAAuV,MAAAyoB,EAAA/8B,EAAAk9B,EAAAl9B,EAAAk9B,EAAAj9B,EAAA88B,EAAA98B,GAAAlB,KAAAuV,MAAA4oB,EAAAl9B,EAAA+8B,EAAA/8B,EAAA+8B,EAAA98B,EAAAi9B,EAAAj9B,GAUA,QAAAy9B,MACA/3B,KAAAzI,EAAA,KAEA,QAAAs7B,IAAAj6B,GACAA,EAAAkf,EAAAlf,EAAAoxB,EAAApxB,EAAA2e,EAAA3e,EAAA+7B,EAAA/7B,EAAA66B,EAAA76B,EAAA+6B,EAAA,KAkKA,QAAAqE,IAAAC,EAAAr/B,GACA,GAAAua,GAAAva,EAAA6uB,EAAA7uB,EAAA+7B,EAAAttB,EAAA8L,EAAA2E,CACAzQ,GACAA,EAAAkQ,IAAApE,EAAA9L,EAAAkQ,EAAAkQ,EAAuCpgB,EAAAstB,EAAAlN,EAEvCwQ,EAAA1gC,EAAAkwB,EAEAA,EAAA3P,EAAAzQ,EACA8L,EAAA2E,EAAA2P,EACAtU,EAAAwhB,EAAAlN,EAAAlQ,EACApE,EAAAwhB,IAAAxhB,EAAAwhB,EAAA7c,EAAA3E,GACAsU,EAAAlQ,EAAApE,EAEA,QAAA+kB,IAAAD,EAAAr/B,GACA,GAAAua,GAAAva,EAAA6uB,EAAA7uB,EAAA2e,EAAAlQ,EAAA8L,EAAA2E,CACAzQ,GACAA,EAAAkQ,IAAApE,EAAA9L,EAAAkQ,EAAAkQ,EAAuCpgB,EAAAstB,EAAAlN,EAEvCwQ,EAAA1gC,EAAAkwB,EAEAA,EAAA3P,EAAAzQ,EACA8L,EAAA2E,EAAA2P,EACAtU,EAAAoE,EAAAkQ,EAAAkN,EACAxhB,EAAAoE,IAAApE,EAAAoE,EAAAO,EAAA3E,GACAsU,EAAAkN,EAAAxhB,EAEA,QAAAglB,IAAAv/B,GACA,KAAAA,EAAA2e,GAAA3e,IAAA2e,CACA,OAAA3e,GAEA,QAAAw/B,IAAAC,EAAAC,GACA,GAAAjY,GAAAF,EAAA4S,EAAAD,EAAAuF,EAAApW,KAAAsW,IAAA/U,KAKA,KAJA0T,MACAf,GAAA,GAAAvgB,OAAAyiB,EAAAliC,QACAk9B,GAAA,GAAA0E,IACAhB,GAAA,GAAAgB,MAGA,GADAhF,EAAAiE,GACAlE,KAAAC,GAAAD,EAAAx4B,EAAAy4B,EAAAz4B,GAAAw4B,EAAAx4B,IAAAy4B,EAAAz4B,GAAAw4B,EAAAz4B,EAAA04B,EAAA14B,GACAy4B,EAAAz4B,IAAAgmB,GAAAyS,EAAAx4B,IAAA6lB,IACAgW,GAAArD,EAAA72B,GAAA,GAAAy5B,IAAA5C,GACAuB,GAAAvB,GACAzS,EAAAyS,EAAAz4B,EAAA8lB,EAAA2S,EAAAx4B,GAEAw4B,EAAAuF,EAAA7U,UACO,KAAAuP,EAGP,KAFAO,IAAAP,EAAAnN,KAKA0S,IAAArB,GAAAqB,GAAA3C,GAAA2C,GACA,IAAAE,IACAtC,MAAAC,GACAt9B,MAAAq+B,GAGA,OADA7D,IAAA0D,GAAAG,GAAAf,GAAA,KACAqC,EAEA,QAAAD,IAAA/5B,EAAAC,GACA,MAAAA,GAAAnE,EAAAkE,EAAAlE,GAAAmE,EAAApE,EAAAmE,EAAAnE,EAqEA,QAAAo+B,IAAAj6B,EAAAC,EAAAkH,GACA,OAAAnH,EAAAnE,EAAAsL,EAAAtL,IAAAoE,EAAAnE,EAAAkE,EAAAlE,IAAAkE,EAAAnE,EAAAoE,EAAApE,IAAAsL,EAAArL,EAAAkE,EAAAlE,GAgHA,QAAAo+B,IAAAp5B,GACA,MAAAA,GAAAjF,EAEA,QAAAs+B,IAAAr5B,GACA,MAAAA,GAAAhF,EAEA,QAAAs+B,MACA,OACAC,MAAA,EACAlgC,SACAyB,MAAA,KACAC,EAAA,KACAC,EAAA,MAGA,QAAAw+B,IAAAttB,EAAA5S,EAAAmvB,EAAAC,EAAAkF,EAAAC,GACA,IAAA3hB,EAAA5S,EAAAmvB,EAAAC,EAAAkF,EAAAC,GAAA,CACA,GAAAtyB,GAAA,IAAAktB,EAAAmF,GAAApyB,EAAA,IAAAktB,EAAAmF,GAAAj3B,EAAA0C,EAAAD,KACAzC,GAAA,IAAA4iC,GAAAttB,EAAAtV,EAAA,GAAA6xB,EAAAC,EAAAntB,EAAAC,GACA5E,EAAA,IAAA4iC,GAAAttB,EAAAtV,EAAA,GAAA2E,EAAAmtB,EAAAkF,EAAApyB,GACA5E,EAAA,IAAA4iC,GAAAttB,EAAAtV,EAAA,GAAA6xB,EAAAjtB,EAAAD,EAAAsyB,GACAj3B,EAAA,IAAA4iC,GAAAttB,EAAAtV,EAAA,GAAA2E,EAAAC,EAAAoyB,EAAAC,IAGA,QAAA4L,IAAAC,EAAA3+B,EAAAC,EAAA+lB,EAAAF,EAAAiS,EAAAG,GACA,GAAA0G,GAAAC,EAAAjmB,GAiCA,OAhCA,SAAAkmB,GAAAvgC,EAAAmvB,EAAAC,EAAAkF,EAAAC,GACA,KAAApF,EAAAqK,GAAApK,EAAAuK,GAAArF,EAAA7M,GAAA8M,EAAAhN,GAAA,CACA,GAAA/lB,EAAAxB,EAAAwB,MAAA,CACA,GAAAA,GAAAG,EAAAF,EAAAzB,EAAAyB,EAAAG,EAAAF,EAAA1B,EAAA0B,EAAA8+B,EAAA7+B,IAAAC,GACA,IAAA4+B,EAAAF,EAAA,CACA,GAAAzI,GAAAr3B,KAAAyV,KAAAqqB,EAAAE,EACA/Y,GAAAhmB,EAAAo2B,EAAAtQ,EAAA7lB,EAAAm2B,EACA2B,EAAA/3B,EAAAo2B,EAAA8B,EAAAj4B,EAAAm2B,EACAwI,EAAA7+B,GAIA,OADAlE,GAAA0C,EAAAD,MAAA0gC,EAAA,IAAAtR,EAAAmF,GAAAoM,EAAA,IAAAtR,EAAAmF,GAAA/tB,EAAA/E,GAAAg/B,EAAAE,EAAAj/B,GAAAg/B,EACAr9B,EAAAs9B,GAAA,EAAAn6B,EAAA6I,EAAAhM,EAAA,EAAiDA,EAAAgM,IAAOhM,EACxD,GAAArD,EAAA1C,EAAA,EAAA+F,GAAA,SAAAA,GACA,OACAk9B,EAAAvgC,EAAAmvB,EAAAC,EAAAqR,EAAAC,EACA,MAEA,QACAH,EAAAvgC,EAAAygC,EAAArR,EAAAkF,EAAAoM,EACA,MAEA,QACAH,EAAAvgC,EAAAmvB,EAAAuR,EAAAD,EAAAlM,EACA,MAEA,QACAgM,EAAAvgC,EAAAygC,EAAAC,EAAApM,EAAAC,MAIK6L,EAAA3Y,EAAAF,EAAAiS,EAAAG,GACL0G,EAGA,QAAAO,IAAAh7B,EAAAC,GACAD,EAAAZ,GAAAoQ,IAAAxP,GACAC,EAAAb,GAAAoQ,IAAAvP,EACA,IAAAg7B,GAAAj7B,EAAAyP,EAAAyrB,EAAAl7B,EAAAxI,EAAA2jC,EAAAn7B,EAAAC,EAAAm7B,EAAAn7B,EAAAwP,EAAAwrB,EAAAI,EAAAp7B,EAAAzI,EAAA0jC,EAAAI,EAAAr7B,IAAAk7B,CACA,iBAAAvnB,GACA,UAAAlD,GAAA9V,KAAAsU,MAAA+rB,EAAAG,EAAAxnB,IAAAlD,GAAA9V,KAAAsU,MAAAgsB,EAAAG,EAAAznB,IAAAlD,GAAA9V,KAAAsU,MAAAisB,EAAAG,EAAA1nB,KAIA,QAAA2nB,IAAAv7B,EAAAC,GACA,GAAsBe,GAAtBvD,KAAc0J,IACd,KAAAnG,IAAAhB,GACAgB,IAAAf,GACAxC,EAAAuD,GAAAw6B,GAAAx7B,EAAAgB,GAAAf,EAAAe,IAEAmG,EAAAnG,GAAAhB,EAAAgB,EAGA,KAAAA,IAAAf,GACAe,IAAAhB,KACAmH,EAAAnG,GAAAf,EAAAe,GAGA,iBAAA4S,GACA,IAAA5S,IAAAvD,GAAA0J,EAAAnG,GAAAvD,EAAAuD,GAAA4S,EACA,OAAAzM,IAIA,QAAAs0B,IAAAz7B,EAAAC,GAEA,MADAD,MAAAC,KACA,SAAA2T,GACA,MAAA5T,IAAA,EAAA4T,GAAA3T,EAAA2T,GAIA,QAAA8nB,IAAA17B,EAAAC,GACA,GAAA07B,GAAAC,EAAAC,EAAAC,EAAAC,GAAAx0B,UAAAy0B,GAAAz0B,UAAA,EAAA9J,GAAA,EAAA8G,KAAA0kB,IAEA,KADAjpB,GAAA,GAAAC,GAAA,IACA07B,EAAAI,GAAAhrB,KAAA/Q,MAAA47B,EAAAI,GAAAjrB,KAAA9Q,MACA47B,EAAAD,EAAAK,OAAAH,IACAD,EAAA57B,EAAA6B,MAAAg6B,EAAAD,GACAt3B,EAAA9G,GAAA8G,EAAA9G,IAAAo+B,EAA6Bt3B,IAAA9G,GAAAo+B,IAE7BF,IAAA,OAAAC,IAAA,IACAr3B,EAAA9G,GAAA8G,EAAA9G,IAAAm+B,EAA6Br3B,IAAA9G,GAAAm+B,GAE7Br3B,IAAA9G,GAAA,KACAwrB,EAAA5rB,MACAI,IACA5B,EAAA4/B,GAAAE,EAAAC,MAGAE,EAAAE,GAAAz0B,SAMA,OAJAu0B,GAAA77B,EAAAtI,SACAkkC,EAAA57B,EAAA6B,MAAAg6B,GACAv3B,EAAA9G,GAAA8G,EAAA9G,IAAAo+B,EAA2Bt3B,IAAA9G,GAAAo+B,GAE3Bt3B,EAAA5M,OAAA,EAAAsxB,EAAA,IAAAhpB,EAAAgpB,EAAA,GAAAptB,EAAA,SAAA+X,GACA,MAAA3T,GAAA2T,GAAA,KACK,WACL,MAAA3T,KACKA,EAAAgpB,EAAAtxB,OAAA,SAAAic,GACL,OAAAzI,GAAA1N,EAAA,EAAwBA,EAAAwC,IAAOxC,EAAA8G,GAAA4G,EAAA8d,EAAAxrB,OAAA0N,EAAAtP,EAAA+X,EAC/B,OAAArP,GAAAuR,KAAA,MAKA,QAAA0lB,IAAAx7B,EAAAC,GAEA,IADA,GAAA+M,GAAAvP,EAAA2B,GAAA88B,cAAAvkC,SACA8F,GAAA,KAAAuP,EAAA5N,GAAA88B,cAAAz+B,GAAAuC,EAAAC,MACA,MAAA+M,GAOA,QAAAmvB,IAAAn8B,EAAAC,GACA,GAAAxC,GAAA5B,KAAAsL,KAAAi1B,EAAAp8B,EAAArI,OAAA0kC,EAAAp8B,EAAAtI,OAAA2kC,EAAA1hC,KAAAoC,IAAAgD,EAAArI,OAAAsI,EAAAtI,OACA,KAAA8F,EAAA,EAAeA,EAAA6+B,IAAQ7+B,EAAA5B,EAAAwB,KAAAm+B,GAAAx7B,EAAAvC,GAAAwC,EAAAxC,IACvB,MAAUA,EAAA2+B,IAAO3+B,EAAA0J,EAAA1J,GAAAuC,EAAAvC,EACjB,MAAUA,EAAA4+B,IAAO5+B,EAAA0J,EAAA1J,GAAAwC,EAAAxC,EACjB,iBAAAmW,GACA,IAAAnW,EAAA,EAAiBA,EAAA6+B,IAAQ7+B,EAAA0J,EAAA1J,GAAA5B,EAAA4B,GAAAmW,EACzB,OAAAzM,IA4CA,QAAAo1B,IAAAvvB,GACA,gBAAA4G,GACA,MAAAA,IAAA,IAAAA,GAAA,IAAA5G,EAAA4G,IAGA,QAAA4oB,IAAAxvB,GACA,gBAAA4G,GACA,SAAA5G,EAAA,EAAA4G,IAGA,QAAA6oB,IAAAzvB,GACA,gBAAA4G,GACA,UAAAA,EAAA,GAAA5G,EAAA,EAAA4G,GAAA,EAAA5G,EAAA,IAAA4G,KAGA,QAAA8oB,IAAA9oB,GACA,MAAAA,KAEA,QAAA+oB,IAAA/oB,GACA,MAAAA,OAEA,QAAAgpB,IAAAhpB,GACA,GAAAA,GAAA,UACA,IAAAA,GAAA,UACA,IAAAoV,GAAApV,IAAAipB,EAAA7T,EAAApV,CACA,WAAAA,EAAA,GAAAipB,EAAA,GAAAjpB,EAAAoV,GAAA6T,EAAA,KAEA,QAAAC,IAAAjlC,GACA,gBAAA+b,GACA,MAAAhZ,MAAA2V,IAAAqD,EAAA/b,IAGA,QAAAklC,IAAAnpB,GACA,SAAAhZ,KAAA+U,IAAAiE,EAAA1F,IAEA,QAAA8uB,IAAAppB,GACA,MAAAhZ,MAAA2V,IAAA,MAAAqD,EAAA,IAEA,QAAAqpB,IAAArpB,GACA,SAAAhZ,KAAAyV,KAAA,EAAAuD,KAEA,QAAAspB,IAAAl9B,EAAA2U,GACA,GAAApQ,EAGA,OAFA3G,WAAAjG,OAAA,IAAAgd,EAAA,KACA/W,UAAAjG,OAAA4M,EAAAoQ,EAAAwS,GAAAvsB,KAAAuT,KAAA,EAAAnO,IAAuDA,EAAA,EAAAuE,EAAAoQ,EAAA,GACvD,SAAAf,GACA,SAAA5T,EAAApF,KAAA2V,IAAA,MAAAqD,GAAAhZ,KAAA6T,KAAAmF,EAAArP,GAAA4iB,GAAAxS,IAGA,QAAAwoB,IAAA54B,GAEA,MADAA,OAAA,SACA,SAAAqP,GACA,MAAAA,OAAArP,EAAA,GAAAqP,EAAArP,IAGA,QAAA64B,IAAAxpB,GACA,MAAAA,GAAA,cAAAA,MAAA,eAAAA,GAAA,UAAAA,EAAA,IAAAA,EAAA,iBAAAA,GAAA,WAAAA,EAAA,cAAAA,GAAA,YAAAA,EAAA,QAGA,QAAAypB,IAAAr9B,EAAAC,GACAD,EAAAZ,GAAAk+B,IAAAt9B,GACAC,EAAAb,GAAAk+B,IAAAr9B,EACA,IAAAs9B,GAAAv9B,EAAA9D,EAAAshC,EAAAx9B,EAAAmH,EAAAs2B,EAAAz9B,EAAAyD,EAAAi6B,EAAAz9B,EAAA/D,EAAAqhC,EAAAI,EAAA19B,EAAAkH,EAAAq2B,EAAAI,EAAA39B,EAAAwD,EAAAg6B,CAGA,OAFAp9B,OAAAs9B,OAAA,EAAAH,EAAAn9B,MAAAm9B,GAAAv9B,EAAAkH,EAAAq2B,GACAn9B,MAAAq9B,MAAA,EAAAH,EAAAl9B,MAAAk9B,GAAAt9B,EAAA/D,EAAAqhC,GAAqDG,EAAA,IAAAA,GAAA,IAA8BA,GAAA,MAAAA,GAAA,KACnF,SAAA9pB,GACA,MAAAlE,IAAA6tB,EAAAG,EAAA9pB,EAAA4pB,EAAAG,EAAA/pB,EAAA6pB,EAAAG,EAAAhqB,GAAA,IAIA,QAAAiqB,IAAA79B,EAAAC,GACAD,EAAAZ,GAAAyR,IAAA7Q,GACAC,EAAAb,GAAAyR,IAAA5Q,EACA,IAAAs9B,GAAAv9B,EAAA9D,EAAA4hC,EAAA99B,EAAAuE,EAAAk5B,EAAAz9B,EAAAyD,EAAAi6B,EAAAz9B,EAAA/D,EAAAqhC,EAAA1B,EAAA57B,EAAAsE,EAAAu5B,EAAAF,EAAA39B,EAAAwD,EAAAg6B,CAGA,OAFAp9B,OAAAw7B,OAAA,EAAAiC,EAAAz9B,MAAAy9B,GAAA79B,EAAAsE,EAAAu5B,GACAz9B,MAAAq9B,MAAA,EAAAH,EAAAl9B,MAAAk9B,GAAAt9B,EAAA/D,EAAAqhC,GAAqDG,EAAA,IAAAA,GAAA,IAA8BA,GAAA,MAAAA,GAAA,KACnF,SAAA9pB,GACA,MAAA9E,IAAAyuB,EAAAG,EAAA9pB,EAAAkqB,EAAAjC,EAAAjoB,EAAA6pB,EAAAG,EAAAhqB,GAAA,IAIA,QAAAmqB,IAAA/9B,EAAAC,GACAD,EAAAZ,GAAA4+B,IAAAh+B,GACAC,EAAAb,GAAA4+B,IAAA/9B,EACA,IAAAw9B,GAAAz9B,EAAAyD,EAAAw6B,EAAAj+B,IAAAm7B,EAAAn7B,EAAAC,EAAA29B,EAAA39B,EAAAwD,EAAAg6B,EAAAS,EAAAj+B,EAAAD,EAAAi+B,EAAA3C,EAAAr7B,IAAAk7B,CACA,iBAAAvnB,GACA,MAAA/D,IAAA4tB,EAAAG,EAAAhqB,EAAAqqB,EAAAC,EAAAtqB,EAAAunB,EAAAG,EAAA1nB,GAAA,IAIA,QAAAuqB,IAAAn+B,EAAAC,GAEA,MADAA,IAAAD,EACA,SAAA4T,GACA,MAAAhZ,MAAAsU,MAAAlP,EAAAC,EAAA2T,IAaA,QAAAwqB,IAAA10B,GACA,GAAA20B,IAAA30B,EAAA1J,EAAA0J,EAAAzJ,GAAAq+B,GAAA50B,EAAAvC,EAAAuC,EAAA5I,GAAAy9B,EAAAC,GAAAH,GAAAI,EAAAC,GAAAL,EAAAC,GAAAK,EAAAH,GAAAI,GAAAN,EAAAD,GAAAI,KAAA,CACAJ,GAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,KACAA,EAAA,OACAA,EAAA,OACAE,IAAA,EACAE,IAAA,GAEAj9B,KAAA6iB,QAAAka,EAAA3jC,KAAAuV,MAAAkuB,EAAA,GAAAA,EAAA,IAAAzjC,KAAAuV,OAAAmuB,EAAA,GAAAA,EAAA,KAAAluB,GACA5O,KAAA6uB,WAAA3mB,EAAA7R,EAAA6R,EAAAsD,GACAxL,KAAAuT,OAAAwpB,EAAAI,GACAn9B,KAAAq9B,KAAAF,EAAA/jC,KAAAuV,MAAAsuB,EAAAE,GAAAvuB,GAAA,EAKA,QAAAsuB,IAAA1+B,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAEA,QAAAu+B,IAAAx+B,GACA,GAAAgB,GAAApG,KAAAyV,KAAAquB,GAAA1+B,KAKA,OAJAgB,KACAhB,EAAA,IAAAgB,EACAhB,EAAA,IAAAgB,GAEAA,EAEA,QAAA49B,IAAA5+B,EAAAC,EAAAe,GAGA,MAFAhB,GAAA,IAAAgB,EAAAf,EAAA,GACAD,EAAA,IAAAgB,EAAAf,EAAA,GACAD,EAWA,QAAA8+B,IAAAv6B,GACA,MAAAA,GAAA5M,OAAA4M,EAAAygB,MAAA,OAEA,QAAA+Z,IAAAC,EAAAC,EAAA16B,EAAA0kB,GACA,GAAA+V,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IACA,GAAAxhC,GAAA8G,EAAAlH,KAAA,+BACA4rB,GAAA5rB,MACAI,IAAA,EACA5B,EAAA4/B,GAAAuD,EAAA,GAAAC,EAAA,MAEAxhC,IAAA,EACA5B,EAAA4/B,GAAAuD,EAAA,GAAAC,EAAA,WAEKA,EAAA,IAAAA,EAAA,KACL16B,EAAAlH,KAAA,aAAA4hC,EAAA,KAGA,QAAAC,IAAAC,EAAAC,EAAA76B,EAAA0kB,GACAkW,IAAAC,GACAD,EAAAC,EAAA,IAAAA,GAAA,IAAmCA,EAAAD,EAAA,MAAAA,GAAA,KACnClW,EAAA5rB,MACAI,EAAA8G,EAAAlH,KAAAyhC,GAAAv6B,GAAA,sBACA1I,EAAA4/B,GAAA0D,EAAAC,MAEKA,GACL76B,EAAAlH,KAAAyhC,GAAAv6B,GAAA,UAAA66B,EAAA,KAGA,QAAAC,IAAAC,EAAAC,EAAAh7B,EAAA0kB,GACAqW,IAAAC,EACAtW,EAAA5rB,MACAI,EAAA8G,EAAAlH,KAAAyhC,GAAAv6B,GAAA,qBACA1I,EAAA4/B,GAAA6D,EAAAC,KAEKA,GACLh7B,EAAAlH,KAAAyhC,GAAAv6B,GAAA,SAAAg7B,EAAA,KAGA,QAAAC,IAAAC,EAAAC,EAAAn7B,EAAA0kB,GACA,GAAAwW,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,IACA,GAAAjiC,GAAA8G,EAAAlH,KAAAyhC,GAAAv6B,GAAA,2BACA0kB,GAAA5rB,MACAI,IAAA,EACA5B,EAAA4/B,GAAAgE,EAAA,GAAAC,EAAA,MAEAjiC,IAAA,EACA5B,EAAA4/B,GAAAgE,EAAA,GAAAC,EAAA,UAEK,KAAAA,EAAA,QAAAA,EAAA,IACLn7B,EAAAlH,KAAAyhC,GAAAv6B,GAAA,SAAAm7B,EAAA,KAGA,QAAAC,IAAA3/B,EAAAC,GACA,GAAAsE,MAAA0kB,IAOA,OANAjpB,GAAAZ,GAAAwgC,UAAA5/B,GAAAC,EAAAb,GAAAwgC,UAAA3/B,GACA8+B,GAAA/+B,EAAAqwB,UAAApwB,EAAAowB,UAAA9rB,EAAA0kB,GACAiW,GAAAl/B,EAAAqkB,OAAApkB,EAAAokB,OAAA9f,EAAA0kB,GACAoW,GAAAr/B,EAAA6+B,KAAA5+B,EAAA4+B,KAAAt6B,EAAA0kB,GACAuW,GAAAx/B,EAAA+U,MAAA9U,EAAA8U,MAAAxQ,EAAA0kB,GACAjpB,EAAAC,EAAA,KACA,SAAA2T,GAEA,IADA,GAAAzI,GAAA1N,GAAA,EAAAwF,EAAAgmB,EAAAtxB,SACA8F,EAAAwF,GAAAsB,GAAA4G,EAAA8d,EAAAxrB,OAAA0N,EAAAtP,EAAA+X,EACA,OAAArP,GAAAuR,KAAA,KAGA,QAAA+pB,IAAA7/B,EAAAC,GAEA,MADAA,OAAAD,OAAA,EAAAC,EACA,SAAApE,GACA,OAAAA,EAAAmE,GAAAC,GAGA,QAAA6/B,IAAA9/B,EAAAC,GAEA,MADAA,OAAAD,OAAA,EAAAC,EACA,SAAApE,GACA,MAAAjB,MAAAC,IAAA,EAAAD,KAAAoC,IAAA,GAAAnB,EAAAmE,GAAAC,KAWA,QAAA8/B,IAAAC,GAEA,IADA,GAAA3hC,GAAA2hC,EAAAt9B,OAAA+0B,EAAAuI,EAAAv9B,OAAAw9B,EAAAC,GAAA7hC,EAAAo5B,GAAA7T,GAAAvlB,GACAA,IAAA4hC,GACA5hC,IAAAwK,OACA+a,EAAAvmB,KAAAgB,EAGA,KADA,GAAA2C,GAAA4iB,EAAAjsB,OACA8/B,IAAAwI,GACArc,EAAAkU,OAAA92B,EAAA,EAAAy2B,GACAA,IAAA5uB,MAEA,OAAA+a,GAEA,QAAAuc,IAAA/lC,GAEA,IADA,GAAAgmC,MAAAv3B,EAAAzO,EAAAyO,OACA,MAAAA,GACAu3B,EAAA/iC,KAAAjD,GACAA,EAAAyO,EACAA,UAGA,OADAu3B,GAAA/iC,KAAAjD,GACAgmC,EAEA,QAAAF,IAAAlgC,EAAAC,GACA,GAAAD,IAAAC,EAAA,MAAAD,EAEA,KADA,GAAAqgC,GAAAF,GAAAngC,GAAAsgC,EAAAH,GAAAlgC,GAAAsgC,EAAAF,EAAArb,MAAAwb,EAAAF,EAAAtb,MAAAyb,EAAA,KACAF,IAAAC,GACAC,EAAAF,EACAA,EAAAF,EAAArb,MACAwb,EAAAF,EAAAtb,KAEA,OAAAyb,GA6UA,QAAAC,IAAA5/B,GACAA,EAAA6/B,OAAA,EAEA,QAAAC,IAAA9/B,GACAA,EAAA6/B,QAAA,EAEA,QAAAE,IAAA//B,GACAA,EAAA6/B,OAAA,EACA7/B,EAAAggC,GAAAhgC,EAAAjF,EAAAiF,EAAAigC,GAAAjgC,EAAAhF,EAEA,QAAAklC,IAAAlgC,GACAA,EAAA6/B,QAAA,EAEA,QAAAM,IAAAC,EAAAC,EAAAC,GACA,GAAA/e,GAAA,EAAAC,EAAA,CAEA,IADA4e,EAAAG,OAAA,GACAH,EAAA7G,KAEA,IADA,GAAAlzB,GAAAhN,EAAA+mC,EAAA/mC,MAAA8I,EAAA9I,EAAAxC,OAAA8F,GAAA,IACAA,EAAAwF,GAEA,OADAkE,EAAAhN,EAAAsD,MAEAwjC,GAAA95B,EAAAg6B,EAAAC,GACAF,EAAAG,QAAAl6B,EAAAk6B,OACAhf,GAAAlb,EAAAk6B,OAAAl6B,EAAAkb,GACAC,GAAAnb,EAAAk6B,OAAAl6B,EAAAmb,GAGA,IAAA4e,EAAAtlC,MAAA,CACAslC,EAAA7G,OACA6G,EAAAtlC,MAAAC,GAAAjB,KAAA0mC,SAAA,GACAJ,EAAAtlC,MAAAE,GAAAlB,KAAA0mC,SAAA,GAEA,IAAAtgC,GAAAmgC,EAAAC,EAAAF,EAAAtlC,MAAAqgC,MACAiF,GAAAG,QAAAH,EAAAK,YAAAvgC,EACAqhB,GAAArhB,EAAAkgC,EAAAtlC,MAAAC,EACAymB,GAAAthB,EAAAkgC,EAAAtlC,MAAAE,EAEAolC,EAAA7e,KAAA6e,EAAAG,OACAH,EAAA5e,KAAA4e,EAAAG,OA6DA,QAAAG,IAAA1+B,EAAA2+B,GAIA,MAHAriC,IAAAgU,OAAAtQ,EAAA2+B,EAAA,2BACA3+B,EAAA3I,MAAA2I,EACAA,EAAA4+B,MAAAC,GACA7+B,EAEA,QAAA8+B,IAAAxnC,EAAAoP,GAEA,IADA,GAAArP,IAAAC,GACA,OAAAA,EAAAD,EAAA6qB,QAEA,GADAxb,EAAApP,IACA1C,EAAA0C,EAAA1C,YAAAuL,EAAAvL,EAAAC,QAEA,IADA,GAAAsL,GAAAvL,IACAuL,GAAA,GAAA9I,EAAAkD,KAAA3F,EAAAuL,IAIA,QAAA4+B,IAAAznC,EAAAoP,GAEA,IADA,GAAArP,IAAAC,GAAA0nC,KACA,OAAA1nC,EAAAD,EAAA6qB,QAEA,GADA8c,EAAAzkC,KAAAjD,IACA1C,EAAA0C,EAAA1C,YAAAuL,EAAAvL,EAAAC,QAEA,IADA,GAAAsL,GAAAvL,EAAA+F,GAAA,IACAA,EAAAwF,GAAA9I,EAAAkD,KAAA3F,EAAA+F,GAGA,aAAArD,EAAA0nC,EAAA9c,QACAxb,EAAApP,GAGA,QAAA2nC,IAAAjhC,GACA,MAAAA,GAAApJ,SAEA,QAAAsqC,IAAAlhC,GACA,MAAAA,GAAA3C,MAEA,QAAA8jC,IAAAjiC,EAAAC,GACA,MAAAA,GAAA9B,MAAA6B,EAAA7B,MAEA,QAAAwjC,IAAAxnC,GACA,MAAAiF,IAAAkmB,MAAAnrB,EAAAgB,IAAA,SAAA0N,GACA,OAAAA,EAAAnR,cAAAyD,IAAA,SAAA+mC,GACA,OACAx/B,OAAAmG,EACApG,OAAAy/B,QAqJA,QAAAC,IAAArhC,GACA,MAAAA,GAAAjF,EAEA,QAAAumC,IAAAthC,GACA,MAAAA,GAAAhF,EAEA,QAAAumC,IAAAvhC,EAAA6gB,EAAA7lB,GACAgF,EAAA6gB,KACA7gB,EAAAhF,IAiEA,QAAAwmC,IAAAr5B,GACA,MAAA7J,IAAA1C,MAAAuM,EAAAtR,QAEA,QAAA4qC,IAAAt5B,GAEA,IADA,GAAAQ,IAAA,EAAAC,EAAAT,EAAA,GAAAtR,OAAAgqB,OACAlY,EAAAC,GAAAiY,EAAAlY,GAAA,CACA,OAAAkY,GAEA,QAAA6gB,IAAAze,GAEA,IADA,GAAA/iB,GAAAvD,EAAA,EAAAgM,EAAA,EAAAhS,EAAAssB,EAAA,MAAA9gB,EAAA8gB,EAAApsB,OACU8F,EAAAwF,IAAMxF,GAChBuD,EAAA+iB,EAAAtmB,GAAA,IAAAhG,IACAgS,EAAAhM,EACAhG,EAAAuJ,EAGA,OAAAyI,GAEA,QAAAg5B,IAAA3hC,GACA,MAAAA,GAAA4hC,OAAAC,GAAA,GAEA,QAAAA,IAAAhuB,EAAA7T,GACA,MAAA6T,GAAA7T,EAAA,GAgDA,QAAA8hC,IAAAlmC,EAAAmmC,GACA,MAAAC,IAAApmC,EAAA9B,KAAAga,KAAAha,KAAA4D,IAAAqkC,EAAAlrC,QAAAiD,KAAAmoC,IAAA,IAEA,QAAAD,IAAApmC,EAAAuG,GAEA,IADA,GAAApH,IAAA,EAAAoE,GAAAvD,EAAA,GAAAgN,GAAAhN,EAAA,GAAAuD,GAAAgD,EAAA+J,OACAnR,GAAAoH,GAAA+J,EAAAnR,GAAA6N,EAAA7N,EAAAoE,CACA,OAAA+M,GAEA,QAAAg2B,IAAAH,GACA,OAAAzjC,GAAApC,IAAA6lC,GAAAzjC,GAAAvE,IAAAgoC,IA2CA,QAAAI,IAAAjjC,EAAAC,GACA,MAAAD,GAAA7B,MAAA8B,EAAA9B,MAEA,QAAA+kC,IAAAljC,EAAAC,GACA,GAAAkH,GAAAnH,EAAAmjC,UACAnjC,GAAAmjC,WAAAljC,EACAA,EAAAmjC,WAAApjC,EACAC,EAAAkjC,WAAAh8B,EACAA,EAAAi8B,WAAAnjC,EAEA,QAAAojC,IAAArjC,EAAAC,GACAD,EAAAmjC,WAAAljC,EACAA,EAAAmjC,WAAApjC,EAEA,QAAAsjC,IAAAtjC,EAAAC,GACA,GAAAlE,GAAAkE,EAAApE,EAAAmE,EAAAnE,EAAAG,EAAAiE,EAAAnE,EAAAkE,EAAAlE,EAAAynC,EAAAvjC,EAAAyP,EAAAxP,EAAAwP,CACA,YAAA8zB,IAAAxnC,IAAAC,IAEA,QAAAwnC,IAAAppC,GAGA,QAAAqpC,GAAArpC,GACAspC,EAAA9oC,KAAAoC,IAAA5C,EAAAyB,EAAAzB,EAAAqV,EAAAi0B,GACAC,EAAA/oC,KAAAC,IAAAT,EAAAyB,EAAAzB,EAAAqV,EAAAk0B,GACAC,EAAAhpC,KAAAoC,IAAA5C,EAAA0B,EAAA1B,EAAAqV,EAAAm0B,GACAC,EAAAjpC,KAAAC,IAAAT,EAAA0B,EAAA1B,EAAAqV,EAAAo0B,GANA,IAAA1pC,EAAAC,EAAA1C,YAAAuL,EAAA9I,EAAAxC,QAAA,CACA,GAAAwC,GAAA6F,EAAAC,EAAAkH,EAAA1J,EAAAgM,EAAAzI,EAAAiC,EAAAygC,EAAAjvB,IAAAkvB,GAAAlvB,IAAAmvB,EAAAnvB,IAAAovB,GAAApvB,GAYA,IALAta,EAAAD,QAAA4pC,IACA9jC,EAAA7F,EAAA,GACA6F,EAAAnE,GAAAmE,EAAAyP,EACAzP,EAAAlE,EAAA,EACA2nC,EAAAzjC,GACAiD,EAAA,IACAhD,EAAA9F,EAAA,GACA8F,EAAApE,EAAAoE,EAAAwP,EACAxP,EAAAnE,EAAA,EACA2nC,EAAAxjC,GACAgD,EAAA,GAQA,IAPAkE,EAAAhN,EAAA,GACA4pC,GAAA/jC,EAAAC,EAAAkH,GACAs8B,EAAAt8B,GACA+7B,GAAAljC,EAAAmH,GACAnH,EAAAojC,WAAAj8B,EACA+7B,GAAA/7B,EAAAlH,GACAA,EAAAD,EAAAmjC,WACA1lC,EAAA,EAAmBA,EAAAwF,EAAOxF,IAAA,CAC1BsmC,GAAA/jC,EAAAC,EAAAkH,EAAAhN,EAAAsD,GACA,IAAAumC,GAAA,EAAAC,EAAA,EAAAC,EAAA,CACA,KAAAz6B,EAAAxJ,EAAAkjC,WAAgC15B,IAAAxJ,EAASwJ,IAAA05B,WAAAc,IACzC,GAAAX,GAAA75B,EAAAtC,GAAA,CACA68B,EAAA,CACA,OAGA,MAAAA,EACA,IAAAhjC,EAAAhB,EAAAojC,WAAkCpiC,IAAAyI,EAAA25B,aAClCE,GAAAtiC,EAAAmG,GADsDnG,IAAAoiC,WAAAc,KAMtDF,GACAC,EAAAC,GAAAD,GAAAC,GAAAjkC,EAAAwP,EAAAzP,EAAAyP,EAAA4zB,GAAArjC,EAAAC,EAAAwJ,GAAiF45B,GAAArjC,EAAAgB,EAAAf,GACjFxC,MAEAylC,GAAAljC,EAAAmH,GACAlH,EAAAkH,EACAs8B,EAAAt8B,IAKA,GAAAkb,IAAAqhB,EAAAC,GAAA,EAAArhB,GAAAshB,EAAAC,GAAA,EAAAnc,EAAA,CACA,KAAAjqB,EAAA,EAAeA,EAAAwF,EAAOxF,IACtB0J,EAAAhN,EAAAsD,GACA0J,EAAAtL,GAAAwmB,EACAlb,EAAArL,GAAAwmB,EACAoF,EAAA9sB,KAAAC,IAAA6sB,EAAAvgB,EAAAsI,EAAA7U,KAAAyV,KAAAlJ,EAAAtL,EAAAsL,EAAAtL,EAAAsL,EAAArL,EAAAqL,EAAArL,GAEA1B,GAAAqV,EAAAiY,EACAvtB,EAAAD,QAAAiqC,KAEA,QAAAL,IAAA1pC,GACAA,EAAA+oC,WAAA/oC,EAAAgpC,WAAAhpC,EAEA,QAAA+pC,IAAA/pC,SACAA,GAAA+oC,iBACA/oC,GAAAgpC,WAEA,QAAAgB,IAAAhqC,EAAAyB,EAAAC,EAAAkF,GACA,GAAAtJ,GAAA0C,EAAA1C,QAIA,IAHA0C,EAAAyB,KAAAmF,EAAA5G,EAAAyB,EACAzB,EAAA0B,KAAAkF,EAAA5G,EAAA0B,EACA1B,EAAAqV,GAAAzO,EACAtJ,EAEA,IADA,GAAA+F,IAAA,EAAAwF,EAAAvL,EAAAC,SACA8F,EAAAwF,GAAAmhC,GAAA1sC,EAAA+F,GAAA5B,EAAAC,EAAAkF,GAGA,QAAA+iC,IAAA/jC,EAAAC,EAAAkH,GACA,GAAAk9B,GAAArkC,EAAAyP,EAAAtI,EAAAsI,EAAA1T,EAAAkE,EAAApE,EAAAmE,EAAAnE,EAAAG,EAAAiE,EAAAnE,EAAAkE,EAAAlE,CACA,IAAAuoC,IAAAtoC,GAAAC,GAAA,CACA,GAAAsoC,GAAArkC,EAAAwP,EAAAtI,EAAAsI,EAAA80B,EAAAxoC,IAAAC,GACAsoC,MACAD,IACA,IAAAxoC,GAAA,IAAAwoC,EAAAC,IAAA,EAAAC,GAAAzoC,EAAAlB,KAAAyV,KAAAzV,KAAAC,IAAA,IAAAypC,GAAAD,EAAAE,IAAAF,GAAAE,GAAAF,EAAAC,OAAA,EAAAC,EACAp9B,GAAAtL,EAAAmE,EAAAnE,IAAAE,EAAAD,EAAAE,EACAmL,EAAArL,EAAAkE,EAAAlE,EAAAD,EAAAG,EAAAF,EAAAC,MAEAoL,GAAAtL,EAAAmE,EAAAnE,EAAAwoC,EACAl9B,EAAArL,EAAAkE,EAAAlE,EAuHA,QAAA0oC,IAAAxkC,EAAAC,GACA,MAAAD,GAAA6I,QAAA5I,EAAA4I,OAAA,IAEA,QAAA47B,IAAAhtC,GACA,GAAAC,GAAAD,EAAAC,QACA,OAAAA,GAAAC,OAAAD,EAAA,GAAAD,EAAAmc,EAEA,QAAA8wB,IAAAjtC,GACA,GAAAwL,GAAAvL,EAAAD,EAAAC,QACA,QAAAuL,EAAAvL,EAAAC,QAAAD,EAAAuL,EAAA,GAAAxL,EAAAmc,EAEA,QAAA+wB,IAAAC,EAAAC,EAAA1f,GACA,GAAA2f,GAAA3f,GAAA0f,EAAApnC,EAAAmnC,EAAAnnC,EACAonC,GAAA19B,GAAA29B,EACAD,EAAAtgC,GAAA4gB,EACAyf,EAAAz9B,GAAA29B,EACAD,EAAAnhC,GAAAyhB,EACA0f,EAAAn7B,GAAAyb,EAEA,QAAA4f,IAAAttC,GAEA,IADA,GAAAM,GAAAotB,EAAA,EAAA2f,EAAA,EAAAptC,EAAAD,EAAAC,SAAA+F,EAAA/F,EAAAC,SACA8F,GAAA,GACA1F,EAAAL,EAAA+F,GACA1F,EAAA2L,GAAAyhB,EACAptB,EAAA2R,GAAAyb,EACAA,GAAAptB,EAAAwM,GAAAugC,GAAA/sC,EAAAoP,GAGA,QAAA69B,IAAAC,EAAAxtC,EAAAytC,GACA,MAAAD,GAAAjlC,EAAA6I,SAAApR,EAAAoR,OAAAo8B,EAAAjlC,EAAAklC,EA4CA,QAAAC,IAAAztC,GACA,SAAA0H,GAAAvE,IAAAnD,EAAA,SAAAwqC,GACA,MAAAA,GAAApmC,IAGA,QAAAspC,IAAA1tC,GACA,MAAAA,GAAAgrC,OAAA,SAAA7mC,EAAAqmC,GACA,MAAArmC,GAAAqmC,EAAArmC,GACK,GAAAnE,EAAAC,OAEL,QAAA0tC,IAAAjrC,GACA,GAAA1C,GAAA0C,EAAA1C,QACA,OAAAA,MAAAC,OAAA0tC,GAAA3tC,EAAA,IAAA0C,EAEA,QAAAkrC,IAAAlrC,GACA,GAAA6I,GAAAvL,EAAA0C,EAAA1C,QACA,OAAAA,KAAAuL,EAAAvL,EAAAC,QAAA2tC,GAAA5tC,EAAAuL,EAAA,IAAA7I,EAoJA,QAAAmrC,IAAAnrC,GACA,OACAyB,EAAAzB,EAAAyB,EACAC,EAAA1B,EAAA0B,EACAC,GAAA3B,EAAA2B,GACAC,GAAA5B,EAAA4B,IAGA,QAAAwpC,IAAAprC,EAAAwS,GACA,GAAA/Q,GAAAzB,EAAAyB,EAAA+Q,EAAA,GAAA9Q,EAAA1B,EAAA0B,EAAA8Q,EAAA,GAAA7Q,EAAA3B,EAAA2B,GAAA6Q,EAAA,GAAAA,EAAA,GAAA5Q,EAAA5B,EAAA4B,GAAA4Q,EAAA,GAAAA,EAAA,EASA,OARA7Q,GAAA,IACAF,GAAAE,EAAA,EACAA,EAAA,GAEAC,EAAA,IACAF,GAAAE,EAAA,EACAA,EAAA,IAGAH,IACAC,IACAC,KACAC,MAsCA,QAAAypC,IAAAC,GACA,GAAArnC,GAAAqnC,EAAA,GAAAC,EAAAD,IAAA/tC,OAAA,EACA,OAAA0G,GAAAsnC,GAAAtnC,EAAAsnC,MAAAtnC,GAEA,QAAAunC,IAAA7wB,GACA,MAAAA,GAAA8wB,YAAA9wB,EAAA8wB,cAAAJ,GAAA1wB,EAAArY,SAEA,QAAAopC,IAAAJ,EAAAhpC,EAAAqpC,EAAA7iB,GACA,GAAAhD,GAAA6lB,EAAAL,EAAA,GAAAA,EAAA,IAAAjoC,EAAAylB,EAAAxmB,EAAA,GAAAA,EAAA,GACA,iBAAAb,GACA,MAAA4B,GAAAyiB,EAAArkB,KAGA,QAAAmqC,IAAAN,EAAAO,GACA,GAAAlqC,GAAAiO,EAAA,EAAAk8B,EAAAR,EAAA/tC,OAAA,EAAAkqB,EAAA6jB,EAAA17B,GAAAuf,EAAAmc,EAAAQ,EAOA,OANA3c,GAAA1H,IACA9lB,EAAAiO,IAAAk8B,IAAAnqC,EACAA,EAAA8lB,IAAA0H,IAAAxtB,GAEA2pC,EAAA17B,GAAAi8B,EAAA/tB,MAAA2J,GACA6jB,EAAAQ,GAAAD,EAAArxB,KAAA2U,GACAmc,EAEA,QAAAS,IAAA3uB,GACA,MAAAA,IACAU,MAAA,SAAArc,GACA,MAAAjB,MAAAsd,MAAArc,EAAA2b,MAEA5C,KAAA,SAAA/Y,GACA,MAAAjB,MAAAga,KAAA/Y,EAAA2b,OAEK4uB,GAML,QAAAC,IAAAX,EAAAhpC,EAAAqpC,EAAA7iB,GACA,GAAAhD,MAAAziB,KAAAgM,EAAA,EAAAzI,EAAApG,KAAAoC,IAAA0oC,EAAA/tC,OAAA+E,EAAA/E,QAAA,CAKA,KAJA+tC,EAAA1kC,GAAA0kC,EAAA,KACAA,IAAA5jC,QAAA+T,UACAnZ,IAAAoF,QAAA+T,aAEApM,GAAAzI,GACAkf,EAAA7iB,KAAA0oC,EAAAL,EAAAj8B,EAAA,GAAAi8B,EAAAj8B,KACAhM,EAAAJ,KAAA6lB,EAAAxmB,EAAA+M,EAAA,GAAA/M,EAAA+M,IAEA,iBAAA5N,GACA,GAAA4N,GAAArK,GAAAknC,OAAAZ,EAAA7pC,EAAA,EAAAmF,GAAA,CACA,OAAAvD,GAAAgM,GAAAyW,EAAAzW,GAAA5N,KAMA,QAAA0qC,IAAAb,EAAAhpC,EAAAwmB,EAAAsjB,GAEA,QAAAC,KACA,GAAAC,GAAA9rC,KAAAoC,IAAA0oC,EAAA/tC,OAAA+E,EAAA/E,QAAA,EAAA0uC,GAAAP,GAAAC,EAAAS,EAAA1G,GAAAD,EAGA,OAFAzP,GAAAsW,EAAAhB,EAAAhpC,EAAAqpC,EAAA7iB,GACAyjB,EAAAD,EAAAhqC,EAAAgpC,EAAAK,EAAAvK,IACAzmB,EAEA,QAAAA,GAAAlZ,GACA,MAAAu0B,GAAAv0B,GARA,GAAAu0B,GAAAuW,CAiDA,OAvCA5xB,GAAA8N,OAAA,SAAA/mB,GACA,MAAA6qC,GAAA7qC,IAEAiZ,EAAA2wB,OAAA,SAAA7pC,GACA,MAAA+B,WAAAjG,QACA+tC,EAAA7pC,EAAAV,IAAAyrC,QACAH,KAFAf,GAIA3wB,EAAArY,MAAA,SAAAb,GACA,MAAA+B,WAAAjG,QACA+E,EAAAb,EACA4qC,KAFA/pC,GAIAqY,EAAA8xB,WAAA,SAAAhrC,GACA,MAAAkZ,GAAArY,MAAAb,GAAAqnB,YAAAib,KAEAppB,EAAAyxB,MAAA,SAAA3qC,GACA,MAAA+B,WAAAjG,QACA6uC,EAAA3qC,EACA4qC,KAFAD,GAIAzxB,EAAAmO,YAAA,SAAArnB,GACA,MAAA+B,WAAAjG,QACAurB,EAAArnB,EACA4qC,KAFAvjB,GAIAnO,EAAA+xB,MAAA,SAAAp9B,GACA,MAAAq9B,IAAArB,EAAAh8B,IAEAqL,EAAAiyB,WAAA,SAAAt9B,EAAAkH,GACA,MAAAq2B,IAAAvB,EAAAh8B,EAAAkH,IAEAmE,EAAAkxB,KAAA,SAAAv8B,GAEA,MADAw9B,IAAAxB,EAAAh8B,GACA+8B,KAEA1xB,EAAAoyB,KAAA,WACA,MAAAZ,IAAAb,EAAAhpC,EAAAwmB,EAAAsjB,IAEAC,IAEA,QAAAW,IAAAryB,EAAA2xB,GACA,MAAAtnC,IAAAgU,OAAA2B,EAAA2xB,EAAA,4CAEA,QAAAQ,IAAAxB,EAAAh8B,GAGA,MAFAs8B,IAAAN,EAAAS,GAAAkB,GAAA3B,EAAAh8B,GAAA,KACAs8B,GAAAN,EAAAS,GAAAkB,GAAA3B,EAAAh8B,GAAA,KACAg8B,EAEA,QAAA2B,IAAA3B,EAAAh8B,GACA,MAAAA,MAAA,GACA,IAAA0tB,GAAAqO,GAAAC,GAAA4B,EAAAlQ,EAAA,GAAAA,EAAA,GAAA5f,EAAA5c,KAAA2V,IAAA,GAAA3V,KAAAsd,MAAAtd,KAAA4D,IAAA8oC,EAAA59B,GAAA9O,KAAAia,OAAA0yB,EAAA79B,EAAA49B,EAAA9vB,CAKA,OAJA+vB,IAAA,IAAA/vB,GAAA,GAA+B+vB,GAAA,IAAA/vB,GAAA,EAAgC+vB,GAAA,MAAA/vB,GAAA,GAC/D4f,EAAA,GAAAx8B,KAAAga,KAAAwiB,EAAA,GAAA5f,KACA4f,EAAA,GAAAx8B,KAAAsd,MAAAkf,EAAA,GAAA5f,KAAA,GAAAA,EACA4f,EAAA,GAAA5f,EACA4f,EAEA,QAAA2P,IAAArB,EAAAh8B,GACA,MAAAtK,IAAA1C,MAAAkG,MAAAxD,GAAAioC,GAAA3B,EAAAh8B,IAEA,QAAAu9B,IAAAvB,EAAAh8B,EAAAkH,GACA,GAAAlU,GAAA2qC,GAAA3B,EAAAh8B,EACA,IAAAkH,EAAA,CACA,GAAA9F,GAAAkL,GAAAjF,KAAAH,EAEA,IADA9F,EAAAqa,QACA,MAAAra,EAAA,IACA,GAAAnN,GAAAyB,GAAA4X,aAAApc,KAAAC,IAAA0B,GAAAG,EAAA,IAAAH,GAAAG,EAAA,KAIA,OAHAoO,GAAA,KAAAA,EAAA,OAAA08B,GAAA7pC,EAAAoX,MAAArY,EAAA,MACAoO,EAAA,OACA8F,EAAAxR,GAAAwR,OAAA9F,EAAAgL,KAAA,KACA,SAAAhV,GACA,MAAA8P,GAAAjT,EAAAoX,MAAAjU,IAAAnD,EAAAqX,QAGAlK,EAAA,KAAAA,EAAA,OAAA28B,GAAA38B,EAAA,GAAApO,IACAkU,EAAA9F,EAAAgL,KAAA,QAEAlF,GAAA,KAAA42B,GAAA9qC,EAAA,OAEA,OAAA0C,IAAAwR,UASA,QAAA42B,IAAArpC,GACA,OAAAvD,KAAAsd,MAAAtd,KAAA4D,IAAAL,GAAAvD,KAAAia,KAAA,KAEA,QAAA4yB,IAAApuC,EAAAqD,GACA,GAAAiY,GAAA6yB,GAAA9qC,EAAA,GACA,OAAArD,KAAAquC,IAAA9sC,KAAA2B,IAAAoY,EAAA6yB,GAAA5sC,KAAAC,IAAA0B,GAAAG,EAAA,IAAAH,GAAAG,EAAA,gBAAArD,GAAAsb,EAAA,SAAAtb,GAKA,QAAAsuC,IAAAjB,EAAAkB,EAAAC,EAAAnC,GACA,QAAAlnC,GAAA3C,GACA,OAAAgsC,EAAAjtC,KAAA4D,IAAA3C,EAAA,IAAAA,IAAAjB,KAAA4D,IAAA3C,EAAA,KAAAA,IAAAjB,KAAA4D,IAAAopC,GAEA,QAAAr3B,GAAA1U,GACA,MAAAgsC,GAAAjtC,KAAA2V,IAAAq3B,EAAA/rC,IAAAjB,KAAA2V,IAAAq3B,GAAA/rC,GAEA,QAAAkZ,GAAAlZ,GACA,MAAA6qC,GAAAloC,EAAA3C,IAoDA,MAlDAkZ,GAAA8N,OAAA,SAAAhnB,GACA,MAAA0U,GAAAm2B,EAAA7jB,OAAAhnB,KAEAkZ,EAAA2wB,OAAA,SAAA7pC,GACA,MAAA+B,WAAAjG,QACAkwC,EAAAhsC,EAAA,MACA6qC,EAAAhB,UAAA7pC,EAAAV,IAAAyrC,SAAAzrC,IAAAqD,IACAuW,GAHA2wB,GAKA3wB,EAAA6yB,KAAA,SAAA7uC,GACA,MAAA6E,WAAAjG,QACAiwC,GAAA7uC,EACA2tC,EAAAhB,SAAAvqC,IAAAqD,IACAuW,GAHA6yB,GAKA7yB,EAAAkxB,KAAA,WACA,GAAA6B,GAAA9B,GAAAN,EAAAvqC,IAAAqD,GAAAqpC,EAAAjtC,KAAAmtC,GAGA,OAFArB,GAAAhB,OAAAoC,GACApC,EAAAoC,EAAA3sC,IAAAoV,GACAwE,GAEAA,EAAA+xB,MAAA,WACA,GAAA1P,GAAAqO,GAAAC,GAAAoB,KAAA5mB,EAAAkX,EAAA,GAAA3/B,EAAA2/B,EAAA,GAAA35B,EAAA7C,KAAAsd,MAAA1Z,EAAA0hB,IAAAzW,EAAA7O,KAAAga,KAAApW,EAAA/G,IAAAwL,EAAA2kC,EAAA,IAAAA,CACA,IAAAtzB,SAAA7K,EAAAhM,GAAA,CACA,GAAAoqC,EAAA,CACA,KAAgBpqC,EAAAgM,EAAMhM,IAAA,OAAAuD,GAAA,EAAqBA,EAAAiC,EAAOjC,IAAA8lC,EAAAzpC,KAAAkT,EAAA9S,GAAAuD,EAClD8lC,GAAAzpC,KAAAkT,EAAA9S,QAGA,KADAqpC,EAAAzpC,KAAAkT,EAAA9S,IACgBA,IAAAgM,GAAQ,OAAAzI,GAAAiC,EAAA,EAAsBjC,EAAA,EAAOA,IAAA8lC,EAAAzpC,KAAAkT,EAAA9S,GAAAuD,EAErD,KAAAvD,EAAA,EAAmBqpC,EAAArpC,GAAAyiB,EAAcziB,KACjC,IAAAgM,EAAAq9B,EAAAnvC,OAA8BmvC,EAAAr9B,EAAA,GAAAhS,EAAkBgS,KAChDq9B,IAAAhlC,MAAArE,EAAAgM,GAEA,MAAAq9B,IAEA/xB,EAAAiyB,WAAA,SAAA/jC,EAAA2N,GACA,IAAAhT,UAAAjG,OAAA,MAAAqwC,GACApqC,WAAAjG,OAAA,EAAAiZ,EAAAo3B,GAA4D,kBAAAp3B,OAAAxR,GAAAwR,UAC5D,IAAA5P,GAAApG,KAAAC,IAAA,EAAA+sC,EAAA3kC,EAAA8R,EAAA+xB,QAAAnvC,OACA,iBAAAmJ,GACA,GAAArD,GAAAqD,EAAAyP,EAAA3V,KAAAsU,MAAA1Q,EAAAsC,IAEA,OADArD,GAAAmqC,IAAA,KAAAnqC,GAAAmqC,GACAnqC,GAAAuD,EAAA4P,EAAA9P,GAAA,KAGAiU,EAAAoyB,KAAA,WACA,MAAAQ,IAAAjB,EAAAS,OAAAS,EAAAC,EAAAnC,IAEA0B,GAAAryB,EAAA2xB,GAaA,QAAAuB,IAAAvB,EAAAjwB,EAAAivB,GAEA,QAAA3wB,GAAAlZ,GACA,MAAA6qC,GAAAwB,EAAArsC,IAFA,GAAAqsC,GAAAC,GAAA1xB,GAAA2xB,EAAAD,GAAA,EAAA1xB,EA+BA,OA3BA1B,GAAA8N,OAAA,SAAAhnB,GACA,MAAAusC,GAAA1B,EAAA7jB,OAAAhnB,KAEAkZ,EAAA2wB,OAAA,SAAA7pC,GACA,MAAA+B,WAAAjG,QACA+uC,EAAAhB,UAAA7pC,EAAAV,IAAAyrC,SAAAzrC,IAAA+sC,IACAnzB,GAFA2wB,GAIA3wB,EAAA+xB,MAAA,SAAAp9B,GACA,MAAAq9B,IAAArB,EAAAh8B,IAEAqL,EAAAiyB,WAAA,SAAAt9B,EAAAkH,GACA,MAAAq2B,IAAAvB,EAAAh8B,EAAAkH,IAEAmE,EAAAkxB,KAAA,SAAAv8B,GACA,MAAAqL,GAAA2wB,OAAAwB,GAAAxB,EAAAh8B,KAEAqL,EAAA0B,SAAA,SAAA5a,GACA,MAAA+B,WAAAjG,QACAuwC,EAAAC,GAAA1xB,EAAA5a,GACAusC,EAAAD,GAAA,EAAA1xB,GACAiwB,EAAAhB,SAAAvqC,IAAA+sC,IACAnzB,GAJA0B,GAMA1B,EAAAoyB,KAAA,WACA,MAAAc,IAAAvB,EAAAS,OAAA1wB,EAAAivB,IAEA0B,GAAAryB,EAAA2xB,GAEA,QAAAyB,IAAAtwC,GACA,gBAAAgE,GACA,MAAAA,GAAA,GAAAjB,KAAA2V,KAAA1U,EAAAhE,GAAA+C,KAAA2V,IAAA1U,EAAAhE,IAYA,QAAAwwC,IAAA3C,EAAA4C,GAEA,QAAAvzB,GAAAlZ,GACA,MAAAa,KAAAu/B,EAAAl4B,IAAAlI,KAAA,UAAAysC,EAAA10B,EAAAqoB,EAAA93B,IAAAtI,EAAA6pC,EAAAroC,KAAAxB,IAAAqE,MAAA,GAAAxD,EAAA/E,QAEA,QAAA4wC,GAAAlqC,EAAAmZ,GACA,MAAApY,IAAA1C,MAAAgpC,EAAA/tC,QAAAwD,IAAA,SAAAsC,GACA,MAAAY,GAAAmZ,EAAA/Z,IANA,GAAAw+B,GAAAv/B,EAAA8rC,CAsFA,OA7EAzzB,GAAA2wB,OAAA,SAAA7pC,GACA,IAAA+B,UAAAjG,OAAA,MAAA+tC,EACAA,MACAzJ,EAAA,GAAA16B,EAEA,KADA,GAAAknC,GAAAhrC,GAAA,EAAAwF,EAAApH,EAAAlE,SACA8F,EAAAwF,GAAAg5B,EAAAh/B,IAAAwrC,EAAA5sC,EAAA4B,KAAAw+B,EAAA93B,IAAAskC,EAAA/C,EAAAroC,KAAAorC,GACA,OAAA1zB,GAAAuzB,EAAA10B,GAAAhR,MAAAmS,EAAAuzB,EAAAtoC,IAEA+U,EAAArY,MAAA,SAAAb,GACA,MAAA+B,WAAAjG,QACA+E,EAAAb,EACA2sC,EAAA,EACAF,GACA10B,EAAA,QACA5T,EAAApC,WAEAmX,GAPArY,GASAqY,EAAA2zB,YAAA,SAAA7sC,EAAA+Q,GACAhP,UAAAjG,OAAA,IAAAiV,EAAA,EACA,IAAAvO,GAAAxC,EAAA,GAAA8pC,EAAA9pC,EAAA,GAAA2b,EAAAkuB,EAAA/tC,OAAA,GAAA0G,KAAAsnC,GAAA,EACA,IAAAA,EAAAtnC,IAAAqnC,EAAA/tC,OAAA,EAAAiV,EAOA,OANAlQ,GAAA6rC,EAAAlqC,EAAAmZ,EAAA5K,EAAA,EAAA4K,GACAgxB,EAAA,EACAF,GACA10B,EAAA,cACA5T,EAAApC,WAEAmX,GAEAA,EAAA4zB,iBAAA,SAAA9sC,EAAA+Q,GACAhP,UAAAjG,OAAA,IAAAiV,EAAA,EACA,IAAAvO,GAAAxC,EAAA,GAAA8pC,EAAA9pC,EAAA,GAAA2b,EAAAkuB,EAAA/tC,OAAA,GAAA0G,EAAAsnC,EAAA/qC,KAAAsU,OAAA7Q,EAAAsnC,GAAA,GACA,IAAAA,EAAAtnC,IAAAqnC,EAAA/tC,OAAA,EAAAiV,GAAA,CAOA,OANAlQ,GAAA6rC,EAAAlqC,EAAAzD,KAAAsU,MAAAsI,EAAA5K,EAAA,GAAA+4B,EAAAtnC,GAAAqnC,EAAA/tC,OAAA,EAAAiV,GAAA4K,GAAA,GAAAA,GACAgxB,EAAA,EACAF,GACA10B,EAAA,mBACA5T,EAAApC,WAEAmX,GAEAA,EAAA6zB,WAAA,SAAA/sC,EAAA+Q,EAAAi8B,GACAjrC,UAAAjG,OAAA,IAAAiV,EAAA,GACAhP,UAAAjG,OAAA,IAAAkxC,EAAAj8B,EACA,IAAAiJ,GAAAha,EAAA,GAAAA,EAAA,GAAAwC,EAAAxC,EAAAga,EAAA,GAAA8vB,EAAA9pC,EAAA,EAAAga,GAAA2B,GAAAmuB,EAAAtnC,IAAAqnC,EAAA/tC,OAAAiV,EAAA,EAAAi8B,EAQA,OAPAnsC,GAAA6rC,EAAAlqC,EAAAmZ,EAAAqxB,EAAArxB,GACA3B,GAAAnZ,EAAAmZ,UACA2yB,EAAAhxB,GAAA,EAAA5K,GACA07B,GACA10B,EAAA,aACA5T,EAAApC,WAEAmX,GAEAA,EAAA+zB,gBAAA,SAAAjtC,EAAA+Q,EAAAi8B,GACAjrC,UAAAjG,OAAA,IAAAiV,EAAA,GACAhP,UAAAjG,OAAA,IAAAkxC,EAAAj8B,EACA,IAAAiJ,GAAAha,EAAA,GAAAA,EAAA,GAAAwC,EAAAxC,EAAAga,EAAA,GAAA8vB,EAAA9pC,EAAA,EAAAga,GAAA2B,EAAA5c,KAAAsd,OAAAytB,EAAAtnC,IAAAqnC,EAAA/tC,OAAAiV,EAAA,EAAAi8B,GAQA,OAPAnsC,GAAA6rC,EAAAlqC,EAAAzD,KAAAsU,OAAAy2B,EAAAtnC,GAAAqnC,EAAA/tC,OAAAiV,GAAA4K,GAAA,GAAAA,GACA3B,GAAAnZ,EAAAmZ,UACA2yB,EAAA5tC,KAAAsU,MAAAsI,GAAA,EAAA5K,IACA07B,GACA10B,EAAA,kBACA5T,EAAApC,WAEAmX,GAEAA,EAAAyzB,UAAA,WACA,MAAAA,IAEAzzB,EAAA8wB,YAAA,WACA,MAAAJ,IAAA6C,EAAAtoC,EAAA,KAEA+U,EAAAoyB,KAAA,WACA,MAAAkB,IAAA3C,EAAA4C,IAEAvzB,EAAA2wB,UAqBA,QAAAqD,IAAArD,EAAAhpC,GAEA,QAAA+pC,KACA,GAAAzlC,GAAA,EAAAioB,EAAAvsB,EAAA/E,MAEA,KADAqxC,OACAhoC,EAAAioB,GAAA+f,EAAAhoC,EAAA,GAAA5B,GAAA6pC,SAAAvD,EAAA1kC,EAAAioB,EACA,OAAAlU,GAEA,QAAAA,GAAAlZ,GACA,IAAAwE,MAAAxE,MAAA,MAAAa,GAAA0C,GAAAknC,OAAA0C,EAAAntC,IARA,GAAAmtC,EA8BA,OApBAj0B,GAAA2wB,OAAA,SAAA7pC,GACA,MAAA+B,WAAAjG,QACA+tC,EAAA7pC,EAAAV,IAAAgF,GAAA6K,OAAA5K,GAAAqjB,KAAA1jB,GACA0mC,KAFAf,GAIA3wB,EAAArY,MAAA,SAAAb,GACA,MAAA+B,WAAAjG,QACA+E,EAAAb,EACA4qC,KAFA/pC,GAIAqY,EAAAm0B,UAAA,WACA,MAAAF,IAEAj0B,EAAAo0B,aAAA,SAAArtC,GAEA,MADAA,GAAAY,EAAAsH,QAAAlI,GACAA,EAAA,GAAAoE,UAAApE,EAAA,EAAAktC,EAAAltC,EAAA,GAAA4pC,EAAA,GAAA5pC,EAAAktC,EAAArxC,OAAAqxC,EAAAltC,GAAA4pC,IAAA/tC,OAAA,KAEAod,EAAAoyB,KAAA,WACA,MAAA4B,IAAArD,EAAAhpC,IAEA+pC,IAKA,QAAA2C,IAAAvnB,EAAA0H,EAAA7sB,GAEA,QAAAqY,GAAAlZ,GACA,MAAAa,GAAA9B,KAAAC,IAAA,EAAAD,KAAAoC,IAAAS,EAAA7C,KAAAsd,MAAAqmB,GAAA1iC,EAAAgmB,OAEA,QAAA4kB,KAGA,MAFAlI,GAAA7hC,EAAA/E,QAAA4xB,EAAA1H,GACApkB,EAAAf,EAAA/E,OAAA,EACAod,EAPA,GAAAwpB,GAAA9gC,CA4BA,OAnBAsX,GAAA2wB,OAAA,SAAA7pC,GACA,MAAA+B,WAAAjG,QACAkqB,GAAAhmB,EAAA,GACA0tB,GAAA1tB,IAAAlE,OAAA,GACA8uC,MAHA5kB,EAAA0H,IAKAxU,EAAArY,MAAA,SAAAb,GACA,MAAA+B,WAAAjG,QACA+E,EAAAb,EACA4qC,KAFA/pC,GAIAqY,EAAAo0B,aAAA,SAAArtC,GAGA,MAFAA,GAAAY,EAAAsH,QAAAlI,GACAA,IAAA,EAAAoE,IAAApE,EAAAyiC,EAAA1c,GACA/lB,IAAA,EAAAyiC,IAEAxpB,EAAAoyB,KAAA,WACA,MAAAiC,IAAAvnB,EAAA0H,EAAA7sB,IAEA+pC,IAKA,QAAA4C,IAAA3D,EAAAhpC,GACA,QAAAqY,GAAAlZ,GACA,GAAAA,KAAA,MAAAa,GAAA0C,GAAAknC,OAAAZ,EAAA7pC,IAmBA,MAjBAkZ,GAAA2wB,OAAA,SAAA3sC,GACA,MAAA6E,WAAAjG,QACA+tC,EAAA3sC,EACAgc,GAFA2wB,GAIA3wB,EAAArY,MAAA,SAAA3D,GACA,MAAA6E,WAAAjG,QACA+E,EAAA3D,EACAgc,GAFArY,GAIAqY,EAAAo0B,aAAA,SAAArtC,GAEA,MADAA,GAAAY,EAAAsH,QAAAlI,IACA4pC,EAAA5pC,EAAA,GAAA4pC,EAAA5pC,KAEAiZ,EAAAoyB,KAAA,WACA,MAAAkC,IAAA3D,EAAAhpC,IAEAqY,EAKA,QAAAu0B,IAAA5D,GACA,QAAA6D,GAAA1tC,GACA,OAAAA,EAiBA,MAfA0tC,GAAA1mB,OAAA0mB,EACAA,EAAA7D,OAAA6D,EAAA7sC,MAAA,SAAAb,GACA,MAAA+B,WAAAjG,QACA+tC,EAAA7pC,EAAAV,IAAAouC,GACAA,GAFA7D,GAIA6D,EAAAzC,MAAA,SAAAp9B,GACA,MAAAq9B,IAAArB,EAAAh8B,IAEA6/B,EAAAvC,WAAA,SAAAt9B,EAAAkH,GACA,MAAAq2B,IAAAvB,EAAAh8B,EAAAkH,IAEA24B,EAAApC,KAAA,WACA,MAAAmC,IAAA5D,IAEA6D,EAGA,QAAAC,MACA,SA+HA,QAAAC,IAAA3oC,GACA,MAAAA,GAAA4oC,YAEA,QAAAC,IAAA7oC,GACA,MAAAA,GAAA8oC,YAEA,QAAAC,IAAA/oC,GACA,MAAAA,GAAAgpC,WAEA,QAAAC,IAAAjpC,GACA,MAAAA,GAAAkpC,SAEA,QAAAC,IAAAnpC,GACA,MAAAA,MAAAopC,SAEA,QAAAC,IAAAtoB,EAAAF,EAAA4H,EAAAC,GACA,OAAA3H,EAAA0H,GAAA5H,KAAA6H,GAAA3H,EAAA,MAEA,QAAAuoB,IAAA9mB,EAAAC,EAAA+a,EAAA+L,EAAAC,GACA,GAAAC,GAAAjnB,EAAA,GAAAC,EAAA,GAAAinB,EAAAlnB,EAAA,GAAAC,EAAA,GAAA9iB,GAAA6pC,EAAAD,MAAAzvC,KAAAyV,KAAAk6B,IAAAC,KAAAC,EAAAhqC,EAAA+pC,EAAAE,GAAAjqC,EAAA8pC,EAAAhhB,EAAAjG,EAAA,GAAAmnB,EAAAjhB,EAAAlG,EAAA,GAAAonB,EAAAhc,EAAAnL,EAAA,GAAAknB,EAAA9b,EAAApL,EAAA,GAAAmnB,EAAA9W,GAAArK,EAAAmF,GAAA,EAAAqF,GAAAvK,EAAAmF,GAAA,EAAA5yB,EAAA2yB,EAAAnF,EAAAvtB,EAAA2yB,EAAAnF,EAAA8E,EAAAvyB,IAAAC,IAAAyT,EAAA6uB,EAAA+L,EAAAM,EAAAphB,EAAAoF,EAAAD,EAAAlF,EAAA1oB,GAAA9E,EAAA,QAAApB,KAAAyV,KAAAzV,KAAAC,IAAA,EAAA4U,IAAA6e,EAAAqc,MAAAC,GAAAD,EAAA3uC,EAAAD,EAAA+E,GAAAwtB,EAAAmD,IAAAkZ,EAAA5uC,EAAAC,EAAA8E,GAAAwtB,EAAAuc,GAAAF,EAAA3uC,EAAAD,EAAA+E,GAAAwtB,EAAAqD,IAAAgZ,EAAA5uC,EAAAC,EAAA8E,GAAAwtB,EAAAwc,EAAAF,EAAAhX,EAAAmX,EAAAtZ,EAAAsC,EAAAiX,EAAAH,EAAAjX,EAAAqX,EAAAtZ,EAAAoC,CAEA,OADA+W,KAAAC,IAAAC,IAAAC,MAAAL,EAAAC,EAAApZ,EAAAE,KACAiZ,EAAAH,EAAAhZ,EAAAiZ,IAAAE,EAAAtM,EAAA7uB,EAAAgiB,EAAA6M,EAAA7uB,IAEA,QAAAy7B,IAAA9b,GAEA,QAAA7K,GAAAtb,GAEA,QAAAoa,KACAL,EAAA3lB,KAAA,IAAA6lB,EAAAkM,EAAAxL,GAAAunB,IAEA,IAJA,GAAArqC,GAAAkiB,KAAAY,KAAAnmB,GAAA,EAAAwF,EAAAgG,EAAAtR,OAAAyhC,EAAA9nB,GAAAzV,GAAAw9B,EAAA/nB,GAAAxV,KAIA2B,EAAAwF,GACAmoC,EAAAzgC,KAAAnJ,KAAAV,EAAAmI,EAAAxL,MACAmmB,EAAAvmB,OAAA+7B,EAAAzuB,KAAAnJ,KAAAV,EAAArD,IAAA47B,EAAA1uB,KAAAnJ,KAAAV,EAAArD,KACSmmB,EAAAjsB,SACT0rB,IACAO,KAIA,OADAA,GAAAjsB,QAAA0rB,IACAL,EAAArrB,OAAAqrB,EAAAlN,KAAA,SAfA,GAAAja,GAAAu3B,GAAAt3B,EAAAu3B,GAAA+X,EAAAtoB,GAAAI,EAAAmoB,GAAAC,EAAApoB,EAAA9hB,IAAA+pC,EAAA,EA0CA,OAzBA5mB,GAAA1oB,EAAA,SAAA9C,GACA,MAAA6E,WAAAjG,QACAkE,EAAA9C,EACAwrB,GAFA1oB,GAIA0oB,EAAAzoB,EAAA,SAAA/C,GACA,MAAA6E,WAAAjG,QACAmE,EAAA/C,EACAwrB,GAFAzoB,GAIAyoB,EAAA6mB,QAAA,SAAAryC,GACA,MAAA6E,WAAAjG,QACAyzC,EAAAryC,EACAwrB,GAFA6mB,GAIA7mB,EAAArB,YAAA,SAAAnqB,GACA,MAAA6E,WAAAjG,QACA2zC,EAAA,kBAAAvyC,GAAAmqB,EAAAnqB,GAAoEmqB,EAAAqoB,GAAAxnC,IAAAhL,IAAAsyC,IAAAjqC,IACpEmjB,GAFA+mB,GAIA/mB,EAAA4mB,QAAA,SAAApyC,GACA,MAAA6E,WAAAjG,QACAwzC,EAAApyC,EACAwrB,GAFA4mB,GAIA5mB,EAwBA,QAAA8mB,IAAAznB,GACA,MAAAA,GAAAjsB,OAAA,EAAAisB,EAAA9N,KAAA,KAAA8N,EAAA,IAEA,QAAA4nB,IAAA5nB,GACA,MAAAA,GAAA9N,KAAA,SAEA,QAAA21B,IAAA7nB,GAEA,IADA,GAAAnmB,GAAA,EAAAwF,EAAA2gB,EAAAjsB,OAAAgd,EAAAiP,EAAA,GAAA8nB,GAAA/2B,EAAA,OAAAA,EAAA,MACAlX,EAAAwF,GAAAyoC,EAAAruC,KAAA,KAAAsX,EAAA,IAAAA,EAAAiP,EAAAnmB,IAAA,UAAAkX,EAAA,GAEA,OADA1R,GAAA,GAAAyoC,EAAAruC,KAAA,IAAAsX,EAAA,IACA+2B,EAAA51B,KAAA,IAEA,QAAA61B,IAAA/nB,GAEA,IADA,GAAAnmB,GAAA,EAAAwF,EAAA2gB,EAAAjsB,OAAAgd,EAAAiP,EAAA,GAAA8nB,GAAA/2B,EAAA,OAAAA,EAAA,MACAlX,EAAAwF,GAAAyoC,EAAAruC,KAAA,KAAAsX,EAAAiP,EAAAnmB,IAAA,OAAAkX,EAAA,GACA,OAAA+2B,GAAA51B,KAAA,IAEA,QAAA81B,IAAAhoB,GAEA,IADA,GAAAnmB,GAAA,EAAAwF,EAAA2gB,EAAAjsB,OAAAgd,EAAAiP,EAAA,GAAA8nB,GAAA/2B,EAAA,OAAAA,EAAA,MACAlX,EAAAwF,GAAAyoC,EAAAruC,KAAA,KAAAsX,EAAAiP,EAAAnmB,IAAA,OAAAkX,EAAA,GACA,OAAA+2B,GAAA51B,KAAA,IAEA,QAAA+1B,IAAAjoB,EAAAunB,GACA,MAAAvnB,GAAAjsB,OAAA,EAAA0zC,GAAAznB,KAAA,GAAAkoB,GAAAloB,EAAA9hB,MAAA,MAAAiqC,GAAAnoB,EAAAunB,IAEA,QAAAa,IAAApoB,EAAAunB,GACA,MAAAvnB,GAAAjsB,OAAA,EAAA6zC,GAAA5nB,KAAA,GAAAkoB,IAAAloB,EAAAvmB,KAAAumB,EAAA,IACAA,GAAAmoB,IAAAnoB,IAAAjsB,OAAA,IAAAsM,OAAA2f,KAAA,KAAAunB,IAEA,QAAAc,IAAAroB,EAAAunB,GACA,MAAAvnB,GAAAjsB,OAAA,EAAA0zC,GAAAznB,KAAA,GAAAkoB,GAAAloB,EAAAmoB,GAAAnoB,EAAAunB,IAEA,QAAAW,IAAAloB,EAAAsoB,GACA,GAAAA,EAAAv0C,OAAA,GAAAisB,EAAAjsB,QAAAu0C,EAAAv0C,QAAAisB,EAAAjsB,QAAAu0C,EAAAv0C,OAAA,EACA,MAAA0zC,IAAAznB,EAEA,IAAAsd,GAAAtd,EAAAjsB,QAAAu0C,EAAAv0C,OAAA+zC,EAAA,GAAApoB,EAAAM,EAAA,GAAAjP,EAAAiP,EAAA,GAAArP,EAAA23B,EAAA,GAAAt4B,EAAAW,EAAA43B,EAAA,CAMA,IALAjL,IACAwK,GAAA,KAAA/2B,EAAA,KAAAJ,EAAA,WAAAI,EAAA,KAAAJ,EAAA,UAAAI,EAAA,OAAAA,EAAA,GACA2O,EAAAM,EAAA,GACAuoB,EAAA,GAEAD,EAAAv0C,OAAA,GACAic,EAAAs4B,EAAA,GACAv3B,EAAAiP,EAAAuoB,GACAA,IACAT,GAAA,KAAApoB,EAAA,GAAA/O,EAAA,SAAA+O,EAAA,GAAA/O,EAAA,SAAAI,EAAA,GAAAf,EAAA,SAAAe,EAAA,GAAAf,EAAA,QAAAe,EAAA,OAAAA,EAAA,EACA,QAAAlX,GAAA,EAAqBA,EAAAyuC,EAAAv0C,OAAqB8F,IAAA0uC,IAC1Cx3B,EAAAiP,EAAAuoB,GACAv4B,EAAAs4B,EAAAzuC,GACAiuC,GAAA,KAAA/2B,EAAA,GAAAf,EAAA,SAAAe,EAAA,GAAAf,EAAA,QAAAe,EAAA,OAAAA,EAAA,GAGA,GAAAusB,EAAA,CACA,GAAAkL,GAAAxoB,EAAAuoB,EACAT,IAAA,KAAA/2B,EAAA,KAAAf,EAAA,WAAAe,EAAA,KAAAf,EAAA,UAAAw4B,EAAA,OAAAA,EAAA,GAEA,MAAAV,GAEA,QAAAK,IAAAnoB,EAAAunB,GAEA,IADA,GAAA7nB,GAAA4oB,KAAAlsC,GAAA,EAAAmrC,GAAA,EAAA5nB,EAAAK,EAAA,GAAAyoB,EAAAzoB,EAAA,GAAAnmB,EAAA,EAAAwF,EAAA2gB,EAAAjsB,SACA8F,EAAAwF,GACAqgB,EAAAC,EACAA,EAAA8oB,EACAA,EAAAzoB,EAAAnmB,GACAyuC,EAAA7uC,MAAA2C,GAAAqsC,EAAA,GAAA/oB,EAAA,IAAAtjB,GAAAqsC,EAAA,GAAA/oB,EAAA,KAEA,OAAA4oB,GAEA,QAAAI,IAAA1oB,GACA,GAAAA,EAAAjsB,OAAA,QAAA0zC,IAAAznB,EACA,IAAAnmB,GAAA,EAAAwF,EAAA2gB,EAAAjsB,OAAAw0C,EAAAvoB,EAAA,GAAA/B,EAAAsqB,EAAA,GAAAxqB,EAAAwqB,EAAA,GAAArL,GAAAjf,OAAAsqB,EAAAvoB,EAAA,QAAAmd,GAAApf,MAAAwqB,EAAA,IAAAT,GAAA7pB,EAAA,IAAAF,EAAA,IAAA4qB,GAAAC,GAAA1L,GAAA,IAAAyL,GAAAC,GAAAzL,GAEA,KADAnd,EAAAvmB,KAAAumB,EAAA3gB,EAAA,MACAxF,GAAAwF,GACAkpC,EAAAvoB,EAAAnmB,GACAqjC,EAAA3b,QACA2b,EAAAzjC,KAAA8uC,EAAA,IACApL,EAAA5b,QACA4b,EAAA1jC,KAAA8uC,EAAA,IACAM,GAAAf,EAAA5K,EAAAC,EAIA,OAFAnd,GAAAoB,MACA0mB,EAAAruC,KAAA,IAAA8uC,GACAT,EAAA51B,KAAA,IAEA,QAAA42B,IAAA9oB,GACA,GAAAA,EAAAjsB,OAAA,QAAA0zC,IAAAznB,EAEA,KADA,GAAAuoB,GAAAT,KAAAjuC,GAAA,EAAAwF,EAAA2gB,EAAAjsB,OAAAmpC,GAAA,GAAAC,GAAA,KACAtjC,EAAA,GACA0uC,EAAAvoB,EAAAnmB,GACAqjC,EAAAzjC,KAAA8uC,EAAA,IACApL,EAAA1jC,KAAA8uC,EAAA,GAIA,KAFAT,EAAAruC,KAAAkvC,GAAAC,GAAA1L,GAAA,IAAAyL,GAAAC,GAAAzL,MACAtjC,IACAA,EAAAwF,GACAkpC,EAAAvoB,EAAAnmB,GACAqjC,EAAA3b,QACA2b,EAAAzjC,KAAA8uC,EAAA,IACApL,EAAA5b,QACA4b,EAAA1jC,KAAA8uC,EAAA,IACAM,GAAAf,EAAA5K,EAAAC,EAEA,OAAA2K,GAAA51B,KAAA,IAEA,QAAA62B,IAAA/oB,GAEA,IADA,GAAA8nB,GAAAS,EAAA1uC,GAAA,EAAAwF,EAAA2gB,EAAAjsB,OAAA+R,EAAAzG,EAAA,EAAA69B,KAAAC,OACAtjC,EAAA,GACA0uC,EAAAvoB,EAAAnmB,EAAAwF,GACA69B,EAAAzjC,KAAA8uC,EAAA,IACApL,EAAA1jC,KAAA8uC,EAAA,GAIA,KAFAT,GAAAa,GAAAC,GAAA1L,GAAA,IAAAyL,GAAAC,GAAAzL,MACAtjC,IACAA,EAAAiM,GACAyiC,EAAAvoB,EAAAnmB,EAAAwF,GACA69B,EAAA3b,QACA2b,EAAAzjC,KAAA8uC,EAAA,IACApL,EAAA5b,QACA4b,EAAA1jC,KAAA8uC,EAAA,IACAM,GAAAf,EAAA5K,EAAAC,EAEA,OAAA2K,GAAA51B,KAAA,IAEA,QAAA82B,IAAAhpB,EAAAunB,GACA,GAAAloC,GAAA2gB,EAAAjsB,OAAA,CACA,IAAAsL,EAEA,IADA,GAAA0R,GAAAf,EAAAiO,EAAA+B,EAAA,MAAAjC,EAAAiC,EAAA,MAAA7nB,EAAA6nB,EAAA3gB,GAAA,GAAA4e,EAAA7lB,EAAA4nB,EAAA3gB,GAAA,GAAA0e,EAAAlkB,GAAA,IACAA,GAAAwF,GACA0R,EAAAiP,EAAAnmB,GACAmW,EAAAnW,EAAAwF,EACA0R,EAAA,GAAAw2B,EAAAx2B,EAAA,MAAAw2B,IAAAtpB,EAAAjO,EAAA7X,GACA4Y,EAAA,GAAAw2B,EAAAx2B,EAAA,MAAAw2B,IAAAxpB,EAAA/N,EAAA5X,EAGA,OAAAswC,IAAA1oB,GAEA,QAAA2oB,IAAAvsC,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAGA,QAAAwsC,IAAAf,EAAA7vC,EAAAC,GACA4vC,EAAAruC,KAAA,IAAAkvC,GAAAM,GAAAhxC,GAAA,IAAA0wC,GAAAM,GAAA/wC,GAAA,IAAAywC,GAAAO,GAAAjxC,GAAA,IAAA0wC,GAAAO,GAAAhxC,GAAA,IAAAywC,GAAAC,GAAA3wC,GAAA,IAAA0wC,GAAAC,GAAA1wC,IAEA,QAAAixC,IAAAzpB,EAAAC,GACA,OAAAA,EAAA,GAAAD,EAAA,KAAAC,EAAA,GAAAD,EAAA,IAEA,QAAA0pB,IAAAppB,GAEA,IADA,GAAAnmB,GAAA,EAAAgM,EAAAma,EAAAjsB,OAAA,EAAA+R,KAAA4Z,EAAAM,EAAA,GAAAL,EAAAK,EAAA,GAAA9iB,EAAA4I,EAAA,GAAAqjC,GAAAzpB,EAAAC,KACA9lB,EAAAgM,GACAC,EAAAjM,IAAAqD,KAAAisC,GAAAzpB,EAAAC,IAAAK,EAAAnmB,EAAA,OAGA,OADAiM,GAAAjM,GAAAqD,EACA4I,EAEA,QAAAujC,IAAArpB,GAEA,IADA,GAAA9iB,GAAAd,EAAAC,EAAAsE,EAAA2nC,KAAAxiC,EAAAsjC,GAAAppB,GAAAnmB,GAAA,EAAAgM,EAAAma,EAAAjsB,OAAA,IACA8F,EAAAgM,GACA3I,EAAAisC,GAAAnpB,EAAAnmB,GAAAmmB,EAAAnmB,EAAA,IACAlB,GAAAuE,GAAAqgB,GACAzX,EAAAjM,GAAAiM,EAAAjM,EAAA,MAEAuC,EAAA0J,EAAAjM,GAAAqD,EACAb,EAAAyJ,EAAAjM,EAAA,GAAAqD,GACAyD,EAAAvE,IAAAC,KACA,IACAsE,EAAA,EAAAzD,EAAAlG,KAAAyV,KAAA9L,GACAmF,EAAAjM,GAAA8G,EAAAvE,EACA0J,EAAAjM,EAAA,GAAA8G,EAAAtE,GAKA,KADAxC,GAAA,IACAA,GAAAgM,GACAlF,GAAAqf,EAAAhpB,KAAAoC,IAAAyM,EAAAhM,EAAA,OAAAmmB,EAAAhpB,KAAAC,IAAA,EAAA4C,EAAA,cAAAiM,EAAAjM,GAAAiM,EAAAjM,KACAyuC,EAAA7uC,MAAAkH,GAAA,EAAAmF,EAAAjM,GAAA8G,GAAA,GAEA,OAAA2nC,GAEA,QAAAgB,IAAAtpB,GACA,MAAAA,GAAAjsB,OAAA,EAAA0zC,GAAAznB,KAAA,GAAAkoB,GAAAloB,EAAAqpB,GAAArpB,IAQA,QAAAupB,IAAAvpB,GAEA,IADA,GAAAhoB,GAAA6T,EAAAzP,EAAAvC,GAAA,EAAAwF,EAAA2gB,EAAAjsB,SACA8F,EAAAwF,GACArH,EAAAgoB,EAAAnmB,GACAgS,EAAA7T,EAAA,GACAoE,EAAApE,EAAA,GAAAsS,GACAtS,EAAA,GAAA6T,EAAA7U,KAAA+U,IAAA3P,GACApE,EAAA,GAAA6T,EAAA7U,KAAA6T,IAAAzO,EAEA,OAAA4jB,GAEA,QAAAwpB,IAAAhe,GAEA,QAAAie,GAAApkC,GAMA,QAAAoa,KACAL,EAAA3lB,KAAA,IAAA6lB,EAAAkM,EAAAke,GAAAnC,GAAApyB,EAAAw0B,EAAAne,EAAAoe,EAAA33B,WAAAs1B,GAAA,KAEA,IARA,GAAArqC,GAIOjF,EAAAC,EAJPknB,KAAAwqB,KAAAF,KAAA7vC,GAAA,EAAAwF,EAAAgG,EAAAtR,OAAA81C,EAAAn8B,GAAAuQ,GAAA6rB,EAAAp8B,GAAAqQ,GAAAgsB,EAAA9rB,IAAA0H,EAAA,WACA,MAAA1tB,IACOyV,GAAAiY,GAAAqkB,EAAAjsB,IAAA6H,EAAA,WACP,MAAA1tB,IACOwV,GAAAkY,KAIP/rB,EAAAwF,GACAmoC,EAAAzgC,KAAAnJ,KAAAV,EAAAmI,EAAAxL,OACA+vC,EAAAnwC,MAAAxB,GAAA4xC,EAAA9iC,KAAAnJ,KAAAV,EAAArD,GAAA3B,GAAA4xC,EAAA/iC,KAAAnJ,KAAAV,EAAArD,KACA6vC,EAAAjwC,OAAAswC,EAAAhjC,KAAAnJ,KAAAV,EAAArD,IAAAmwC,EAAAjjC,KAAAnJ,KAAAV,EAAArD,MACS+vC,EAAA71C,SACT0rB,IACAmqB,KACAF,KAIA,OADAE,GAAA71C,QAAA0rB,IACAL,EAAArrB,OAAAqrB,EAAAlN,KAAA,SArBA,GAAA+L,GAAAuR,GAAA7J,EAAA6J,GAAAzR,EAAA,EAAA6H,EAAA6J,GAAA+X,EAAAtoB,GAAAI,EAAAmoB,GAAAC,EAAApoB,EAAA9hB,IAAAmsC,EAAArqB,EAAAnK,EAAA,IAAAoyB,EAAA,EAsEA,OA/CAkC,GAAAxxC,EAAA,SAAA9C,GACA,MAAA6E,WAAAjG,QACAkqB,EAAA0H,EAAAxwB,EACAs0C,GAFA9jB,GAIA8jB,EAAAxrB,GAAA,SAAA9oB,GACA,MAAA6E,WAAAjG,QACAkqB,EAAA9oB,EACAs0C,GAFAxrB,GAIAwrB,EAAA9jB,GAAA,SAAAxwB,GACA,MAAA6E,WAAAjG,QACA4xB,EAAAxwB,EACAs0C,GAFA9jB,GAIA8jB,EAAAvxC,EAAA,SAAA/C,GACA,MAAA6E,WAAAjG,QACAgqB,EAAA6H,EAAAzwB,EACAs0C,GAFA7jB,GAIA6jB,EAAA1rB,GAAA,SAAA5oB,GACA,MAAA6E,WAAAjG,QACAgqB,EAAA5oB,EACAs0C,GAFA1rB,GAIA0rB,EAAA7jB,GAAA,SAAAzwB,GACA,MAAA6E,WAAAjG,QACA6xB,EAAAzwB,EACAs0C,GAFA7jB,GAIA6jB,EAAAjC,QAAA,SAAAryC,GACA,MAAA6E,WAAAjG,QACAyzC,EAAAryC,EACAs0C,GAFAjC,GAIAiC,EAAAnqB,YAAA,SAAAnqB,GACA,MAAA6E,WAAAjG,QACA2zC,EAAA,kBAAAvyC,GAAAmqB,EAAAnqB,GAAoEmqB,EAAAqoB,GAAAxnC,IAAAhL,IAAAsyC,IAAAjqC,IACpEmsC,EAAArqB,EAAArN,SAAAqN,EACAnK,EAAAmK,EAAAlE,OAAA,QACAquB,GAJA/B,GAMA+B,EAAAlC,QAAA,SAAApyC,GACA,MAAA6E,WAAAjG,QACAwzC,EAAApyC,EACAs0C,GAFAlC,GAIAkC,EAqEA,QAAAQ,IAAA/sC,GACA,MAAAA,GAAA0mB,OAgCA,QAAAsmB,IAAAhtC,GACA,OAAAA,EAAAjF,EAAAiF,EAAAhF,GASA,QAAAiyC,IAAA3e,GACA,kBACA,GAAAtuB,GAAAsuB,EAAAxsB,MAAApB,KAAA5D,WAAA6R,EAAA3O,EAAA,GAAAd,EAAAc,EAAA,GAAAoN,EACA,QAAAuB,EAAA7U,KAAA+U,IAAA3P,GAAAyP,EAAA7U,KAAA6T,IAAAzO,KAoBA,QAAAguC,MACA,UAEA,QAAAC,MACA,eAEA,QAAAC,IAAA9rC,GACA,GAAAqN,GAAA7U,KAAAyV,KAAAjO,EAAA2L,GACA,aAAA0B,EAAA,IAAAA,EAAA,IAAAA,EAAA,aAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,YAAAA,EAAA,IA+CA,QAAA0+B,IAAA9nC,GACA,kBACA,GAAA+nC,GAAAC,EAAAC,GACAF,EAAA5sC,KAAA6E,MAAAioC,EAAAF,EAAAC,EAAAD,EAAAE,WACAA,EAAA36B,MAAAxM,EAAA,KACAmnC,EAAA36B,MAAAC,EAAA1T,MACAkuC,EAAAG,YAAAH,GAAAC,SAAgD7sC,MAAA6E,GAChD+nC,EAAAE,QAAA,GACAA,EAAA9qC,OAAA8qC,EAAA9qC,MAAAgrC,UAAA7jC,KAAAnJ,UAAA0H,SAAAolC,EAAArS,SAIA,QAAAwS,IAAAzpC,EAAAqB,EAAAqoC,GAIA,MAHAzpC,IAAAD,EAAA2pC,IACA3pC,EAAAsD,UAAAjC,EACArB,EAAA0pC,KACA1pC,EAoEA,QAAA4pC,IAAA5pC,EAAAhN,EAAAmG,EAAA0wC,GACA,GAAAH,GAAA1pC,EAAA0pC,GAAAroC,EAAArB,EAAAsD,SACA,OAAAiB,GAAAvE,EAAA,kBAAA7G,GAAA,SAAA/D,EAAAqD,EAAAgM,GACArP,EAAAiM,GAAAqoC,GAAAG,MAAA1qC,IAAAnM,EAAA62C,EAAA1wC,EAAAwM,KAAAvQ,IAAA8O,SAAAzL,EAAAgM,OACKtL,EAAA0wC,EAAA1wC,GAAA,SAAA/D,GACLA,EAAAiM,GAAAqoC,GAAAG,MAAA1qC,IAAAnM,EAAAmG,MAqFA,QAAA2wC,IAAA7uC,GAEA,MADA,OAAAA,MAAA,IACA,WACAuB,KAAAutC,YAAA9uC,GA6EA,QAAA+uC,IAAAh3C,GACA,aAAAA,EAAA,iCAAAA,EAAA,KAEA,QAAAi3C,IAAA70C,EAAAqD,EAAA4I,EAAAqoC,EAAAQ,GAKA,QAAAC,GAAAC,GACA,GAAA57B,GAAAva,EAAAua,KAEA,IADAG,EAAAC,EAAAJ,EAAApV,EACAoV,GAAA47B,EAAA,MAAA/wC,GAAA+wC,EAAA57B,EACAG,GAAAxM,EAAA9I,EAEA,QAAAA,GAAA+wC,GACA,GAAAf,GAAAD,EAAAE,SAAAF,EAAAC,EACAC,KACAA,EAAA36B,MAAAxM,EAAA,KACAmnC,EAAA36B,MAAAC,EAAA1T,MACAkuC,EAAAG,YACAH,GAAAC,GACAC,EAAA9qC,OAAA8qC,EAAA9qC,MAAAgrC,UAAA7jC,KAAAvQ,IAAA8O,SAAAolC,EAAArS,OAEA,QAAAoT,KAAAjB,GACA,IAAAiB,EAAAX,EAAA,CACA,GAAAY,GAAAlB,EAAAiB,EACAC,GAAA37B,MAAAxM,EAAA,KACAmoC,EAAA37B,MAAAC,EAAA1T,MACAkuC,EAAAG,YACAH,GAAAiB,GAGA17B,EAAAxM,EAAAooC,EACAh8B,GAAA,WAKA,MAJAI,GAAAxM,GAAAooC,EAAAH,GAAA,KACAz7B,EAAAxM,EAAA,KACAwM,EAAAC,EAAA1T,KAEA,GACO,EAAA9B,GACPgwC,EAAAE,OAAAI,EACAz1C,EAAAuK,OAAAvK,EAAAuK,MAAAnF,MAAAsM,KAAAvQ,IAAA8O,SAAAzL,GACA+xC,KACAv2C,EAAA41C,MAAA30C,QAAA,SAAAkH,EAAAjD,IACAA,IAAAwM,KAAAvQ,IAAA8O,SAAAzL,KACA+xC,EAAAnyC,KAAAc,KAGAsxC,EAAAx2C,EAAAw2C,KACAC,EAAAz2C,EAAAy2C,SAEA,QAAAH,GAAAH,GAEA,IADA,GAAAx7B,GAAAw7B,EAAAM,EAAA73C,EAAA43C,EAAA77B,GAAA3Q,EAAAusC,EAAA73C,OACAsL,EAAA,GACAusC,IAAAvsC,GAAA0H,KAAAvQ,EAAAvC,EAEA,IAAA+b,GAAA,EAGA,MAFA3a,GAAAuK,OAAAvK,EAAAuK,MAAAi0B,IAAA9sB,KAAAvQ,IAAA8O,SAAAzL,KACA2wC,EAAAG,YAAAH,GAAAM,SAA0Ct0C,GAAAiM,GAC1C,EAvDA,GAGKjI,GAAAuV,EAAA+7B,EAAAD,EAAAD,EAHLpB,EAAAh0C,EAAAiM,KAAAjM,EAAAiM,IACAioC,OAAA,EACAC,MAAA,IACKt1C,EAAAm1C,EAAAM,EAuDLz1C,KACAmF,EAAA8wC,EAAA9wC,KACAuV,EAAAJ,GAAA47B,EAAA,EAAA/wC,GACAnF,EAAAm1C,EAAAM,IACAG,MAAA,GAAAttC,GACAnD,OACAuV,QACAH,MAAA07B,EAAA17B,MACAk8B,SAAAR,EAAAQ,SACAD,KAAAP,EAAAO,KACAxT,MAAAx+B,GAEAyxC,EAAA,OACAd,EAAAG,OAoGA,QAAAoB,IAAA92C,EAAAgpB,EAAA0H,GACA1wB,EAAAL,KAAA,qBAAAsI,GACA,GAAA8mB,GAAA/F,EAAA/gB,EACA,qBAAAwT,SAAAsT,KAAA2B,EAAAzoB,IAAA,QAGA,QAAA8uC,IAAA/2C,EAAA8oB,EAAA6H,GACA3wB,EAAAL,KAAA,qBAAAsI,GACA,GAAA8mB,GAAAjG,EAAA7gB,EACA,uBAAAwT,SAAAsT,KAAA4B,EAAA1oB,IAAA,MAySA,QAAA+uC,IAAAn4B,GACA,MAAAA,GAAAo4B,cA8CA,QAAAC,IAAArJ,EAAAsJ,EAAAp/B,GACA,QAAAmE,GAAAlZ,GACA,MAAA6qC,GAAA7qC,GAUA,QAAAo0C,GAAA7Y,EAAAmX,GACA,GAAAjH,GAAAlQ,EAAA,GAAAA,EAAA,GAAA30B,EAAA6kC,EAAAiH,EAAA9wC,EAAA2B,GAAAknC,OAAA4J,GAAAztC,EACA,OAAAhF,IAAAyyC,GAAAv4C,QAAAq4C,EAAAG,KAAA9I,GAAAjQ,EAAAj8B,IAAA,SAAA2F,GACA,MAAAA,GAAA,UACOytC,GAAA,IAAA9wC,EAAAuyC,EAAAvtC,EAAAytC,GAAAzyC,EAAA,GAAAyyC,GAAAzyC,GAAAgF,EAAAhF,EAAA,EAAAA,IAAA2yC,GAAA/I,GAAAjQ,EAAAmX,GAAA,IAgCP,MA5CAx5B,GAAA8N,OAAA,SAAAhnB,GACA,MAAAw0C,IAAA3J,EAAA7jB,OAAAhnB,KAEAkZ,EAAA2wB,OAAA,SAAA7pC,GACA,MAAA+B,WAAAjG,QACA+uC,EAAAhB,OAAA7pC,GACAkZ,GAFA2xB,EAAAhB,SAAAvqC,IAAAk1C,KAUAt7B,EAAAkxB,KAAA,SAAAqK,EAAAC,GAGA,QAAAC,GAAA94B,GACA,OAAArX,MAAAqX,KAAA44B,EAAA5zC,MAAAgb,EAAA24B,IAAA34B,EAAA,GAAA64B,GAAA54C,OAHA,GAAA+tC,GAAA3wB,EAAA2wB,SAAAtO,EAAAqO,GAAAC,GAAA/iC,EAAA,MAAA2tC,EAAAL,EAAA7Y,EAAA,oBAAAkZ,IAAAL,EAAA7Y,EAAAkZ,EAKA,OAJA3tC,KAAA2tC,EAAA3tC,EAAA,GAAA4tC,EAAA5tC,EAAA,IAIAoS,EAAA2wB,OAAAM,GAAAN,EAAA6K,EAAA,GACAr4B,MAAA,SAAAR,GACA,KAAA84B,EAAA94B,EAAA44B,EAAAp4B,MAAAR,OAAA24B,GAAA34B,EAAA,EACA,OAAAA,IAEA9C,KAAA,SAAA8C,GACA,KAAA84B,EAAA94B,EAAA44B,EAAA17B,KAAA8C,OAAA24B,IAAA34B,EAAA,EACA,OAAAA,KAEO44B,KAEPv7B,EAAA+xB,MAAA,SAAAwJ,EAAAC,GACA,GAAAnZ,GAAAqO,GAAA1wB,EAAA2wB,UAAA/iC,EAAA,MAAA2tC,EAAAL,EAAA7Y,EAAA,oBAAAkZ,GAAAL,EAAA7Y,EAAAkZ,MAAA5zC,SACAA,MAAA4zC,GACOC,EAEP,OADA5tC,KAAA2tC,EAAA3tC,EAAA,GAAA4tC,EAAA5tC,EAAA,IACA2tC,EAAA5zC,MAAA06B,EAAA,GAAAiZ,IAAAjZ,EAAA,MAAAmZ,EAAA,IAAAA,IAEAx7B,EAAAiyB,WAAA,WACA,MAAAp2B,IAEAmE,EAAAoyB,KAAA,WACA,MAAA4I,IAAArJ,EAAAS,OAAA6I,EAAAp/B,IAEAw2B,GAAAryB,EAAA2xB,GAEA,QAAA2J,IAAAz8B,GACA,UAAAF,MAAAE,GA0DA,QAAA68B,IAAA3+B,GACA,MAAA4+B,MAAA/3B,MAAA7G,EAAAwB,cAKA,QAAAq9B,IAAA7+B,GACA,GAAApV,GAAAk0C,GAAAC,aAEA,OADAn0C,GAAAo0C,WAAAF,GAAAG,MACAr0C,EAAAs0C,yBAAAl/B,EAAAwB,cA10SA,GAAAlU,KACA6xC,QAAA,UAEAC,MAAApvC,MAAA4I,GAAA,SAAAymC,GACA,MAAAD,IAAAvmC,KAAAwmC,IAEAP,GAAApvC,KAAA7B,QAOA,IAAAixC,GACA,IACAlmC,GAAAkmC,GAAAhxC,gBAAAwxC,YAAA,GAAAC,SACK,MAAAx5C,GACL6S,GAAA,SAAAymC,GAEA,IADA,GAAA1zC,GAAA0zC,EAAAx5C,OAAAosB,EAAA,GAAA3M,OAAA3Z,GACAA,KAAAsmB,EAAAtmB,GAAA0zC,EAAA1zC,EACA,OAAAsmB,IAOA,GAHArQ,KAAApV,MAAAoV,KAAApV,IAAA,WACA,UAAAoV,QAEAk9B,GACA,IACAA,GAAAnoC,cAAA,OAAAb,MAAAG,YAAA,gBACK,MAAAkK,GACL,GAAAq/B,IAAA9vC,KAAA+vC,QAAAlwC,UAAAmwC,GAAAF,GAAAtrC,aAAAyrC,GAAAH,GAAAprC,eAAAwrC,GAAAlwC,KAAAmwC,oBAAAtwC,UAAAuwC,GAAAF,GAAA3pC,WACAupC,IAAAtrC,aAAA,SAAAhO,EAAAmG,GACAqzC,GAAA7mC,KAAAnJ,KAAAxJ,EAAAmG,EAAA,KAEAmzC,GAAAprC,eAAA,SAAAL,EAAAC,EAAA3H,GACAszC,GAAA9mC,KAAAnJ,KAAAqE,EAAAC,EAAA3H,EAAA,KAEAuzC,GAAA3pC,YAAA,SAAA/P,EAAAmG,EAAAuJ,GACAkqC,GAAAjnC,KAAAnJ,KAAAxJ,EAAAmG,EAAA,GAAAuJ,IAIAtI,GAAAyyC,UAAA9xC,EAIAX,GAAA0yC,WAAA,SAAA9xC,EAAAC,GACA,MAAAA,GAAAD,GAAA,EAAAC,EAAAD,EAAA,EAAAC,GAAAD,EAAA,EAAAE,KAEAd,GAAApC,IAAA,SAAA+mB,EAAA/W,GACA,GAAAhN,GAAAC,EAAAxC,GAAA,EAAAwF,EAAA8gB,EAAApsB,MACA,QAAAiG,UAAAjG,OAAA,CACA,OAAA8F,EAAAwF,GAAA,UAAAhD,EAAA8jB,EAAAtmB,KAAAwC,KAAA,CACAD,EAAAC,CACA,OAEA,OAAAxC,EAAAwF,GAAA,OAAAhD,EAAA8jB,EAAAtmB,KAAAuC,EAAAC,IAAAD,EAAAC,OACK,CACL,OAAAxC,EAAAwF,GAAA,UAAAhD,EAAA+M,EAAArC,KAAAoZ,IAAAtmB,QAAAwC,KAAA,CACAD,EAAAC,CACA,OAEA,OAAAxC,EAAAwF,GAAA,OAAAhD,EAAA+M,EAAArC,KAAAoZ,IAAAtmB,QAAAuC,EAAAC,IAAAD,EAAAC,GAEA,MAAAD,IAEAZ,GAAAvE,IAAA,SAAAkpB,EAAA/W,GACA,GAAAhN,GAAAC,EAAAxC,GAAA,EAAAwF,EAAA8gB,EAAApsB,MACA,QAAAiG,UAAAjG,OAAA,CACA,OAAA8F,EAAAwF,GAAA,UAAAhD,EAAA8jB,EAAAtmB,KAAAwC,KAAA,CACAD,EAAAC,CACA,OAEA,OAAAxC,EAAAwF,GAAA,OAAAhD,EAAA8jB,EAAAtmB,KAAAwC,EAAAD,MAAAC,OACK,CACL,OAAAxC,EAAAwF,GAAA,UAAAhD,EAAA+M,EAAArC,KAAAoZ,IAAAtmB,QAAAwC,KAAA,CACAD,EAAAC,CACA,OAEA,OAAAxC,EAAAwF,GAAA,OAAAhD,EAAA+M,EAAArC,KAAAoZ,IAAAtmB,QAAAwC,EAAAD,MAAAC,GAEA,MAAAD,IAEAZ,GAAAg4B,OAAA,SAAArT,EAAA/W,GACA,GAAAhN,GAAAC,EAAAkH,EAAA1J,GAAA,EAAAwF,EAAA8gB,EAAApsB,MACA,QAAAiG,UAAAjG,OAAA,CACA,OAAA8F,EAAAwF,GAAA,UAAAhD,EAAA8jB,EAAAtmB,KAAAwC,KAAA,CACAD,EAAAmH,EAAAlH,CACA,OAEA,OAAAxC,EAAAwF,GAAA,OAAAhD,EAAA8jB,EAAAtmB,MACAuC,EAAAC,IAAAD,EAAAC,GACAkH,EAAAlH,IAAAkH,EAAAlH,QAEK,CACL,OAAAxC,EAAAwF,GAAA,UAAAhD,EAAA+M,EAAArC,KAAAoZ,IAAAtmB,QAAAwC,KAAA,CACAD,EAAAmH,EAAAlH,CACA,OAEA,OAAAxC,EAAAwF,GAAA,OAAAhD,EAAA+M,EAAArC,KAAAoZ,IAAAtmB,SACAuC,EAAAC,IAAAD,EAAAC,GACAkH,EAAAlH,IAAAkH,EAAAlH,IAGA,OAAAD,EAAAmH,IAQA/H,GAAA2yC,IAAA,SAAAhuB,EAAA/W,GACA,GAAAhN,GAAAuE,EAAA,EAAAtB,EAAA8gB,EAAApsB,OAAA8F,GAAA,CACA,QAAAG,UAAAjG,OACA,OAAA8F,EAAAwF,GAAA7C,EAAAJ,GAAA+jB,EAAAtmB,MAAA8G,GAAAvE,OAEA,QAAAvC,EAAAwF,GAAA7C,EAAAJ,GAAAgN,EAAArC,KAAAoZ,IAAAtmB,SAAA8G,GAAAvE,EAEA,OAAAuE,IAEAnF,GAAA4yC,KAAA,SAAAjuB,EAAA/W,GACA,GAAAhN,GAAAuE,EAAA,EAAAtB,EAAA8gB,EAAApsB,OAAA8F,GAAA,EAAAgM,EAAAxG,CACA,QAAArF,UAAAjG,OACA,OAAA8F,EAAAwF,GAAA7C,EAAAJ,EAAAG,EAAA4jB,EAAAtmB,KAAA8G,GAAAvE,IAAsEyJ,MAEtE,QAAAhM,EAAAwF,GAAA7C,EAAAJ,EAAAG,EAAA6M,EAAArC,KAAAoZ,IAAAtmB,QAAA8G,GAAAvE,IAAwFyJ,CAExF,IAAAA,EAAA,MAAAlF,GAAAkF,GAEArK,GAAA6pC,SAAA,SAAApG,EAAAluB,GACA,GAAAiE,IAAAiqB,EAAAlrC,OAAA,GAAAgd,EAAA,EAAAzY,EAAAtB,KAAAsd,MAAAU,GAAAnhB,GAAAorC,EAAA3mC,EAAA,GAAArE,EAAA+gB,EAAA1c,CACA,OAAArE,GAAAJ,EAAAI,GAAAgrC,EAAA3mC,GAAAzE,MAEA2H,GAAA6yC,OAAA,SAAAluB,EAAA/W,GACA,GAAAhN,GAAAkyC,KAAAjvC,EAAA8gB,EAAApsB,OAAA8F,GAAA,CACA,QAAAG,UAAAjG,OACA,OAAA8F,EAAAwF,GAAA7C,EAAAJ,EAAAG,EAAA4jB,EAAAtmB,MAAAy0C,EAAA70C,KAAA2C,OAEA,QAAAvC,EAAAwF,GAAA7C,EAAAJ,EAAAG,EAAA6M,EAAArC,KAAAoZ,IAAAtmB,SAAAy0C,EAAA70C,KAAA2C,EAEA,IAAAkyC,EAAAv6C,OAAA,MAAAyH,IAAA6pC,SAAAiJ,EAAAzuB,KAAA1jB,GAAA,KAEAX,GAAA+yC,SAAA,SAAApuB,EAAA/W,GACA,GAAAhN,GAAAc,EAAAmC,EAAA8gB,EAAApsB,OAAA+R,EAAA,EAAAnF,EAAA,EAAA9G,GAAA,EAAAgM,EAAA,CACA,QAAA7L,UAAAjG,OACA,OAAA8F,EAAAwF,GACA7C,EAAAJ,EAAAG,EAAA4jB,EAAAtmB,OACAqD,EAAAd,EAAA0J,EACAA,GAAA5I,IAAA2I,EACAlF,GAAAzD,GAAAd,EAAA0J,QAIA,QAAAjM,EAAAwF,GACA7C,EAAAJ,EAAAG,EAAA6M,EAAArC,KAAAoZ,IAAAtmB,UACAqD,EAAAd,EAAA0J,EACAA,GAAA5I,IAAA2I,EACAlF,GAAAzD,GAAAd,EAAA0J,GAIA,IAAAD,EAAA,QAAAlF,IAAAkF,EAAA,IAEArK,GAAAgzC,UAAA,WACA,GAAA36C,GAAA2H,GAAA+yC,SAAAvvC,MAAApB,KAAA5D,UACA,OAAAnG,GAAAmD,KAAAyV,KAAA5Y,KAwBA,IAAA46C,IAAA/xC,EAAAP,EACAX,IAAAkzC,WAAAD,GAAA7xC,KACApB,GAAAknC,OAAAlnC,GAAAmzC,YAAAF,GAAAzxC,MACAxB,GAAAozC,SAAA,SAAAxlC,GACA,MAAA1M,GAAA,IAAA0M,EAAArV,OAAA,SAAAmJ,EAAAjF,GACA,MAAAkE,GAAAiN,EAAAlM,GAAAjF,IACKmR,IAEL5N,GAAAqzC,QAAA,SAAA1uB,EAAA/Z,EAAAk8B,IACAx8B,EAAA9L,UAAAjG,QAAA,IACAuuC,EAAAniB,EAAApsB,OACA+R,EAAA,IAAAM,EAAA,GAGA,KADA,GAAA4J,GAAAnW,EAAAiM,EAAAw8B,EAAAl8B,EACAN,GACAjM,EAAA7C,KAAA0mC,SAAA53B,IAAA,EACAkK,EAAAmQ,EAAAra,EAAAM,GAAA+Z,EAAAra,EAAAM,GAAA+Z,EAAAtmB,EAAAuM,GAAA+Z,EAAAtmB,EAAAuM,GAAA4J,CAEA,OAAAmQ,IAEA3kB,GAAAszC,QAAA,SAAA3uB,EAAA4uB,GAEA,IADA,GAAAl1C,GAAAk1C,EAAAh7C,OAAAi7C,EAAA,GAAAx7B,OAAA3Z,GACAA,KAAAm1C,EAAAn1C,GAAAsmB,EAAA4uB,EAAAl1C,GACA,OAAAm1C,IAEAxzC,GAAAyzC,MAAA,SAAA9uB,GAEA,IADA,GAAAtmB,GAAA,EAAAwF,EAAA8gB,EAAApsB,OAAA,EAAA4rB,EAAAQ,EAAA,GAAA8uB,EAAA,GAAAz7B,OAAAnU,EAAA,IAAAA,GACAxF,EAAAwF,GAAA4vC,EAAAp1C,IAAA8lB,IAAAQ,IAAAtmB,GACA,OAAAo1C,IAEAzzC,GAAA0zC,UAAA,SAAAC,GACA,KAAA9vC,EAAA8vC,EAAAp7C,QAAA,QACA,QAAA8F,IAAA,EAAAiM,EAAAtK,GAAApC,IAAA+1C,EAAAlyC,GAAAiyC,EAAA,GAAA17B,OAAA1N,KAAsFjM,EAAAiM,GACtF,OAAAzG,GAAAwG,GAAA,EAAAupC,EAAAF,EAAAr1C,GAAA,GAAA2Z,OAAAnU,KAA4DwG,EAAAxG,GAC5D+vC,EAAAvpC,GAAAspC,EAAAtpC,GAAAhM,EAGA,OAAAq1C,IAKA1zC,GAAA6zC,IAAA,WACA,MAAA7zC,IAAA0zC,UAAAl1C,YAEAwB,GAAA8C,KAAA,SAAA/G,GACA,GAAA+G,KACA,QAAAd,KAAAjG,GAAA+G,EAAA7E,KAAA+D,EACA,OAAAc,IAEA9C,GAAAyjC,OAAA,SAAA1nC,GACA,GAAA0nC,KACA,QAAAzhC,KAAAjG,GAAA0nC,EAAAxlC,KAAAlC,EAAAiG,GACA,OAAAyhC,IAEAzjC,GAAA8zC,QAAA,SAAA/3C,GACA,GAAA+3C,KACA,QAAA9xC,KAAAjG,GAAA+3C,EAAA71C,MACA+D,MACAjD,MAAAhD,EAAAiG,IAEA,OAAA8xC,IAEA9zC,GAAAkmB,MAAA,SAAA6tB,GAEA,IADA,GAAAzpC,GAAA0pC,EAAArvB,EAAA9gB,EAAAkwC,EAAAx7C,OAAA8F,GAAA,EAAAgM,EAAA,IACAhM,EAAAwF,GAAAwG,GAAA0pC,EAAA11C,GAAA9F,MAEA,KADAy7C,EAAA,GAAAh8B,OAAA3N,KACAxG,GAAA,GAGA,IAFA8gB,EAAAovB,EAAAlwC,GACAyG,EAAAqa,EAAApsB,SACA+R,GAAA,GACA0pC,IAAA3pC,GAAAsa,EAAAra,EAGA,OAAA0pC,GAEA,IAAA72C,IAAA3B,KAAA2B,GACA6C,IAAA1C,MAAA,SAAA2B,EAAAsnC,EAAAnuB,GAQA,GAPA5Z,UAAAjG,OAAA,IACA6f,EAAA,EACA5Z,UAAAjG,OAAA,IACAguC,EAAAtnC,EACAA,EAAA,KAGAsnC,EAAAtnC,GAAAmZ,GAAA/C,IAAA,SAAArY,OAAA,iBACA,IAAAqN,GAAA/M,KAAAsE,EAAAD,EAAAxE,GAAAib,IAAA/Z,GAAA,CAEA,IADAY,GAAA2C,EAAA2kC,GAAA3kC,EAAAwW,GAAAxW,EACAwW,EAAA,QAAA/N,EAAApL,EAAAmZ,IAAA/Z,GAAAkoC,GAAAjpC,EAAAW,KAAAoM,EAAAzI,OAA4E,OAAAyI,EAAApL,EAAAmZ,IAAA/Z,GAAAkoC,GAAAjpC,EAAAW,KAAAoM,EAAAzI,EAC5E,OAAAtE,IAeA0C,GAAAjE,IAAA,SAAA2H,EAAAkK,GACA,GAAA7R,GAAA,GAAAoG,EACA,IAAAuB,YAAAvB,GACAuB,EAAA5I,QAAA,SAAAkH,EAAAjD,GACAhD,EAAAgJ,IAAA/C,EAAAjD,SAEK,IAAAiZ,MAAAi8B,QAAAvwC,GAAA,CACL,GAAAqI,GAAA1N,GAAA,EAAAwF,EAAAH,EAAAnL,MACA,QAAAiG,UAAAjG,OAAA,OAAA8F,EAAAwF,GAAA9H,EAAAgJ,IAAA1G,EAAAqF,EAAArF,QAAwE,QAAAA,EAAAwF,GAAA9H,EAAAgJ,IAAA6I,EAAArC,KAAA7H,EAAAqI,EAAArI,EAAArF,MAAA0N,OAExE,QAAA/J,KAAA0B,GAAA3H,EAAAgJ,IAAA/C,EAAA0B,EAAA1B,GAEA,OAAAjG,GAKA,IAAAwG,IAAA,YAAAC,GAAA,IACAX,GAAAM,GACAtE,IAAA8E,EACAgC,IAAA,SAAA3C,GACA,MAAAI,MAAAzI,EAAA2I,EAAAN,KAEA+C,IAAA,SAAA/C,EAAAjD,GACA,MAAAqD,MAAAzI,EAAA2I,EAAAN,IAAAjD,GAEA+F,OAAAlC,EACAE,KAAAD,EACA4gC,OAAA,WACA,GAAAA,KACA,QAAAzhC,KAAAI,MAAAzI,EAAA8pC,EAAAxlC,KAAAmE,KAAAzI,EAAAqI,GACA,OAAAyhC,IAEAqQ,QAAA,WACA,GAAAA,KACA,QAAA9xC,KAAAI,MAAAzI,EAAAm6C,EAAA71C,MACA+D,IAAAS,EAAAT,GACAjD,MAAAqD,KAAAzI,EAAAqI,IAEA,OAAA8xC,IAEA9wC,KAAAD,EACAmxC,MAAAjxC,EACAnI,QAAA,SAAA8S,GACA,OAAA5L,KAAAI,MAAAzI,EAAAiU,EAAArC,KAAAnJ,KAAAK,EAAAT,GAAAI,KAAAzI,EAAAqI,OA6BAhC,GAAAm0C,KAAA,WAEA,QAAAp4C,GAAAq4C,EAAAzvB,EAAAsK,GACA,GAAAA,GAAAnsB,EAAAvK,OAAA,MAAA87C,KAAA9oC,KAAA4oC,EAAAxvB,GAAA2vB,EAAA3vB,EAAAN,KAAAiwB,GAAA3vB,CAEA,KADA,GAAA4vB,GAAA7wC,EAAA8wC,EAAA/Q,EAAAplC,GAAA,EAAAwF,EAAA8gB,EAAApsB,OAAAyJ,EAAAc,EAAAmsB,KAAAwlB,EAAA,GAAAtyC,KACA9D,EAAAwF,IACA4/B,EAAAgR,EAAA9vC,IAAA4vC,EAAAvyC,EAAA0B,EAAAihB,EAAAtmB,MACAolC,EAAAxlC,KAAAyF,GAEA+wC,EAAA1vC,IAAAwvC,GAAA7wC,GAeA,OAZA0wC,IACA1wC,EAAA0wC,IACAI,EAAA,SAAAD,EAAA9Q,GACA//B,EAAAqB,IAAAwvC,EAAAx4C,EAAAq4C,EAAA3Q,EAAAxU,OAGAvrB,KACA8wC,EAAA,SAAAD,EAAA9Q,GACA//B,EAAA6wC,GAAAx4C,EAAAq4C,EAAA3Q,EAAAxU,KAGAwlB,EAAA35C,QAAA05C,GACA9wC,EAEA,QAAAowC,GAAA/3C,EAAAkzB,GACA,GAAAA,GAAAnsB,EAAAvK,OAAA,MAAAwD,EACA,IAAA4oB,MAAA+vB,EAAAC,EAAA1lB,IAOA,OANAlzB,GAAAjB,QAAA,SAAAkH,EAAA4yC,GACAjwB,EAAA1mB,MACA+D,MACAyhC,OAAAqQ,EAAAc,EAAA3lB,OAGAylB,EAAA/vB,EAAAN,KAAA,SAAAzjB,EAAAC,GACA,MAAA6zC,GAAA9zC,EAAAoB,IAAAnB,EAAAmB,OACO2iB,EApCP,GAAiB2vB,GAAAD,EAAjBF,KAAiBrxC,KAAA6xC,IA4DjB,OAtBAR,GAAAp4C,IAAA,SAAA4oB,EAAAyvB,GACA,MAAAr4C,GAAAq4C,EAAAzvB,EAAA,IAEAwvB,EAAAL,QAAA,SAAAnvB,GACA,MAAAmvB,GAAA/3C,EAAAiE,GAAAjE,IAAA4oB,EAAA,OAEAwvB,EAAAnyC,IAAA,SAAAN,GAEA,MADAoB,GAAA7E,KAAAyD,GACAyyC,GAEAA,EAAAQ,SAAA,SAAAj3C,GAEA,MADAi3C,GAAA7xC,EAAAvK,OAAA,GAAAmF,EACAy2C,GAEAA,EAAAG,WAAA,SAAA52C,GAEA,MADA42C,GAAA52C,EACAy2C,GAEAA,EAAAE,OAAA,SAAAzmC,GAEA,MADAymC,GAAAzmC,EACAumC,GAEAA,GAEAn0C,GAAA+E,IAAA,SAAA4f,GACA,GAAA5f,GAAA,GAAA7B,EACA,IAAAyhB,EAAA,OAAAtmB,GAAA,EAAAwF,EAAA8gB,EAAApsB,OAAgD8F,EAAAwF,IAAOxF,EAAA0G,EAAAkD,IAAA0c,EAAAtmB,GACvD,OAAA0G,IAKAlD,EAAAqB,GACArF,IAAA8E,EACAsF,IAAA,SAAAjG,GAEA,MADAI,MAAAzI,EAAA2I,EAAAN,GAAA,QACAA,GAEA8C,OAAAlC,EACA6gC,OAAA5gC,EACAG,KAAAD,EACAmxC,MAAAjxC,EACAnI,QAAA,SAAA8S,GACA,OAAA5L,KAAAI,MAAAzI,EAAAiU,EAAArC,KAAAnJ,KAAAK,EAAAT,OAGAhC,GAAA60C,YAIA70C,GAAAgU,OAAA,SAAA3Q,EAAAC,GAEA,IADA,GAAAC,GAAAlF,EAAA,EAAAwF,EAAArF,UAAAjG,SACA8F,EAAAwF,GAAAR,EAAAE,EAAA/E,UAAAH,IAAA+E,EAAAC,EAAAC,IAAAC,GACA,OAAAF,GAgBA,IAAAS,KAAA,kCAEA9D,IAAAmE,SAAA,WAEA,IADA,GAAAA,GAAA,GAAAF,GAAA5F,GAAA,EAAAwF,EAAArF,UAAAjG,SACA8F,EAAAwF,GAAAM,EAAA3F,UAAAH,IAAA6F,EAAAC,EACA,OAAAA,IAGAF,EAAAhC,UAAAuC,GAAA,SAAAvK,EAAAyK,GACA,GAAArG,GAAApE,EAAA2K,QAAA,KAAAhM,EAAA,EAKA,IAJAyF,GAAA,IACAzF,EAAAqB,EAAAyI,MAAArE,EAAA,GACApE,IAAAyI,MAAA,EAAArE,IAEApE,EAAA,MAAAuE,WAAAjG,OAAA,EAAA6J,KAAAnI,GAAAuK,GAAA5L,GAAAwJ,KAAAnI,GAAAuK,GAAA5L,EAAA8L,EACA,QAAAlG,UAAAjG,OAAA,CACA,SAAAmM,EAAA,IAAAzK,IAAAmI,MACAA,KAAAqd,eAAAxlB,IAAAmI,KAAAnI,GAAAuK,GAAA5L,EAAA,KAEA,OAAAwJ,QAyBApC,GAAAoE,MAAA,KA0BApE,GAAAuH,QAAA,SAAApC,GACA,MAAAA,GAAApM,QAAA+7C,GAAA,QAEA,IAAAA,IAAA,kCACAjvC,MAAsBkvC,UAAA,SAAArxC,EAAAzB,GACtByB,EAAAqxC,UAAA9yC,GACG,SAAAyB,EAAAzB,GACH,OAAA+yC,KAAA/yC,GAAAyB,EAAAsxC,GAAA/yC,EAAA+yC,IAMA/uC,GAAA,SAAAd,EAAAtB,GACA,MAAAA,GAAAoxC,cAAA9vC,IACGgB,GAAA,SAAAhB,EAAAtB,GACH,MAAAA,GAAAqxC,iBAAA/vC,IACG6E,GAAA,SAAAnG,EAAAsB,GACH,GAAAgwC,GAAAtxC,EAAAuxC,SAAAvxC,EAAAJ,EAAAI,EAAA,mBAIA,QAHAmG,GAAA,SAAAnG,EAAAsB,GACA,MAAAgwC,GAAA5pC,KAAA1H,EAAAsB,KAEAtB,EAAAsB,GAEA,mBAAAkwC,UACApvC,GAAA,SAAAd,EAAAtB,GACA,MAAAwxC,QAAAlwC,EAAAtB,GAAA,UAEAsC,GAAAkvC,OACArrC,GAAAqrC,OAAAC,iBAEAt1C,GAAAvG,UAAA,WACA,MAAAuG,IAAAsM,OAAAklC,GAAAhxC,iBAEA,IAAAsF,IAAA9F,GAAAvG,UAAAwI,YACA6D,IAAAwG,OAAA,SAAAtG,GACA,GAAAuvC,GAAAC,EAAAjrC,EAAAvP,EAAAy6C,IACAzvC,GAAAD,EAAAC,EACA,QAAAqE,IAAA,EAAAC,EAAAlI,KAAA7J,SAAqC8R,EAAAC,GAAS,CAC9CmrC,EAAAx3C,KAAAs3C,MACAA,EAAA7rC,YAAAa,EAAAnI,KAAAiI,IAAAX,UACA,QAAArL,IAAA,EAAAwF,EAAA0G,EAAAhS,SAAwC8F,EAAAwF,IACxC7I,EAAAuP,EAAAlM,KACAk3C,EAAAt3C,KAAAu3C,EAAAxvC,EAAAuF,KAAAvQ,IAAA8O,SAAAzL,EAAAgM,IACAmrC,GAAA,YAAAx6C,KAAAw6C,EAAA1rC,SAAA9O,EAAA8O,WAEAyrC,EAAAt3C,KAAA,MAIA,MAAA0H,GAAA8vC,IAOA3vC,GAAA4vC,UAAA,SAAA1vC,GACA,GAAAuvC,GAAAv6C,EAAAy6C,IACAzvC,GAAAE,EAAAF,EACA,QAAAqE,IAAA,EAAAC,EAAAlI,KAAA7J,SAAqC8R,EAAAC,GACrC,OAAAC,GAAAnI,KAAAiI,GAAAhM,GAAA,EAAAwF,EAAA0G,EAAAhS,SAAyD8F,EAAAwF,IACzD7I,EAAAuP,EAAAlM,MACAo3C,EAAAx3C,KAAAs3C,EAAAjqC,GAAAtF,EAAAuF,KAAAvQ,IAAA8O,SAAAzL,EAAAgM,KACAkrC,EAAA7rC,WAAA1O,EAIA,OAAA2K,GAAA8vC,GAOA,IAAArsC,IAAA,+BACAusC,IACA7oC,IAAA,6BACA8oC,MAAAxsC,GACAysC,MAAA,+BACAC,IAAA,uCACAC,MAAA,gCAEA/1C,IAAAiH,IACA1I,OAAAo3C,GACAzuC,QAAA,SAAAtO,GACA,GAAAyF,GAAAzF,EAAAgM,QAAA,KAAArG,EAAA3F,CAEA,OADAyF,IAAA,cAAAE,EAAA3F,EAAA8J,MAAA,EAAArE,MAAAzF,IAAA8J,MAAArE,EAAA,IACAs3C,GAAAl2B,eAAAlhB,IACAkI,MAAAkvC,GAAAp3C,GACAmI,MAAA9N,GACOA,IAGPkN,GAAA1M,KAAA,SAAAR,EAAAmG,GACA,GAAAP,UAAAjG,OAAA,GACA,mBAAAK,GAAA,CACA,GAAAoC,GAAAoH,KAAApH,MAEA,OADApC,GAAAoH,GAAAiH,GAAAC,QAAAtO,GACAA,EAAA8N,MAAA1L,EAAAg7C,eAAAp9C,EAAA6N,MAAA7N,EAAA8N,OAAA1L,EAAAkN,aAAAtP,GAEA,IAAAmG,IAAAnG,GAAAwJ,KAAA6zC,KAAA7vC,EAAArH,EAAAnG,EAAAmG,IACA,OAAAqD,MAEA,MAAAA,MAAA6zC,KAAA7vC,EAAAxN,EAAAmG,KA6BA+G,GAAAowC,QAAA,SAAAt9C,EAAAmG,GACA,GAAAP,UAAAjG,OAAA,GACA,mBAAAK,GAAA,CACA,GAAAoC,GAAAoH,KAAApH,OAAA6I,GAAAjL,EAAA4O,EAAA5O,IAAAL,OAAA8F,GAAA,CACA,IAAAU,EAAA/D,EAAAgN,WACA,OAAA3J,EAAAwF,GAAA,IAAA9E,EAAAo3C,SAAAv9C,EAAAyF,IAAA,aAGA,KADAU,EAAA/D,EAAAkN,aAAA,WACA7J,EAAAwF,GAAA,IAAAwD,EAAAzO,EAAAyF,IAAA+J,KAAArJ,GAAA,QAEA,UAEA,IAAAA,IAAAnG,GAAAwJ,KAAA6zC,KAAAvuC,EAAA3I,EAAAnG,EAAAmG,IACA,OAAAqD,MAEA,MAAAA,MAAA6zC,KAAAvuC,EAAA9O,EAAAmG,KAkCA+G,GAAA0C,MAAA,SAAA5P,EAAAmG,EAAAuJ,GACA,GAAAzE,GAAArF,UAAAjG,MACA,IAAAsL,EAAA,GACA,mBAAAjL,GAAA,CACAiL,EAAA,IAAA9E,EAAA,GACA,KAAAuJ,IAAA1P,GAAAwJ,KAAA6zC,KAAA5tC,EAAAC,EAAA1P,EAAA0P,GAAAvJ,GACA,OAAAqD,MAEA,GAAAyB,EAAA,GACA,GAAA7I,GAAAoH,KAAApH,MACA,OAAAyF,GAAAzF,GAAAo7C,iBAAAp7C,EAAA,MAAAq7C,iBAAAz9C,GAEA0P,EAAA,GAEA,MAAAlG,MAAA6zC,KAAA5tC,EAAAzP,EAAAmG,EAAAuJ,KAeAxC,GAAAkvC,SAAA,SAAAp8C,EAAAmG,GACA,GAAAP,UAAAjG,OAAA,GACA,mBAAAK,GAAA,MAAAwJ,MAAApH,OAAApC,EACA,KAAAmG,IAAAnG,GAAAwJ,KAAA6zC,KAAAptC,EAAA9J,EAAAnG,EAAAmG,IACA,OAAAqD,MAEA,MAAAA,MAAA6zC,KAAAptC,EAAAjQ,EAAAmG,KAeA+G,GAAAwwC,KAAA,SAAAv3C,GACA,MAAAP,WAAAjG,OAAA6J,KAAA6zC,KAAA,kBAAAl3C,GAAA,WACA,GAAA1G,GAAA0G,EAAAyE,MAAApB,KAAA5D,UACA4D,MAAAutC,YAAA,MAAAt3C,EAAA,GAAAA,GACK,MAAA0G,EAAA,WACLqD,KAAAutC,YAAA,IACK,WACLvtC,KAAAutC,YAAA5wC,IACKqD,KAAApH,OAAA20C,aAEL7pC,GAAAywC,KAAA,SAAAx3C,GACA,MAAAP,WAAAjG,OAAA6J,KAAA6zC,KAAA,kBAAAl3C,GAAA,WACA,GAAA1G,GAAA0G,EAAAyE,MAAApB,KAAA5D,UACA4D,MAAAo0C,UAAA,MAAAn+C,EAAA,GAAAA,GACK,MAAA0G,EAAA,WACLqD,KAAAo0C,UAAA,IACK,WACLp0C,KAAAo0C,UAAAz3C,IACKqD,KAAApH,OAAAw7C,WAEL1wC,GAAAsH,OAAA,SAAAxU,GAEA,MADAA,GAAAqQ,EAAArQ,GACAwJ,KAAAkK,OAAA,WACA,MAAAlK,MAAAq0C,YAAA79C,EAAA4K,MAAApB,KAAA5D,eAaAsH,GAAAmxB,OAAA,SAAAr+B,EAAAif,GAGA,MAFAjf,GAAAqQ,EAAArQ,GACAif,EAAA9R,EAAA8R,GACAzV,KAAAkK,OAAA,WACA,MAAAlK,MAAAs0C,aAAA99C,EAAA4K,MAAApB,KAAA5D,WAAAqZ,EAAArU,MAAApB,KAAA5D,YAAA,SAGAsH,GAAAhB,OAAA,WACA,MAAA1C,MAAA6zC,KAAAzsC,IAMA1D,GAAA+D,KAAA,SAAA9K,EAAAiD,GAWA,QAAA20C,GAAApsC,EAAAqsC,GACA,GAAAv4C,GAAArD,EAAA67C,EAAAhzC,EAAA0G,EAAAhS,OAAA+R,EAAAssC,EAAAr+C,OAAA2kC,EAAA1hC,KAAAoC,IAAAiG,EAAAyG,GAAAwsC,EAAA,GAAA9+B,OAAA1N,GAAAysC,EAAA,GAAA/+B,OAAA1N,GAAA0sC,EAAA,GAAAh/B,OAAAnU,EACA,IAAA7B,EAAA,CACA,GAAAuyC,GAAA0C,EAAA,GAAA90C,GAAA+0C,EAAA,GAAAl/B,OAAAnU,EACA,KAAAxF,GAAA,IAAoBA,EAAAwF,IACpB7I,EAAAuP,EAAAlM,MACA44C,EAAAp5C,IAAA02C,EAAAvyC,EAAAuJ,KAAAvQ,IAAA8O,SAAAzL,IACA24C,EAAA34C,GAAArD,EAEAi8C,EAAAlyC,IAAAwvC,EAAAv5C,GAEAk8C,EAAA74C,GAAAk2C,EAGA,KAAAl2C,GAAA,IAAoBA,EAAAiM,IACpBtP,EAAAi8C,EAAAtyC,IAAA4vC,EAAAvyC,EAAAuJ,KAAAqrC,EAAAC,EAAAD,EAAAv4C,SAEW,IAAArD,IACX87C,EAAAz4C,GAAArD,EACAA,EAAA8O,SAAA+sC,GAHAE,EAAA14C,GAAAuL,EAAAitC,GAKAI,EAAAlyC,IAAAwvC,GAAA,EAEA,KAAAl2C,GAAA,IAAoBA,EAAAwF,GACpBxF,IAAA64C,KAAA,IAAAD,EAAAtyC,IAAAuyC,EAAA74C,MACA24C,EAAA34C,GAAAkM,EAAAlM,QAGO,CACP,IAAAA,GAAA,IAAoBA,EAAA6+B,GACpBliC,EAAAuP,EAAAlM,GACAw4C,EAAAD,EAAAv4C,GACArD,GACAA,EAAA8O,SAAA+sC,EACAC,EAAAz4C,GAAArD,GAEA+7C,EAAA14C,GAAAuL,EAAAitC,EAGA,MAAcx4C,EAAAiM,IAAMjM,EACpB04C,EAAA14C,GAAAuL,EAAAgtC,EAAAv4C,GAEA,MAAcA,EAAAwF,IAAMxF,EACpB24C,EAAA34C,GAAAkM,EAAAlM,GAGA04C,EAAAjsC,OAAAgsC,EACAC,EAAArtC,WAAAotC,EAAAptC,WAAAstC,EAAAttC,WAAAa,EAAAb,WACAiB,EAAA1M,KAAA84C,GACAjsC,EAAA7M,KAAA64C,GACAK,EAAAl5C,KAAA+4C,GA5DA,GAAAzsC,GAAAvP,EAAAqD,GAAA,EAAAwF,EAAAzB,KAAA7J,MACA,KAAAiG,UAAAjG,OAAA,CAEA,IADAwG,EAAA,GAAAiZ,OAAAnU,GAAA0G,EAAAnI,KAAA,IAAA7J,UACA8F,EAAAwF,IACA7I,EAAAuP,EAAAlM,MACAU,EAAAV,GAAArD,EAAA8O,SAGA,OAAA/K,GAsDA,GAAA4L,GAAAH,MAAAM,EAAAnF,MAAAwxC,EAAAxxC,KACA,sBAAA5G,GACA,OAAAV,EAAAwF,GACA8yC,EAAApsC,EAAAnI,KAAA/D,GAAAU,EAAAwM,KAAAhB,IAAAb,WAAAI,SAAAzL,QAGA,QAAAA,EAAAwF,GACA8yC,EAAApsC,EAAAnI,KAAA/D,GAAAU,EASA,OANA+L,GAAAH,MAAA,WACA,MAAAA,IAEAG,EAAAqsC,KAAA,WACA,MAAAA,IAEArsC,GAOAhF,GAAAsxC,MAAA,SAAAr4C,GACA,MAAAP,WAAAjG,OAAA6J,KAAA4yC,SAAA,WAAAj2C,GAAAqD,KAAA4yC,SAAA,aAEAlvC,GAAA8F,OAAA,SAAAA,GACA,GAAA2pC,GAAAhrC,EAAAvP,EAAAy6C,IACA,mBAAA7pC,OAAA7B,EAAA6B,GACA,QAAAvB,GAAA,EAAAC,EAAAlI,KAAA7J,OAAoC8R,EAAAC,EAAOD,IAAA,CAC3CorC,EAAAx3C,KAAAs3C,MACAA,EAAA7rC,YAAAa,EAAAnI,KAAAiI,IAAAX,UACA,QAAArL,GAAA,EAAAwF,EAAA0G,EAAAhS,OAAuC8F,EAAAwF,EAAOxF,KAC9CrD,EAAAuP,EAAAlM,KAAAuN,EAAAL,KAAAvQ,IAAA8O,SAAAzL,EAAAgM,IACAkrC,EAAAt3C,KAAAjD,GAIA,MAAA2K,GAAA8vC,IAOA3vC,GAAApI,MAAA,WACA,OAAA2M,IAAA,EAAAC,EAAAlI,KAAA7J,SAAqC8R,EAAAC,GACrC,OAAAtP,GAAAuP,EAAAnI,KAAAiI,GAAAhM,EAAAkM,EAAAhS,OAAA,EAAAu9B,EAAAvrB,EAAAlM,KAA4EA,GAAA,IAC5ErD,EAAAuP,EAAAlM,MACAy3B,OAAA96B,EAAAq8C,aAAAvhB,EAAApsB,WAAAgtC,aAAA17C,EAAA86B,GACAA,EAAA96B,EAIA,OAAAoH,OAEA0D,GAAAue,KAAA,SAAAna,GACAA,EAAAD,EAAAzG,MAAApB,KAAA5D,UACA,QAAA6L,IAAA,EAAAC,EAAAlI,KAAA7J,SAAqC8R,EAAAC,GAASlI,KAAAiI,GAAAga,KAAAna,EAC9C,OAAA9H,MAAA1E,SAQAoI,GAAAmwC,KAAA,SAAA7rC,GACA,MAAAD,GAAA/H,KAAA,SAAApH,EAAAqD,EAAAgM,GACAD,EAAAmB,KAAAvQ,IAAA8O,SAAAzL,EAAAgM,MAWAvE,GAAAyF,KAAA,SAAAnB,GACA,GAAAktC,GAAAhsC,GAAA9M,UAEA,OADA4L,GAAA5G,MAAA8zC,EAAA,GAAAl1C,KAAAk1C,GACAl1C,MAEA0D,GAAAouC,MAAA,WACA,OAAA9xC,KAAApH,QAEA8K,GAAA9K,KAAA,WACA,OAAAqP,GAAA,EAAAC,EAAAlI,KAAA7J,OAAoC8R,EAAAC,EAAOD,IAC3C,OAAAE,GAAAnI,KAAAiI,GAAAhM,EAAA,EAAAwF,EAAA0G,EAAAhS,OAAwD8F,EAAAwF,EAAOxF,IAAA,CAC/D,GAAArD,GAAAuP,EAAAlM,EACA,IAAArD,EAAA,MAAAA,GAGA,aAEA8K,GAAA9C,KAAA,WACA,GAAAa,GAAA,CAIA,OAHAsG,GAAA/H,KAAA,aACAyB,IAEAA,EAMA,IAAA4G,MACAzK,IAAAvG,UAAAkR,MAAAH,EACAxK,GAAAvG,UAAAkR,MAAA1I,UAAAwI,GACAA,GAAA2C,OAAAtH,GAAAsH,OACA3C,GAAAypC,MAAApuC,GAAAouC,MACAzpC,GAAAzP,KAAA8K,GAAA9K,KACAyP,GAAAc,KAAAzF,GAAAyF,KACAd,GAAAzH,KAAA8C,GAAA9C,KACAyH,GAAA6B,OAAA,SAAAtG,GAEA,OADAuvC,GAAAC,EAAA+B,EAAAhtC,EAAAvP,EAAAy6C,KACAprC,GAAA,EAAAC,EAAAlI,KAAA7J,SAAqC8R,EAAAC,GAAS,CAC9CitC,GAAAhtC,EAAAnI,KAAAiI,IAAAS,OACA2qC,EAAAx3C,KAAAs3C,MACAA,EAAA7rC,WAAAa,EAAAb,UACA,QAAArL,IAAA,EAAAwF,EAAA0G,EAAAhS,SAAwC8F,EAAAwF,IACxC7I,EAAAuP,EAAAlM,KACAk3C,EAAAt3C,KAAAs5C,EAAAl5C,GAAAm3C,EAAAxvC,EAAAuF,KAAAhB,EAAAb,WAAA1O,EAAA8O,SAAAzL,EAAAgM,IACAmrC,EAAA1rC,SAAA9O,EAAA8O,UAEAyrC,EAAAt3C,KAAA,MAIA,MAAA0H,GAAA8vC,IAEAhrC,GAAAwsB,OAAA,SAAAr+B,EAAAif,GAEA,MADArZ,WAAAjG,OAAA,IAAAsf,EAAAnN,EAAAtI,OACA0D,GAAAmxB,OAAA1rB,KAAAnJ,KAAAxJ,EAAAif,IAYA7X,GAAAsM,OAAA,SAAAtR,GACA,GAAAuP,EAQA,OAPA,gBAAAvP,IACAuP,GAAAtE,GAAAjL,EAAAw2C,KACAjnC,EAAAb,WAAA8nC,GAAAhxC,kBAEA+J,GAAAvP,GACAuP,EAAAb,WAAArJ,EAAArF,IAEA2K,GAAA4E,KAEAvK,GAAA01C,UAAA,SAAA36C,GACA,GAAAwP,EAQA,OAPA,gBAAAxP,IACAwP,EAAAe,GAAAnF,GAAApL,EAAAy2C,KACAjnC,EAAAb,WAAA8nC,GAAAhxC,kBAEA+J,EAAAe,GAAAvQ,GACAwP,EAAAb,WAAA,MAEA/D,GAAA4E,KAEAzE,GAAAtB,GAAA,SAAAvK,EAAAyK,EAAAsG,GACA,GAAAnH,GAAArF,UAAAjG,MACA,IAAAsL,EAAA,GACA,mBAAA5J,GAAA,CACA4J,EAAA,IAAAa,GAAA,EACA,KAAAsG,IAAA/Q,GAAAmI,KAAA6zC,KAAAlrC,EAAAC,EAAA/Q,EAAA+Q,GAAAtG,GACA,OAAAtC,MAEA,GAAAyB,EAAA,SAAAA,EAAAzB,KAAApH,OAAA,OAAAf,KAAA4J,EAAAlK,CACAqR,IAAA,EAEA,MAAA5I,MAAA6zC,KAAAlrC,EAAA9Q,EAAAyK,EAAAsG,IAgCA,IAAAa,IAAA7L,GAAAjE,KACAy7C,WAAA,YACAC,WAAA,YAEAjG,KACA3lC,GAAA/Q,QAAA,SAAA8G,GACA,KAAAA,IAAA4vC,KAAA3lC,GAAA/G,OAAAlD,IAwBA,IAAA2K,IAAAH,GAAA,CAyBApM,IAAA03C,MAAA,SAAA9qC,GACA,MAAAD,IAAAC,EAAA1H,KAEA,IAAA+H,IAAA7K,KAAAu1C,WAAA,SAAAvvC,KAAAhG,KAAAu1C,UAAAC,YAAA,GA8BA53C,IAAA63C,MAAA,SAAAjrC,EAAAkrC,EAAAvpC,GAEA,GADA/P,UAAAjG,OAAA,IAAAgW,EAAAupC,IAAA5yC,IAAA2H,gBACAirC,EAAA,OAAAD,GAAAx5C,EAAA,EAAAwF,EAAAi0C,EAAAv/C,OAA2D8F,EAAAwF,IAAOxF,EAClE,IAAAw5C,EAAAC,EAAAz5C,IAAAkQ,eACA,MAAA5B,IAAAC,EAAAirC,IAIA73C,GAAA60C,SAAAkD,KAAA,WAEA,QAAAA,KACA31C,KAAAoC,GAAA,iBAAAwzC,GAAAxzC,GAAA,kBAAAyzC,GAEA,QAAAC,GAAA5I,EAAAjiC,EAAA0W,EAAAo0B,EAAA9f,GACA,kBAWA,QAAA+f,KACA,GAAAz7C,GAAAC,EAAAy7C,EAAAhrC,EAAA5D,EAAA6uC,EACAD,KACA17C,EAAA07C,EAAA,GAAAE,EAAA,GACA37C,EAAAy7C,EAAA,GAAAE,EAAA,GACAC,GAAA77C,EAAAC,EACA27C,EAAAF,EACAl0C,GACAlK,KAAA,OACAwC,EAAA47C,EAAA,GAAAI,EAAA,GACA/7C,EAAA27C,EAAA,GAAAI,EAAA,GACA97C,KACAC,QAGA,QAAA87C,KACArrC,EAAA5D,EAAA6uC,KACAK,EAAAn0C,GAAA2zC,EAAAS,EAAA,MAAAp0C,GAAA6zB,EAAAugB,EAAA,MACAC,EAAAL,GACAr0C,GACAlK,KAAA,aA9BA,GAAAw+C,GAAAK,EAAA12C,KAAAiB,EAAArD,GAAAoE,MAAAf,OAAA01C,sBAAA/4C,GAAAoE,MAAAf,OAAAoG,EAAAqvC,EAAApvC,WAAAvF,EAAAC,EAAAkB,GAAAwzC,EAAAt6C,WAAAg6C,EAAA,EAAAF,EAAAhJ,IAAAsJ,EAAA,eAAAN,EAAA,OAAAA,GAAAK,EAAA34C,GAAAsM,OAAAyX,EAAA1gB,IAAAmB,GAAA2zC,EAAAS,EAAAR,GAAA5zC,GAAA6zB,EAAAugB,EAAAF,GAAAG,EAAA1sC,GAAA9I,GAAAk1C,EAAAlrC,EAAA5D,EAAA6uC,EACAU,IACAP,EAAAO,EAAAx1C,MAAAs1C,EAAAt6C,WACAi6C,KAAAh8C,EAAA87C,EAAA,GAAAE,EAAA/7C,EAAA67C,EAAA,KAEAE,GAAA,KAEAt0C,GACAlK,KAAA,eAdA,GAAAmK,GAAAiB,EAAA0yC,EAAA,8BAAAiB,EAAA,KAAAhB,EAAAE,EAAAl0C,EAAAhE,GAAA03C,MAAAj3C,EAAA,uBAAAw3C,EAAAC,EAAA5pC,GAAAtO,GAAA63C,MAAA10C,EAAA,uBA8CA,OALA40C,GAAAiB,OAAA,SAAAv8C,GACA,MAAA+B,WAAAjG,QACAygD,EAAAv8C,EACAs7C,GAFAiB,GAIAh5C,GAAAgU,OAAA+jC,EAAA3zC,EAAA,OAKApE,GAAA83C,QAAA,SAAAlrC,EAAAkrC,GAEA,MADAt5C,WAAAjG,OAAA,IAAAu/C,EAAA5yC,IAAA4yC,SACAA,EAAAxsC,GAAAwsC,GAAA/7C,IAAA,SAAA87C,GACA,GAAAr7C,GAAAmQ,GAAAC,EAAAirC,EAEA,OADAr7C,GAAA+R,WAAAspC,EAAAtpC,WACA/R,OAGA,IAAAulB,IAAA,KAAAiX,GAAAjX,MAAApT,GAAAnT,KAAAu2B,GAAAhK,GAAA,EAAApZ,GAAAsqC,GAAAlxB,GAAAhG,GAAAjT,GAAAH,GAAA,EAAA6B,GAAA7B,GAAA,IAAAqC,GAAA,IAAArC,GAyBAwd,GAAA3wB,KAAA09C,KACAl5C,IAAAm5C,gBAAA,SAAAj1B,EAAAC,GACA,GAAA9lB,GAAAqb,EAAA0/B,EAAAl1B,EAAA,GAAAm1B,EAAAn1B,EAAA,GAAAo1B,EAAAp1B,EAAA,GAAAq1B,EAAAp1B,EAAA,GAAAq1B,EAAAr1B,EAAA,GAAAs1B,EAAAt1B,EAAA,GAAAxnB,EAAA48C,EAAAH,EAAAx8C,EAAA48C,EAAAH,EAAAnqB,EAAAvyB,IAAAC,GACA,IAAAsyB,EAAA8J,GACAtf,EAAAle,KAAA4D,IAAAq6C,EAAAH,GAAAntB,GACA9tB,EAAA,SAAAmW,GACA,OAAA4kC,EAAA5kC,EAAA7X,EAAA08C,EAAA7kC,EAAA5X,EAAA08C,EAAA99C,KAAAyT,IAAAkd,GAAA3X,EAAAkF,SAEK,CACL,GAAAlB,GAAAhd,KAAAyV,KAAAie,GAAAP,GAAA8qB,IAAAH,IATA,EASApqB,IAAA,EAAAoqB,EATA,EASA9gC,GAAAwW,GAAAyqB,IAAAH,IATA,EASApqB,IAAA,EAAAuqB,EATA,EASAjhC,GAAAymB,EAAAzjC,KAAA4D,IAAA5D,KAAAyV,KAAA0d,IAAA,GAAAA,GAAAuQ,EAAA1jC,KAAA4D,IAAA5D,KAAAyV,KAAA+d,IAAA,GAAAA,EACAtV,IAAAwlB,EAAAD,GAAA9S,GACA9tB,EAAA,SAAAmW,GACA,GAAArP,GAAAqP,EAAAkF,EAAAggC,EAAAxqC,GAAA+vB,GAAAne,EAAAw4B,GAZA,EAYA9gC,IAAAkhC,EAAAvqC,GAAAgd,GAAAhnB,EAAA85B,GAAAjwB,GAAAiwB,GACA,QAAAma,EAAAt4B,EAAAnkB,EAAA08C,EAAAv4B,EAAAlkB,EAAA08C,EAAAI,EAAAxqC,GAAAid,GAAAhnB,EAAA85B,KAIA,MADA5gC,GAAAiyC,SAAA,IAAA52B,EACArb,GAEA2B,GAAA60C,SAAA8E,KAAA,WAeA,QAAAA,GAAAvhD,GACAA,EAAAoM,GAAAwzC,EAAA4B,GAAAp1C,GAAAq1C,GAAA,QAAAC,GAAAt1C,GAAA,gBAAAu1C,GAAAv1C,GAAAyzC,EAAA+B,GAoGA,QAAAC,GAAA1kC,GACA,QAAAA,EAAA,GAAA2kC,EAAAz9C,GAAAy9C,EAAAt4C,GAAA2T,EAAA,GAAA2kC,EAAAx9C,GAAAw9C,EAAAt4C,GAEA,QAAApF,GAAA6H,GACA,OAAAA,EAAA,GAAA61C,EAAAt4C,EAAAs4C,EAAAz9C,EAAA4H,EAAA,GAAA61C,EAAAt4C,EAAAs4C,EAAAx9C,GAEA,QAAAy9C,GAAAh1C,GACA+0C,EAAAt4C,EAAApG,KAAAC,IAAA2+C,EAAA,GAAA5+C,KAAAoC,IAAAw8C,EAAA,GAAAj1C,IAEA,QAAAk1C,GAAA9kC,EAAAlR,GACAA,EAAA7H,EAAA6H,GACA61C,EAAAz9C,GAAA8Y,EAAA,GAAAlR,EAAA,GACA61C,EAAAx9C,GAAA6Y,EAAA,GAAAlR,EAAA,GAEA,QAAAi2C,GAAAxB,EAAAvjC,EAAAlR,EAAAzC,GACAk3C,EAAAyB,WACA99C,EAAAy9C,EAAAz9C,EACAC,EAAAw9C,EAAAx9C,EACAkF,EAAAs4C,EAAAt4C,GAEAu4C,EAAA3+C,KAAA2V,IAAA,EAAAvP,IACAy4C,EAAAG,EAAAjlC,EAAAlR,GACAy0C,EAAA94C,GAAAsM,OAAAwsC,GACAxI,EAAA,IAAAwI,IAAAj/C,aAAAy2C,aACAwI,EAAAvtC,KAAAouC,EAAAv1C,OAEA,QAAAijC,KACAld,KAAAmc,OAAA7jB,EAAAnlB,QAAAvB,IAAA,SAAAU,GACA,OAAAA,EAAAy9C,EAAAz9C,GAAAy9C,EAAAt4C,IACO7F,IAAA0mB,EAAAgB,SACP2G,KAAAkc,OAAA/jB,EAAAjlB,QAAAvB,IAAA,SAAAW,GACA,OAAAA,EAAAw9C,EAAAx9C,GAAAw9C,EAAAt4C,IACO7F,IAAAwmB,EAAAkB,SAEP,QAAAg3B,GAAAt2C,GACAu2C,KAAAv2C,GACAlK,KAAA,cAGA,QAAA0gD,GAAAx2C,GACAkjC,IACAljC,GACAlK,KAAA,OACA0b,MAAAukC,EAAAt4C,EACAqvB,WAAAipB,EAAAz9C,EAAAy9C,EAAAx9C,KAGA,QAAAk+C,GAAAz2C,KACAu2C,IAAAv2C,GACAlK,KAAA,YACOugD,EAAA,MAEP,QAAAZ,KAIA,QAAAxB,KACAI,EAAA,EACA6B,EAAAr6C,GAAA03C,MAAAoB,GAAA+B,GACAF,EAAAx2C,GAEA,QAAAu0C,KACA30B,EAAAvf,GAAAs2C,EAAA,MAAAt2C,GAAAu2C,EAAA,MACAlC,EAAAL,GACAoC,EAAAz2C,GAXA,GAAA20C,GAAA12C,KAAA+B,EAAAC,EAAAkB,GAAAwzC,EAAAt6C,WAAAg6C,EAAA,EAAAz0B,EAAA/jB,GAAAsM,OAAA7L,EAAAq4C,IAAAt0C,GAAAs2C,EAAA1C,GAAA5zC,GAAAu2C,EAAArC,GAAAmC,EAAAZ,EAAAj6C,GAAA03C,MAAAoB,IAAAD,EAAA1sC,GAAA2sC,EACAkC,IAAAzvC,KAAAutC,GACA2B,EAAAt2C,GAYA,QAAA61C,KAKA,QAAAiB,KACA,GAAAnD,GAAA93C,GAAA83C,QAAAgB,EAKA,OAJAoC,GAAAhB,EAAAt4C,EACAk2C,EAAAh9C,QAAA,SAAA0Z,GACAA,EAAAjG,aAAA4sC,OAAA3mC,EAAAjG,YAAA0rC,EAAAzlC,MAEAsjC,EAEA,QAAAsD,KACA,GAAA/3C,GAAArD,GAAAoE,MAAAf,MACArD,IAAAsM,OAAAjJ,GAAAmB,GAAA62C,EAAAjD,GAAA5zC,GAAA82C,EAAA5C,GACA6C,EAAAt9C,KAAAoF,EAEA,QADAm4C,GAAAx7C,GAAAoE,MAAAyI,eACAxO,EAAA,EAAAwF,EAAA23C,EAAAjjD,OAA2C8F,EAAAwF,IAAOxF,EAClD88C,EAAAK,EAAAn9C,GAAAkQ,YAAA,IAEA,IAAAupC,GAAAmD,IAAA/7C,EAAAoV,KAAApV,KACA,QAAA44C,EAAAv/C,OAAA,CACA,GAAA2G,EAAAu8C,EAAA,KACA,GAAAlmC,GAAAuiC,EAAA,EACAwC,GAAAxB,EAAAvjC,EAAA4lC,EAAA5lC,EAAAhH,YAAA/S,KAAAsd,MAAAtd,KAAA4D,IAAA86C,EAAAt4C,GAAApG,KAAAmoC,KAAA,GACA3+B,IAEAy2C,EAAAv8C,MACS,IAAA44C,EAAAv/C,OAAA,GACT,GAAAgd,GAAAuiC,EAAA,GAAAjuB,EAAAiuB,EAAA,GAAAn7C,EAAA4Y,EAAA,GAAAsU,EAAA,GAAAjtB,EAAA2Y,EAAA,GAAAsU,EAAA,EACA6xB,GAAA/+C,IAAAC,KAGA,QAAAw7C,KACA,GAAAl0B,GAAAy3B,EAAAx3B,EAAAy3B,EAAA9D,EAAA93C,GAAA83C,QAAAgB,EACAkC,IAAAzvC,KAAAutC,EACA,QAAAz6C,GAAA,EAAAwF,EAAAi0C,EAAAv/C,OAA2C8F,EAAAwF,IAAOxF,EAAAu9C,EAAA,KAElD,GADAz3B,EAAA2zB,EAAAz5C,GACAu9C,EAAAT,EAAAh3B,EAAA5V,YAAA,CACA,GAAAotC,EAAA,KACAz3B,GAAAC,EAAAw3B,EAAAC,EAGA,GAAAA,EAAA,CACA,GAAAC,MAAA13B,EAAA,GAAAD,EAAA,IAAA23B,KAAA13B,EAAA,GAAAD,EAAA,IAAA23B,EAAAC,EAAAJ,GAAAlgD,KAAAyV,KAAA4qC,EAAAH,EACAx3B,OAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,OACAw3B,MAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,OACAzB,EAAA2B,EAAAZ,GAEAO,EAAA,KACApB,EAAAn2B,EAAAy3B,GACAhB,EAAAx2C,GAEA,QAAAu0C,KACA,GAAA14C,GAAAoE,MAAA0zC,QAAAv/C,OAAA,CAEA,OADAijD,GAAAx7C,GAAAoE,MAAAyI,eACAxO,EAAA,EAAAwF,EAAA23C,EAAAjjD,OAA6C8F,EAAAwF,IAAOxF,QACpD88C,GAAAK,EAAAn9C,GAAAkQ,WAEA,QAAAA,KAAA4sC,GACA,WAAAF,KAGAj7C,GAAA01C,UAAA6F,GAAA/2C,GAAAu3C,EAAA,MACAh4B,EAAAvf,GAAAwzC,EAAA4B,GAAAp1C,GAAAyzC,EAAA+B,GACAnB,IACA+B,EAAAz2C,GAlEA,GAA4E+2C,GAA5EpC,EAAA12C,KAAA+B,EAAAC,EAAAkB,GAAAwzC,EAAAt6C,WAAA28C,KAA4EO,EAAA,EAAAK,EAAA,SAAA/7C,GAAAoE,MAAAyI,eAAA,GAAA0B,WAAA8sC,EAAA,YAAAU,EAAAT,EAAA,WAAAS,EAAAR,KAAAx3B,EAAA/jB,GAAAsM,OAAAwsC,GAAAD,EAAA1sC,GAAA2sC,EAC5EsC,KACAX,EAAAt2C,GACA4f,EAAAvf,GAAAwzC,EAAA,MAAAxzC,GAAAyzC,EAAAmD,GAkEA,QAAAtB,KACA,GAAA31C,GAAAC,EAAAkB,GAAAlD,KAAA5D,UACAw9C,GAAAnnC,aAAAmnC,IAAyDhB,GAAAzvC,KAAAnJ,MACzD65C,EAAAhC,EAAAO,EAAAjqB,GAAAvwB,GAAA03C,MAAAt1C,OAAAq4C,EAAAt2C,IACA63C,EAAAtvC,WAAA,WACAsvC,EAAA,KACApB,EAAAz2C,IACO,IACPa,IACAm1C,EAAA3+C,KAAA2V,IAAA,OAAA+qC,MAAAhC,EAAAt4C,GACAy4C,EAAAG,EAAAyB,GACAtB,EAAAx2C,GAEA,QAAA41C,KACA,GAAAxkC,GAAAvV,GAAA03C,MAAAt1C,MAAAR,EAAApG,KAAA4D,IAAA86C,EAAAt4C,GAAApG,KAAAmoC,GACA2W,GAAAl4C,KAAAmT,EAAA0kC,EAAA1kC,GAAAvV,GAAAoE,MAAA+3C,SAAA3gD,KAAAga,KAAA5T,GAAA,EAAApG,KAAAsd,MAAAlX,GAAA,GA3QA,GAIKq6C,GAAAzB,EAAAjqB,EAAAyrB,EAAAP,EAAAh5B,EAAA0H,EAAA5H,EAAA6H,EAJL8vB,GACAz9C,EAAA,EACAC,EAAA,EACAkF,EAAA,GACKoB,GAAA,SAAAo3C,EAAAgC,GAAA9L,EAAA,IAAAoK,EAAA,EAAA1C,EAAA,iBAAA8C,EAAA,iBAAAC,EAAA,eAAA9C,EAAA,kBAAA7zC,EAAAiB,EAAAs0C,EAAA,6BAyQL,OAxQAE,MACAA,GAAA,WAAArI,KAAA0K,GAAA,WACA,OAAAl8C,GAAAoE,MAAAi4C,QAAAr8C,GAAAoE,MAAAk4C,UAAA,QACO,yBAAA9K,KAAA0K,GAAA,WACP,MAAAl8C,IAAAoE,MAAAm4C,YACO,eAAAL,GAAA,WACP,OAAAl8C,GAAAoE,MAAAo4C,QACO,wBAKP7C,EAAAv1C,MAAA,SAAAhM,GACAA,EAAA69C,KAAA,WACA,GAAA9xC,GAAAC,EAAAkB,GAAAlD,KAAA5D,WAAAi+C,EAAAvC,CACAwC,IACA18C,GAAAsM,OAAAlK,MAAAvI,aAAAo8C,KAAA,wBACAiE,EAAA93C,KAAAm4C,YACA99C,EAAA,EACAC,EAAA,EACAkF,EAAA,GAEA64C,EAAAt2C,KACWsrC,MAAA,uBACX,GAAA9yC,GAAAqG,EAAA,GAAApG,EAAAoG,EAAA,GAAAigB,EAAAu3B,IAAA,GAAA79C,EAAA,EAAAumB,EAAAs3B,IAAA,GAAA59C,EAAA,EAAAyB,EAAA2B,GAAAm5C,kBAAAl2B,EAAAi3B,EAAAz9C,GAAAy9C,EAAAt4C,GAAAshB,EAAAg3B,EAAAx9C,GAAAw9C,EAAAt4C,EAAAjF,EAAAu9C,EAAAt4C,KAAAqhB,EAAAw5B,EAAAhgD,GAAAggD,EAAA76C,GAAAshB,EAAAu5B,EAAA//C,GAAA+/C,EAAA76C,EAAAjF,EAAA8/C,EAAA76C,GACA,iBAAA4S,GACA,GAAAnQ,GAAAhG,EAAAmW,GAAA5S,EAAAjF,EAAA0H,EAAA,EACAjC,MAAAm4C,UAAAL,GACAz9C,EAAAwmB,EAAA5e,EAAA,GAAAzC,EACAlF,EAAAwmB,EAAA7e,EAAA,GAAAzC,EACAA,KAEA+4C,EAAAx2C,MAEW8xC,KAAA,4BACX2E,EAAAz2C,KACW8xC,KAAA,sBACX2E,EAAAz2C,MAGA/B,KAAAm4C,UAAAL,EACAO,EAAAt2C,GACAw2C,EAAAx2C,GACAy2C,EAAAz2C,OAIAw1C,EAAA1oB,UAAA,SAAAt3B,GACA,MAAA6E,WAAAjG,QACA2hD,GACAz9C,GAAA9C,EAAA,GACA+C,GAAA/C,EAAA,GACAiI,EAAAs4C,EAAAt4C,GAEAylC,IACAsS,IAPAO,EAAAz9C,EAAAy9C,EAAAx9C,IASAi9C,EAAAhkC,MAAA,SAAAhc,GACA,MAAA6E,WAAAjG,QACA2hD,GACAz9C,EAAAy9C,EAAAz9C,EACAC,EAAAw9C,EAAAx9C,EACAkF,EAAA,MAEAu4C,GAAAxgD,GACA0tC,IACAsS,GARAO,EAAAt4C,GAUA+3C,EAAAS,YAAA,SAAAzgD,GACA,MAAA6E,WAAAjG,QACA6hD,EAAA,MAAAzgD,EAAAyiD,KAAAziD,EAAA,IAAAA,EAAA,IACAggD,GAFAS,GAIAT,EAAAppB,OAAA,SAAA52B,GACA,MAAA6E,WAAAjG,QACAg4B,EAAA52B,OAAA,IAAAA,EAAA,IACAggD,GAFAppB,GAIAopB,EAAA32C,KAAA,SAAArJ,GACA,MAAA6E,WAAAjG,QACAyK,EAAArJ,OAAA,IAAAA,EAAA,IACAggD,GAFA32C,GAIA22C,EAAArJ,SAAA,SAAA32C,GACA,MAAA6E,WAAAjG,QACA+3C,GAAA32C,EACAggD,GAFArJ,GAIAqJ,EAAAl9C,EAAA,SAAA6H,GACA,MAAA9F,WAAAjG,QACA4xB,EAAA7lB,EACAme,EAAAne,EAAAyjC,OACAmS,GACAz9C,EAAA,EACAC,EAAA,EACAkF,EAAA,GAEA+3C,GARAxvB,GAUAwvB,EAAAj9C,EAAA,SAAA4H,GACA,MAAA9F,WAAAjG,QACA6xB,EAAA9lB,EACAie,EAAAje,EAAAyjC,OACAmS,GACAz9C,EAAA,EACAC,EAAA,EACAkF,EAAA,GAEA+3C,GARAvvB,GAoKApqB,GAAAgU,OAAA2lC,EAAAv1C,EAAA,MAEA,IAAA83C,IAAArC,GAAAuC,IAAA,EAAA/mC,IACArV,IAAA0R,MAAApC,GAEAA,GAAArN,UAAAsP,SAAA,WACA,MAAAnP,MAAAgO,MAAA,IAEApQ,GAAAyR,IAAAlC,EAIA,IAAAotC,IAAAptC,GAAAtN,UAAA,GAAAqN,GACAqtC,IAAAC,SAAA,SAAAh7C,GAEA,MADAA,GAAApG,KAAA2V,IAAA,GAAA3S,UAAAjG,OAAAqJ,EAAA,GACA,GAAA2N,IAAAnN,KAAAtF,EAAAsF,KAAA+C,EAAA/C,KAAAiC,EAAAzC,IAEA+6C,GAAAE,OAAA,SAAAj7C,GAEA,MADAA,GAAApG,KAAA2V,IAAA,GAAA3S,UAAAjG,OAAAqJ,EAAA,GACA,GAAA2N,IAAAnN,KAAAtF,EAAAsF,KAAA+C,EAAAvD,EAAAQ,KAAAiC,IAEAs4C,GAAAvsC,IAAA,WACA,MAAAV,IAAAtN,KAAAtF,EAAAsF,KAAA+C,EAAA/C,KAAAiC,IAqBArE,GAAAk+B,IAAAluB,EAIA,IAAA8sC,IAAA9sC,GAAA/N,UAAA,GAAAqN,GACAwtC,IAAAF,SAAA,SAAAh7C,GACA,UAAAoO,IAAA5N,KAAAtF,EAAAsF,KAAA2F,EAAAvM,KAAAoC,IAAA,IAAAwE,KAAAiC,EAAA04C,IAAAv+C,UAAAjG,OAAAqJ,EAAA,MAEAk7C,GAAAD,OAAA,SAAAj7C,GACA,UAAAoO,IAAA5N,KAAAtF,EAAAsF,KAAA2F,EAAAvM,KAAAC,IAAA,EAAA2G,KAAAiC,EAAA04C,IAAAv+C,UAAAjG,OAAAqJ,EAAA,MAEAk7C,GAAA1sC,IAAA,WACA,MAAAE,IAAAlO,KAAAtF,EAAAsF,KAAA2F,EAAA3F,KAAAiC,GAAA+L,OAOApQ,GAAA4+B,IAAA3uB,EAIA,IAAA8sC,IAAA,GACApsC,GAAA,OAAAC,GAAA,EAAAC,GAAA,QACAmsC,GAAA/sC,GAAAhO,UAAA,GAAAqN,GACA0tC,IAAAJ,SAAA,SAAAh7C,GACA,UAAAqO,IAAAzU,KAAAoC,IAAA,IAAAwE,KAAAiC,EAAA04C,IAAAv+C,UAAAjG,OAAAqJ,EAAA,IAAAQ,KAAAxB,EAAAwB,KAAAvB,IAEAm8C,GAAAH,OAAA,SAAAj7C,GACA,UAAAqO,IAAAzU,KAAAC,IAAA,EAAA2G,KAAAiC,EAAA04C,IAAAv+C,UAAAjG,OAAAqJ,EAAA,IAAAQ,KAAAxB,EAAAwB,KAAAvB,IAEAm8C,GAAA5sC,IAAA,WACA,MAAAK,IAAArO,KAAAiC,EAAAjC,KAAAxB,EAAAwB,KAAAvB,IAqBAb,GAAAoQ,IAAAL,EAUA,IAAAktC,IAAAltC,GAAA9N,UAAA,GAAAqN,GACA2tC,IAAAL,SAAA,SAAAh7C,GACAA,EAAApG,KAAA2V,IAAA,GAAA3S,UAAAjG,OAAAqJ,EAAA,EACA,IAAAyO,GAAAjO,KAAAiO,EAAAjY,EAAAgK,KAAAhK,EAAAyI,EAAAuB,KAAAvB,EAAAxC,EAAA,EACA,OAAAgS,IAAAjY,GAAAyI,GACAwP,KAAAhS,IAAAgS,EAAAhS,GACAjG,KAAAiG,IAAAjG,EAAAiG,GACAwC,KAAAxC,IAAAwC,EAAAxC,GACA,GAAA0R,IAAAvU,KAAAoC,IAAA,IAAAyS,EAAAzO,GAAApG,KAAAoC,IAAA,IAAAxF,EAAAwJ,GAAApG,KAAAoC,IAAA,IAAAiD,EAAAe,KAJA,GAAAmO,IAAA1R,QAMA4+C,GAAAJ,OAAA,SAAAj7C,GAEA,MADAA,GAAApG,KAAA2V,IAAA,GAAA3S,UAAAjG,OAAAqJ,EAAA,GACA,GAAAmO,IAAAnO,EAAAQ,KAAAiO,EAAAzO,EAAAQ,KAAAhK,EAAAwJ,EAAAQ,KAAAvB,IAEAo8C,GAAAxrC,IAAA,WACA,MAAAhC,IAAArN,KAAAiO,EAAAjO,KAAAhK,EAAAgK,KAAAvB,IAEAo8C,GAAA1rC,SAAA,WACA,UAAAD,GAAAlP,KAAAiO,GAAAiB,GAAAlP,KAAAhK,GAAAkZ,GAAAlP,KAAAvB,GAmEA,IAAAkR,IAAA/R,GAAAjE,KACAmhD,UAAA,SACAC,aAAA,SACAC,KAAA,MACAC,WAAA,QACAC,MAAA,SACAC,MAAA,SACAC,OAAA,SACAC,MAAA,EACAC,eAAA,SACAC,KAAA,IACAC,WAAA,QACAC,MAAA,SACAC,UAAA,SACAC,UAAA,QACAC,WAAA,QACAC,UAAA,SACAC,MAAA,SACAC,eAAA,QACAC,SAAA,SACAC,QAAA,SACAC,KAAA,MACAC,SAAA,IACAC,SAAA,MACAC,cAAA,SACAC,SAAA,SACAC,UAAA,MACAC,SAAA,SACAC,UAAA,SACAC,YAAA,QACAC,eAAA,QACAC,WAAA,SACAC,WAAA,SACAC,QAAA,QACAC,WAAA,SACAC,aAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,MACAC,WAAA,QACAC,SAAA,SACAC,YAAA,MACAC,QAAA,QACAC,QAAA,QACAC,WAAA,QACAC,UAAA,SACAC,YAAA,SACAC,YAAA,QACAC,QAAA,SACAC,UAAA,SACAC,WAAA,SACAC,KAAA,SACAC,UAAA,SACAC,KAAA,QACAC,MAAA,MACAC,YAAA,SACAC,KAAA,QACAC,SAAA,SACAC,QAAA,SACAC,UAAA,SACAC,OAAA,QACAC,MAAA,SACAC,MAAA,SACAC,SAAA,SACAC,cAAA,SACAC,UAAA,QACAC,aAAA,SACAC,UAAA,SACAC,WAAA,SACAC,UAAA,SACAC,qBAAA,SACAC,UAAA,SACAC,WAAA,QACAC,UAAA,SACAC,UAAA,SACAC,YAAA,SACAC,cAAA,QACAC,aAAA,QACAC,eAAA,QACAC,eAAA,QACAC,eAAA,SACAC,YAAA,SACAC,KAAA,MACAC,UAAA,QACAC,MAAA,SACAC,QAAA,SACAC,OAAA,QACAC,iBAAA,QACAC,WAAA,IACAC,aAAA,SACAC,aAAA,QACAC,eAAA,QACAC,gBAAA,QACAC,kBAAA,MACAC,gBAAA,QACAC,gBAAA,SACAC,aAAA,QACAC,UAAA,SACAC,UAAA,SACAC,SAAA,SACAC,YAAA,SACAC,KAAA,IACAC,QAAA,SACAC,MAAA,QACAC,UAAA,QACAC,OAAA,SACAC,UAAA,SACAC,OAAA,SACAC,cAAA,SACAC,UAAA,SACAC,cAAA,SACAC,cAAA,SACAC,WAAA,SACAC,UAAA,SACAC,KAAA,SACAC,KAAA,SACAC,KAAA,SACAC,WAAA,SACAC,OAAA,QACAC,cAAA,QACAC,IAAA,SACAC,UAAA,SACAC,UAAA,QACAC,YAAA,QACAC,OAAA,SACAC,WAAA,SACAC,SAAA,QACAC,SAAA,SACAC,OAAA,SACAC,OAAA,SACAC,QAAA,QACAC,UAAA,QACAC,UAAA,QACAC,UAAA,QACAC,KAAA,SACAC,YAAA,MACAC,UAAA,QACAjyB,IAAA,SACAkyB,KAAA,MACAC,QAAA,SACAC,OAAA,SACAC,UAAA,QACAC,OAAA,SACAC,MAAA,SACAC,MAAA,SACAC,WAAA,SACAC,OAAA,SACAC,YAAA,UAEAr0C,IAAAjX,QAAA,SAAAkH,EAAAjD,GACAgT,GAAAhN,IAAA/C,EAAAoP,GAAArS,MAOAiB,GAAAqmD,QAAAn0C,GACAlS,GAAA4S,IAAAT,GAAAhP,GA4FAnD,GAAAsmD,IAAA,SAAAC,EAAAj0C,GAEA,QAAAg0C,GAAAj0C,EAAAuhC,EAAAxpC,GACA5L,UAAAjG,OAAA,IAAA6R,EAAAwpC,IAAA,KACA,IAAAhhC,GAAAL,GAAAF,EAAAC,EAAA,MAAAshC,EAAAxhC,EAAAo0C,EAAA5S,GAAAxpC,EAIA,OAHAwI,GAAAghC,IAAA,SAAAj6C,GACA,MAAA6E,WAAAjG,OAAAqa,EAAAR,SAAA,OAAAwhC,EAAAj6C,GAAAyY,EAAAo0C,EAAA7sD,IAAAi6C,GAEAhhC,EAEA,QAAAR,GAAAM,GACA,MAAA4zC,GAAA/sC,MAAA7G,EAAAwB,cAEA,QAAAsyC,GAAA54C,GACA,gBAAA8E,GACA,MAAA4zC,GAAA/sC,MAAA7G,EAAAwB,aAAAtG,IA+EA,QAAA64C,GAAA7S,GACA,MAAAA,GAAA73C,IAAA2qD,GAAAhwC,KAAA6vC,GAEA,QAAAG,GAAApQ,GACA,MAAAqQ,GAAAv+C,KAAAkuC,GAAA,IAAAA,EAAAv9C,QAAA,gBAAAu9C,EAjGA,GAAAqQ,GAAA,GAAAr/C,QAAA,KAAAi/C,EAAA,OAAAK,EAAAL,EAAAntC,WAAA,EAmGA,OAlFAktC,GAAA/sC,MAAA,SAAA+8B,EAAA1oC,GACA,GAAA7B,EACA,OAAAu6C,GAAAO,UAAAvQ,EAAA,SAAA1C,EAAAv1C,GACA,GAAA0N,EAAA,MAAAA,GAAA6nC,EAAAv1C,EAAA,EACA,IAAAuC,GAAA,GAAAkmD,UAAA,eAA2ClT,EAAA73C,IAAA,SAAAnD,EAAAyF,GAC3C,MAAAizC,MAAAyV,UAAAnuD,GAAA,OAAAyF,EAAA,MACSqY,KAAA,SACT3K,GAAA6B,EAAA,SAAAgmC,EAAAv1C,GACA,MAAAuP,GAAAhN,EAAAgzC,GAAAv1C,IACSuC,KAGT0lD,EAAAO,UAAA,SAAAvQ,EAAA1oC,GAEA,QAAAo5C,KACA,GAAAjqC,GAAAgZ,EAAA,MAAAkxB,EACA,IAAAC,EAAA,MAAAA,IAAA,EAAAC,CACA,IAAA98C,GAAA0S,CACA,SAAAu5B,EAAAl9B,WAAA/O,GAAA,CAEA,IADA,GAAAhM,GAAAgM,EACAhM,IAAA03B,GACA,QAAAugB,EAAAl9B,WAAA/a,GAAA,CACA,QAAAi4C,EAAAl9B,WAAA/a,EAAA,WACAA,EAGA0e,EAAA1e,EAAA,CACA,IAAA0J,GAAAuuC,EAAAl9B,WAAA/a,EAAA,EAOA,OANA,MAAA0J,GACAm/C,GAAA,EACA,KAAA5Q,EAAAl9B,WAAA/a,EAAA,MAAA0e,GACW,KAAAhV,IACXm/C,GAAA,GAEA5Q,EAAA5zC,MAAA2H,EAAA,EAAAhM,GAAAtF,QAAA,WAEA,KAAAgkB,EAAAgZ,GAAA,CACA,GAAAhuB,GAAAuuC,EAAAl9B,WAAA2D,KAAAnb,EAAA,CACA,SAAAmG,EAAAm/C,GAAA,MAAmC,SAAAn/C,EACnCm/C,GAAA,EACA,KAAA5Q,EAAAl9B,WAAA2D,WAAAnb,OACW,IAAAmG,IAAA6+C,EAAA,QACX,OAAAtQ,GAAA5zC,MAAA2H,EAAA0S,EAAAnb,GAEA,MAAA00C,GAAA5zC,MAAA2H,GAEA,IAjCA,GAA4BmK,GAAA0yC,EAA5BC,KAAkBF,KAAUG,KAAArxB,EAAAugB,EAAA/9C,OAAAwkB,EAAA,EAAAlZ,EAAA,GAiC5B2Q,EAAAwyC,OAAAC,GAAA,CAEA,IADA,GAAArmD,MACA4T,IAAA2yC,GAAA3yC,IAAAyyC,GACArmD,EAAA3C,KAAAuW,GACAA,EAAAwyC,GAEAp5C,IAAA,OAAAhN,EAAAgN,EAAAhN,EAAAiD,OACAujD,EAAAnpD,KAAA2C,GAEA,MAAAwmD,IAEAd,EAAA90C,OAAA,SAAA41C,GACA,GAAApvC,MAAAi8B,QAAAmT,EAAA,UAAAd,GAAAe,WAAAD,EACA,IAAAE,GAAA,GAAApkD,GAAAqkD,IAQA,OAPAH,GAAAtsD,QAAA,SAAA84C,GACA,OAAA4T,KAAA5T,GACA0T,EAAAzpD,IAAA2pD,IACAD,EAAAtpD,KAAAqpD,EAAAr/C,IAAAu/C,OAIAD,EAAAxrD,IAAA2qD,GAAAhwC,KAAA6vC,IAAA1hD,OAAAuiD,EAAArrD,IAAA,SAAA63C,GACA,MAAA2T,GAAAxrD,IAAA,SAAAyrD,GACA,MAAAd,GAAA9S,EAAA4T,MACS9wC,KAAA6vC,MACF7vC,KAAA,OAEP4vC,EAAAe,WAAA,SAAAD,GACA,MAAAA,GAAArrD,IAAA0qD,GAAA/vC,KAAA,OAQA4vC,GAEAtmD,GAAAynD,IAAAznD,GAAAsmD,IAAA,gBACAtmD,GAAA0nD,IAAA1nD,GAAAsmD,IAAA,iCACA,IAAA5xC,IAAAD,GAAAE,GAAAC,GAAAE,GAAA1S,KAAAqB,EAAArB,KAAA,oCAAAgI,GACAsC,WAAAtC,EAAA,IAEApK,IAAAuU,MAAA,WACAJ,GAAA3Q,MAAApB,KAAA5D,YAiCAwB,GAAAuU,MAAAozC,MAAA,WACA3yC,KACAC,MA0BAjV,GAAA8P,MAAA,SAAArT,EAAAoH,GACA,MAAAA,GAAArI,KAAAsU,MAAArT,GAAAoH,EAAArI,KAAA2V,IAAA,GAAAtN,OAAArI,KAAAsU,MAAArT,GAEA,IAAAmrD,KAAA,oEAAA7rD,IAAA2Z,GACA1V,IAAA4X,aAAA,SAAA7Y,EAAAmY,GACA,GAAA7Y,GAAA,CAOA,QANAU,QACAA,EAAA,IAAAA,IAAA,GACAmY,IAAAnY,EAAAiB,GAAA8P,MAAA/Q,EAAAuW,GAAAvW,EAAAmY,KACA7Y,EAAA,EAAA7C,KAAAsd,MAAA,MAAAtd,KAAA4D,IAAAL,GAAAvD,KAAAia,MACApX,EAAA7C,KAAAC,KAAA,GAAAD,KAAAoC,IAAA,KAAApC,KAAAsd,OAAAza,EAAA,SAEAupD,GAAA,EAAAvpD,EAAA,GAwGA,IAAAuY,IAAA,yEACAU,GAAAtX,GAAAjE,KACA8E,EAAA,SAAApE,GACA,MAAAA,GAAA8U,SAAA,IAEAxJ,EAAA,SAAAtL,GACA,MAAA3D,QAAA+uD,aAAAprD,IAEAsP,EAAA,SAAAtP,GACA,MAAAA,GAAA8U,SAAA,IAEA9U,EAAA,SAAAA,GACA,MAAAA,GAAA8U,SAAA,KAEA6J,EAAA,SAAA3e,GACA,MAAAA,GAAA8U,SAAA,IAAA3N,eAEAxL,EAAA,SAAAqE,EAAA8Y,GACA,MAAA9Y,GAAAqrD,YAAAvyC,IAEA9c,EAAA,SAAAgE,EAAA8Y,GACA,MAAA9Y,GAAAsrD,cAAAxyC,IAEA3H,EAAA,SAAAnR,EAAA8Y,GACA,MAAA9Y,GAAAurD,QAAAzyC,IAEAlF,EAAA,SAAA5T,EAAA8Y,GACA,OAAA9Y,EAAAuD,GAAA8P,MAAArT,EAAA6Y,GAAA7Y,EAAA8Y,KAAAyyC,QAAAxsD,KAAAC,IAAA,EAAAD,KAAAoC,IAAA,GAAA0X,GAAA7Y,GAAA,SAAA8Y,SAMAyH,GAAAhd,GAAAhB,QAA4ByZ,GAAAnE,IAI5B2D,IAAAhW,WACA4a,QAAA,WACA,MAAAza,MAAAzI,EAAAsuD,cAEAhuC,OAAA,WACA,MAAA7X,MAAAzI,EAAAuuD,aAEA3qC,YAAA,WACA,MAAAnb,MAAAzI,EAAAwuD,kBAEArrC,SAAA,WACA,MAAA1a,MAAAzI,EAAAyuD,eAEAlrC,gBAAA,WACA,MAAA9a,MAAAzI,EAAA0uD,sBAEAlrC,WAAA,WACA,MAAA/a,MAAAzI,EAAA2uD,iBAEA5rC,SAAA,WACA,MAAAta,MAAAzI,EAAA4uD,eAEAnrC,WAAA,WACA,MAAAhb,MAAAzI,EAAA6uD,iBAEAC,QAAA,WACA,MAAArmD,MAAAzI,EAAA8uD,WAEA7pC,kBAAA,WACA,UAEA8pC,QAAA,WACA,MAAAtmD,MAAAzI,EAAA+uD,WAEAC,QAAA,WACAC,GAAAC,WAAArlD,MAAApB,KAAAzI,EAAA6E,YAEAsqD,OAAA,WACAF,GAAAG,UAAAvlD,MAAApB,KAAAzI,EAAA6E,YAEAub,YAAA,WACA6uC,GAAAI,eAAAxlD,MAAApB,KAAAzI,EAAA6E,YAEA2b,SAAA,WACAyuC,GAAAK,YAAAzlD,MAAApB,KAAAzI,EAAA6E,YAEA0qD,gBAAA,WACAN,GAAAO,mBAAA3lD,MAAApB,KAAAzI,EAAA6E,YAEA4qD,WAAA,WACAR,GAAAS,cAAA7lD,MAAApB,KAAAzI,EAAA6E,YAEA8qD,SAAA,WACAV,GAAAW,YAAA/lD,MAAApB,KAAAzI,EAAA6E,YAEAgrD,WAAA,WACAZ,GAAAa,cAAAjmD,MAAApB,KAAAzI,EAAA6E,YAEAkrD,QAAA,WACAd,GAAAc,QAAAlmD,MAAApB,KAAAzI,EAAA6E,YAGA,IAAAoqD,IAAAt0C,KAAArS,SA6DA+a,IAAA+zB,KAAA54B,GAAA,SAAAG,GAGA,MAFAA,GAAA0E,GAAA2sC,IAAArxC,GACAA,EAAAgxC,SAAA,KACAhxC,GACG,SAAAA,EAAAva,GACHua,EAAAyB,YAAAzB,EAAAiF,cAAAxf,IACG,SAAAua,GACH,MAAAA,GAAAiF,gBAEAP,GAAA4sC,MAAA5sC,GAAA+zB,KAAAzzC,MACA0f,GAAA4sC,MAAA/wC,IAAAmE,GAAA+zB,KAAAl4B,IAAAvb,MACA0f,GAAA2sC,IAAAxxC,GAAA,SAAAG,GACA,GAAAqxC,GAAA,GAAAlxC,IAAA,MAEA,OADAkxC,GAAA5vC,YAAAzB,EAAAiF,cAAAjF,EAAAoE,WAAApE,EAAAuE,WACA8sC,GACG,SAAArxC,EAAAva,GACHua,EAAAqwC,QAAArwC,EAAAuE,UAAA9e,IACG,SAAAua,GACH,MAAAA,GAAAuE,UAAA,IAEAG,GAAAlB,KAAAkB,GAAA2sC,IAAArsD,MACA0f,GAAAlB,KAAAjD,IAAAmE,GAAA2sC,IAAA9wC,IAAAvb,MACA0f,GAAAC,UAAA,SAAA3E,GACA,GAAAy4B,GAAA/zB,GAAA+zB,KAAAz4B,EACA,OAAA9c,MAAAsd,OAAAR,EAAAy4B,EAAA,KAAAz4B,EAAAsG,oBAAAmyB,EAAAnyB,sBAAA,SAEA,wEAAA9jB,QAAA,SAAA6uD,EAAAtrD,GACAA,EAAA,EAAAA,CACA,IAAA6yC,GAAAl0B,GAAA2sC,GAAAxxC,GAAA,SAAAG,GAEA,OADAA,EAAA0E,GAAA2sC,IAAArxC,IAAAqwC,QAAArwC,EAAAuE,WAAAvE,EAAA2B,SAAA5b,GAAA,GACAia,GACK,SAAAA,EAAAva,GACLua,EAAAqwC,QAAArwC,EAAAuE,UAAA,EAAArhB,KAAAsd,MAAA/a,KACK,SAAAua,GACL,GAAAqxC,GAAA3sC,GAAA+zB,KAAAz4B,GAAA2B,QACA,OAAAze,MAAAsd,OAAAkE,GAAAC,UAAA3E,IAAAqxC,EAAAtrD,GAAA,OAAAsrD,IAAAtrD,IAEA2e,IAAA2sC,EAAA,KAAAzY,EAAA5zC,MACA0f,GAAA2sC,EAAA,KAAA9wC,IAAAq4B,EAAAr4B,IAAAvb,MACA0f,GAAA2sC,EAAA,mBAAArxC,GACA,GAAAqxC,GAAA3sC,GAAA+zB,KAAAz4B,GAAA2B,QACA,OAAAze,MAAAsd,OAAAkE,GAAAC,UAAA3E,IAAAqxC,EAAAtrD,GAAA,SAGA2e,GAAA6sC,KAAA7sC,GAAA8sC,OACA9sC,GAAA+sC,MAAA/sC,GAAA8sC,OAAAxsD,MACA0f,GAAA+sC,MAAAlxC,IAAAmE,GAAA8sC,OAAAjxC,IAAAvb,MACA0f,GAAAgtC,WAAAhtC,GAAAK,YAyNA,IAAAhE,KACA4wC,IAAA,GACAtwD,EAAA,IACAuwD,EAAA,KACGxrC,GAAA,UAAAM,GAAA,IAkGHhf,IAAA8V,OAAA,SAAAA,GACA,OACAq0C,aAAAt0C,GAAAC,GACAs0C,WAAApxC,GAAAlD,IAGA,IAAAu0C,IAAArqD,GAAA8V,QACAE,QAAA,IACAE,UAAA,IACAE,UAAA,GACAE,UAAA,QACAkF,SAAA,iBACAlD,KAAA,WACAtZ,KAAA,WACA4c,SAAA,WACAE,MAAA,wEACAE,WAAA,2CACAE,QAAA,+GACAE,aAAA,0EAEApc,IAAAwR,OAAA64C,GAAAF,aACAnqD,GAAAsqD,OAEAprC,GAAAjd,WACAkD,EAAA,EACAqP,EAAA,EACAvM,IAAA,SAAAvL,GACAyiB,GAAAziB,EAAA0F,KAAAoS,EAAA+1C,IACAprC,GAAAorC,GAAAplD,EAAA/C,KAAA+C,EAAA/C,MACAA,KAAA+C,EAAA/C,KAAAoS,GAAA+1C,GAAA/1C,EAA2CpS,KAAA+C,EAAAolD,GAAA/1C,GAE3CoT,MAAA,WACAxlB,KAAA+C,EAAA/C,KAAAoS,EAAA,GAEAk0C,QAAA,WACA,MAAAtmD,MAAA+C,GAGA,IAAAolD,IAAA,GAAArrC,GAKAlf,IAAAsqD,IAAAl9B,OAAA,SAAA1pB,EAAAgB,GACAhB,GAAA8mD,GAAA/qC,eAAA/b,EAAAzJ,MACAuwD,GAAA9mD,EAAAzJ,MAAAyJ,EAAAgB,GAEA4a,GAAA5b,EAAAgB,GAQA,IAAA8lD,KACAC,QAAA,SAAAC,EAAAhmD,GACA4a,GAAAorC,EAAAnrC,SAAA7a,IAEAimD,kBAAA,SAAAjnD,EAAAgB,GAEA,IADA,GAAAkmD,GAAAlnD,EAAAknD,SAAAvsD,GAAA,EAAAwF,EAAA+mD,EAAAryD,SACA8F,EAAAwF,GAAAyb,GAAAsrC,EAAAvsD,GAAAkhB,SAAA7a,KAGA8a,IACAqrC,OAAA,SAAAnnD,EAAAgB,GACAA,EAAA2hB,UAEAykC,MAAA,SAAApnD,EAAAgB,GACAhB,IAAAic,YACAjb,EAAAlI,MAAAkH,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAqnD,WAAA,SAAArnD,EAAAgB,GAEA,IADA,GAAAib,GAAAjc,EAAAic,YAAAthB,GAAA,EAAAwF,EAAA8b,EAAApnB,SACA8F,EAAAwF,GAAAH,EAAAic,EAAAthB,GAAAqG,EAAAlI,MAAAkH,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAsnD,WAAA,SAAAtnD,EAAAgB,GACAgb,GAAAhc,EAAAic,YAAAjb,EAAA,IAEAumD,gBAAA,SAAAvnD,EAAAgB,GAEA,IADA,GAAAib,GAAAjc,EAAAic,YAAAthB,GAAA,EAAAwF,EAAA8b,EAAApnB,SACA8F,EAAAwF,GAAA6b,GAAAC,EAAAthB,GAAAqG,EAAA,IAEAwmD,QAAA,SAAAxnD,EAAAgB,GACAsb,GAAAtc,EAAAic,YAAAjb,IAEAymD,aAAA,SAAAznD,EAAAgB,GAEA,IADA,GAAAib,GAAAjc,EAAAic,YAAAthB,GAAA,EAAAwF,EAAA8b,EAAApnB,SACA8F,EAAAwF,GAAAmc,GAAAL,EAAAthB,GAAAqG,IAEA0mD,mBAAA,SAAA1nD,EAAAgB,GAEA,IADA,GAAA2mD,GAAA3nD,EAAA2nD,WAAAhtD,GAAA,EAAAwF,EAAAwnD,EAAA9yD,SACA8F,EAAAwF,GAAAyb,GAAA+rC,EAAAhtD,GAAAqG,IAeA1E,IAAAsqD,IAAArc,KAAA,SAAAvqC,GAGA,MAFA4nD,IAAA,EACAtrD,GAAAsqD,IAAAl9B,OAAA1pB,EAAAyd,IACAmqC,GAEA,IAAAA,IAAAtqC,GAAA,GAAA9B,IACAiC,IACAkF,OAAA,WACAilC,IAAA,EAAA38C,IAEAnS,MAAAwH,EACA8b,UAAA9b,EACA+b,QAAA/b,EACAic,aAAA,WACAe,GAAA4G,QACAzG,GAAArB,UAAAK,IAEAD,WAAA,WACA,GAAA+tB,GAAA,EAAAjtB,EACAsqC,KAAArd,EAAA,IAAAt/B,GAAAs/B,IACA9sB,GAAArB,UAAAqB,GAAApB,QAAAoB,GAAA3kB,MAAAwH,GAmDAhE,IAAAsqD,IAAAiB,OAAA,WAsBA,QAAA/uD,GAAA6jB,EAAAC,GACAkrC,EAAAvtD,KAAAX,GAAAkjB,EAAAH,EAAAuG,EAAAvG,IACAC,EAAAoG,MAAApG,GACAA,EAAAuG,MAAAvG,GAEA,QAAA2K,GAAA5K,EAAAC,GACA,GAAA/K,GAAA6L,IAAAf,EAAA7P,GAAA8P,EAAA9P,IACA,IAAA0T,EAAA,CACA,GAAAunC,GAAAlqC,GAAA2C,EAAA3O,GAAAm2C,GAAAD,EAAA,IAAAA,EAAA,MAAAE,EAAApqC,GAAAmqC,EAAAD,EACA9pC,IAAAgqC,GACAA,EAAA/pC,GAAA+pC,EACA,IAAAprC,GAAAF,EAAAurC,EAAAzmD,EAAAob,EAAA,OAAAsrC,EAAAF,EAAA,GAAA36C,GAAA7L,EAAA2iB,EAAA3qB,GAAAojB,GAAA,GACA,IAAAuH,GAAA3iB,EAAAymD,EAAAC,KAAA1mD,EAAAkb,GAAA,CACA,GAAAyrC,GAAAH,EAAA,GAAA36C,EACA86C,GAAAjlC,MAAAilC,OACS,IAAAD,KAAA,aAAA/jC,GAAA3iB,EAAAymD,EAAAC,KAAA1mD,EAAAkb,GAAA,CACT,GAAAyrC,IAAAH,EAAA,GAAA36C,EACA86C,GAAAplC,MAAAolC,OAEAxrC,GAAAoG,MAAApG,GACAA,EAAAuG,MAAAvG,EAEAwH,GACAzH,EAAAurC,EACA95B,EAAAtR,EAAAH,GAAAyR,EAAAtR,EAAAoG,OAAAvG,GAEAyR,EAAAzR,EAAAuG,GAAAkL,EAAAtR,EAAAoG,KAAApG,EAAAH,GAGAuG,GAAApG,GACAH,EAAAG,MAAAH,GACAA,EAAAuG,MAAAvG,IAEAA,EAAAurC,EACA95B,EAAAtR,EAAAH,GAAAyR,EAAAtR,EAAAoG,OAAAvG,GAEAyR,EAAAzR,EAAAuG,GAAAkL,EAAAtR,EAAAoG,KAAApG,EAAAH,OAKA7jB,GAAA6jB,EAAAC,EAEA4D,GAAA3O,EAAAq2C,EAAAvrC,EAEA,QAAAP,KACAukB,EAAA7nC,MAAAyuB,EAEA,QAAAlL,KACAziB,EAAA,GAAAkjB,EAAAljB,EAAA,GAAAspB,EACAyd,EAAA7nC,QACA0nB,EAAA,KAEA,QAAA0K,GAAAvO,EAAAC,GACA,GAAA4D,EAAA,CACA,GAAA3D,GAAAF,EAAAurC,CACAG,IAAA5uD,GAAAojB,GAAA,IAAAA,KAAA,YAAAA,MACOyrC,GAAA3rC,EAAA4rC,EAAA3rC,CACPa,IAAA3kB,MAAA6jB,EAAAC,GACA2K,EAAA5K,EAAAC,GAEA,QAAAiF,KACApE,GAAArB,YAEA,QAAA0F,KACAoJ,EAAAo9B,EAAAC,GACA9qC,GAAApB,UACA5iB,GAAA4uD,GAAAhqC,KAAAvB,IAAAoG,EAAA,MACAtpB,EAAA,GAAAkjB,EAAAljB,EAAA,GAAAspB,EACA1C,EAAA,KAEA,QAAA4N,GAAAtR,EAAAoG,GACA,OAAAA,GAAApG,GAAA,EAAAoG,EAAA,IAAAA,EAEA,QAAAslC,GAAAtrD,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAEA,QAAAsrD,GAAA1vD,EAAAa,GACA,MAAAA,GAAA,IAAAA,EAAA,GAAAA,EAAA,IAAAb,MAAAa,EAAA,GAAAb,EAAAa,EAAA,IAAAA,EAAA,GAAAb,EAnGA,GAAA+jB,GAAAkG,EAAAE,EAAAC,EAAA+kC,EAAAI,EAAAC,EAAA/nC,EAAA6nC,EAAAP,EAAAluD,EACA+mC,GACA7nC,QACAsjB,YACAC,UACAE,aAAA,WACAokB,EAAA7nC,MAAAoyB,EACAyV,EAAAvkB,UAAAyF,EACA8e,EAAAtkB,QAAAyF,EACAumC,EAAA,EACA5qC,GAAAlB,gBAEAC,WAAA,WACAiB,GAAAjB,aACAmkB,EAAA7nC,QACA6nC,EAAAvkB,YACAukB,EAAAtkB,UACAiB,GAAA,GAAAR,IAAAoG,EAAA,KAAAF,IAAAG,EAAA,KAAsEklC,EAAAhqC,GAAA8E,EAAA,GAA6BklC,GAAAhqC,KAAA2E,GAAA,IACnGppB,EAAA,GAAAkjB,EAAAljB,EAAA,GAAAspB,GAmFA,iBAAA8jC,GACA7jC,EAAAD,IAAApG,EAAAkG,EAAArR,KACAm2C,KACAxrD,GAAAsqD,IAAAl9B,OAAAs9B,EAAArmB,EACA,IAAAxgC,GAAA2nD,EAAAjzD,MACA,IAAAsL,EAAA,CACA2nD,EAAAnnC,KAAA6nC,EACA,QAAArrD,GAAAxC,EAAA,EAAAuC,EAAA4qD,EAAA,GAAAxX,GAAApzC,GAAyDvC,EAAAwF,IAAOxF,EAChEwC,EAAA2qD,EAAAntD,GACA8tD,EAAAtrD,EAAA,GAAAD,IAAAurD,EAAAtrD,EAAA,GAAAD,IACAkxB,EAAAlxB,EAAA,GAAAC,EAAA,IAAAixB,EAAAlxB,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAC,EAAA,IACAixB,EAAAjxB,EAAA,GAAAD,EAAA,IAAAkxB,EAAAlxB,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAC,EAAA,KAEAmzC,EAAA/1C,KAAA2C,EAAAC,EAIA,QADA0f,GACA1f,EADAurD,GAAA/2C,IACAxR,EAAAmwC,EAAAz7C,OAAA,EAAA8F,EAAA,EAAAuC,EAAAozC,EAAAnwC,GAAgExF,GAAAwF,EAAQjD,EAAAC,IAAAxC,EACxEwC,EAAAmzC,EAAA31C,IACAkiB,EAAAuR,EAAAlxB,EAAA,GAAAC,EAAA,KAAAurD,MAAA7rC,EAAAC,EAAA3f,EAAA,GAAA+lB,EAAAhmB,EAAA,IAIA,MADA4qD,GAAAluD,EAAA,KACAkjB,IAAAnL,KAAAqR,IAAArR,MAAAvU,sBAAA0f,EAAAkG,IAAAE,EAAAC,QAGA7mB,GAAAsqD,IAAA+B,SAAA,SAAA3oD,GACAwe,GAAAQ,GAAAP,GAAAC,GAAAC,GAAAM,GAAAC,GAAAC,GAAAO,GAAAC,GAAAC,GAAA,EACAtjB,GAAAsqD,IAAAl9B,OAAA1pB,EAAAof,GACA,IAAArmB,GAAA2mB,GAAA1mB,EAAA2mB,GAAA/e,EAAAgf,GAAAhZ,EAAA7N,IAAAC,IAAA4H,GACA,OAAAgG,GAAA0uB,KACAv8B,EAAAkmB,GAAAjmB,EAAAkmB,GAAAte,EAAAue,GACAH,GAAAX,KAAAtlB,EAAA0lB,GAAAzlB,EAAA0lB,GAAA9d,EAAA+d,KACA/X,EAAA7N,IAAAC,IAAA4H,KACA00B,KAAAl4B,UAEAtF,KAAAuV,MAAArU,EAAAD,GAAAuU,GAAAnC,GAAAvK,EAAA9I,KAAAyV,KAAA3G,IAAA0G,IAEA,IAAAkR,IAAAQ,GAAAP,GAAAC,GAAAC,GAAAM,GAAAC,GAAAC,GAAAO,GAAAC,GAAAC,GACAR,IACAuD,OAAAriB,EACAxH,MAAAwlB,GACAlC,UAAAwC,GACAvC,QAAAgD,GACA9C,aAAA,WACA6C,GAAAhD,UAAAkD,IAEA9C,WAAA,WACA4C,GAAAhD,UAAAwC,KAqRAsO,GAAA/L,GAAAnB,GAAA+C,GAAAU,KAAAxY,OAAA,IAsPA+c,GAAA,GACA1rB,IAAAsqD,IAAAv5B,WAAA,WACA,GAAAtO,GAAAF,EAAA4H,EAAAC,EAAAgD,EAAApJ,EAAA+M,GACA3D,OAAA,SAAA4D,GAIA,MAHA5D,OAAAqD,OAAA,GACArD,EAAApJ,EAAAgN,GACA5D,EAAAqD,OAAA,EACArD,GAEA4K,OAAA,SAAAr+B,GACA,MAAA6E,WAAAjG,QACAyrB,EAAAyG,GAAAhI,GAAA9oB,EAAA,MAAA4oB,GAAA5oB,EAAA,MAAAwwB,GAAAxwB,EAAA,MAAAywB,GAAAzwB,EAAA,OACAyzB,MAAAqD,OAAA,EAAArD,EAAA,MACA2D,KAHAtO,EAAAF,IAAA4H,EAAAC,KAMA,OAAA2G,GAAAiH,SAAA,mBA4JAh4B,GAAAsqD,IAAAgC,eAAA,WACA,MAAAzgC,IAAAI,MACGsgC,IAAAtgC,GACHjsB,GAAAsqD,IAAAkC,OAAA,WACA,MAAAxsD,IAAAsqD,IAAAgC,iBAAArnC,QAAA,OAAAsL,SAAA,UAAAvE,WAAA,YAAArW,MAAA,OAEA3V,GAAAsqD,IAAAmC,UAAA,WASA,QAAAA,GAAA9sC,GACA,GAAAljB,GAAAkjB,EAAA,GAAAjjB,EAAAijB,EAAA,EAGA,OAFAnjB,GAAA,KACAkwD,EAAAjwD,EAAAC,GAAAF,IAAAmwD,EAAAlwD,EAAAC,GAAAF,IAAAowD,EAAAnwD,EAAAC,GACAF,EAZA,GAGAA,GAIKkwD,EAAAC,EAAAC,EAPLC,EAAA7sD,GAAAsqD,IAAAkC,SACAM,EAAA9sD,GAAAsqD,IAAAgC,iBAAArnC,QAAA,QAAAsL,SAAA,SAAAvE,WAAA,QACA+gC,EAAA/sD,GAAAsqD,IAAAgC,iBAAArnC,QAAA,QAAAsL,SAAA,SAAAvE,WAAA,OACAghC,GACAxwD,MAAA,SAAAC,EAAAC,GACAF,GAAAC,EAAAC,IAsEA,OA7DA+vD,GAAAhpC,OAAA,SAAA9D,GACA,GAAA/d,GAAAirD,EAAAl3C,QAAAnB,EAAAq4C,EAAA57B,YAAAx0B,GAAAkjB,EAAA,GAAAnL,EAAA,IAAA5S,EAAAlF,GAAAijB,EAAA,GAAAnL,EAAA,IAAA5S,CACA,QAAAlF,GAAA,KAAAA,EAAA,MAAAD,IAAA,MAAAA,GAAA,KAAAqwD,EAAApwD,GAAA,MAAAA,EAAA,MAAAD,IAAA,MAAAA,GAAA,KAAAswD,EAAAF,GAAAppC,OAAA9D,IAEA8sC,EAAAr/B,OAAA,SAAAA,GACA,GAAA6/B,GAAAJ,EAAAz/B,UAAA8/B,EAAAJ,EAAA1/B,UAAA+/B,EAAAJ,EAAA3/B,SACA,QACA5wB,MAAA,SAAAC,EAAAC,GACAuwD,EAAAzwD,MAAAC,EAAAC,GACAwwD,EAAA1wD,MAAAC,EAAAC,GACAywD,EAAA3wD,MAAAC,EAAAC,IAEA2pB,OAAA,WACA4mC,EAAA5mC,SACA6mC,EAAA7mC,SACA8mC,EAAA9mC,UAEAvG,UAAA,WACAmtC,EAAAntC,YACAotC,EAAAptC,YACAqtC,EAAArtC,aAEAC,QAAA,WACAktC,EAAAltC,UACAmtC,EAAAntC,UACAotC,EAAAptC,WAEAE,aAAA,WACAgtC,EAAAhtC,eACAitC,EAAAjtC,eACAktC,EAAAltC,gBAEAC,WAAA,WACA+sC,EAAA/sC,aACAgtC,EAAAhtC,aACAitC,EAAAjtC,gBAIAusC,EAAAv1C,UAAA,SAAAvd,GACA,MAAA6E,WAAAjG,QACAs0D,EAAA31C,UAAAvd,GACAmzD,EAAA51C,UAAAvd,GACAozD,EAAA71C,UAAAvd,GACA8yD,GAJAI,EAAA31C,aAMAu1C,EAAA92C,MAAA,SAAAhc,GACA,MAAA6E,WAAAjG,QACAs0D,EAAAl3C,MAAAhc,GACAmzD,EAAAn3C,MAAA,IAAAhc,GACAozD,EAAAp3C,MAAAhc,GACA8yD,EAAAx7B,UAAA47B,EAAA57B,cAJA47B,EAAAl3C,SAMA82C,EAAAx7B,UAAA,SAAAt3B,GACA,IAAA6E,UAAAjG,OAAA,MAAAs0D,GAAA57B,WACA,IAAArvB,GAAAirD,EAAAl3C,QAAAlZ,GAAA9C,EAAA,GAAA+C,GAAA/C,EAAA,EAIA,OAHA+yD,GAAAG,EAAA57B,UAAAt3B,GAAAo3B,aAAAt0B,EAAA,KAAAmF,EAAAlF,EAAA,KAAAkF,IAAAnF,EAAA,KAAAmF,EAAAlF,EAAA,KAAAkF,KAAAwrB,OAAA4/B,GAAAxwD,MACAmwD,EAAAG,EAAA77B,WAAAx0B,EAAA,KAAAmF,EAAAlF,EAAA,KAAAkF,IAAAmvB,aAAAt0B,EAAA,KAAAmF,EAAAmgB,GAAArlB,EAAA,IAAAkF,EAAAmgB,KAAAtlB,EAAA,KAAAmF,EAAAmgB,GAAArlB,EAAA,KAAAkF,EAAAmgB,MAAAqL,OAAA4/B,GAAAxwD,MACAowD,EAAAG,EAAA97B,WAAAx0B,EAAA,KAAAmF,EAAAlF,EAAA,KAAAkF,IAAAmvB,aAAAt0B,EAAA,KAAAmF,EAAAmgB,GAAArlB,EAAA,KAAAkF,EAAAmgB,KAAAtlB,EAAA,KAAAmF,EAAAmgB,GAAArlB,EAAA,KAAAkF,EAAAmgB,MAAAqL,OAAA4/B,GAAAxwD,MACAiwD,GAEAA,EAAA92C,MAAA,MAEA,IAAAy3C,IAAA5gC,GA2BAK,GAAAE,GAAAD,GAAAE,GA3BAL,IACAnwB,MAAAwH,EACA8b,UAAA9b,EACA+b,QAAA/b,EACAic,aAAA,WACAuM,GAAA,EACAG,GAAA7M,UAAAyM,IAEArM,WAAA,WACAyM,GAAA7M,UAAA6M,GAAA5M,QAAA4M,GAAAnwB,MAAAwH,EACAopD,IAAAjwD,GAAAqvB,GAAA,KAkBA6gC,IACA7wD,MAAAowB,GACA9M,UAAA9b,EACA+b,QAAA/b,EACAic,aAAAjc,EACAkc,WAAAlc,GAwDA0pB,IACAlxB,MAAAgxB,GACA1N,UAAA2N,GACA1N,QAAA4N,GACA1N,aAAA,WACAyN,GAAA5N,UAAA8N,IAEA1N,WAAA,WACAwN,GAAAlxB,MAAAgxB,GACAE,GAAA5N,UAAA2N,GACAC,GAAA3N,QAAA4N,IAoKA3tB,IAAAsqD,IAAAhe,KAAA,WAEA,QAAAA,GAAA5oC,GAMA,MALAA,KACA,kBAAA6pB,IAAA+/B,EAAA//B,eAAA/pB,MAAApB,KAAA5D,YACA+uD,KAAA98B,QAAA88B,EAAAC,EAAAF,IACAttD,GAAAsqD,IAAAl9B,OAAA1pB,EAAA6pD,IAEAD,EAAA1uD,SAiCA,QAAAgpB,KAEA,MADA2lC,GAAA,KACAjhB,EA1CA,GAAAtc,GAAAlC,EAAA0/B,EAAAF,EAAAC,EAAAhgC,EAAA,GA4CA,OAnCA+e,GAAA2B,KAAA,SAAAvqC,GAGA,MAFA0pD,IAAA,EACAptD,GAAAsqD,IAAAl9B,OAAA1pB,EAAA8pD,EAAA7gC,KACAygC,IAEA9gB,EAAA+f,SAAA,SAAA3oD,GAGA,MAFAye,IAAAC,GAAAC,GAAAM,GAAAC,GAAAC,GAAAO,GAAAC,GAAAC,GAAA,EACAtjB,GAAAsqD,IAAAl9B,OAAA1pB,EAAA8pD,EAAA9/B,KACApK,IAAAF,GAAAE,GAAAD,GAAAC,IAAAT,IAAAF,GAAAE,GAAAD,GAAAC,IAAAR,IAAAF,GAAAE,GAAAD,GAAAC,KAAAvhB,UAEAwrC,EAAAif,OAAA,SAAA7nD,GAGA,MAFAopB,IAAAE,KAAAH,GAAAE,GAAA1X,KACArV,GAAAsqD,IAAAl9B,OAAA1pB,EAAA8pD,EAAAH,OACAxgC,GAAAE,KAAAD,GAAAE,MAEAsf,EAAAtc,WAAA,SAAAr2B,GACA,MAAA6E,WAAAjG,QACAi1D,GAAAx9B,EAAAr2B,KAAAyzB,QAAAwC,GAAAj2B,GAAAwJ,EACAykB,KAFAoI,GAIAsc,EAAAxe,QAAA,SAAAn0B,GACA,MAAA6E,WAAAjG,QACA+0D,EAAA,OAAAx/B,EAAAn0B,GAAA,GAAAszB,IAAA,GAAAY,IAAAl0B,GACA,kBAAA4zB,IAAA+/B,EAAA//B,eACA3F,KAHAkG,GAKAwe,EAAA/e,YAAA,SAAA5zB,GACA,MAAA6E,WAAAjG,QACAg1B,EAAA,kBAAA5zB,MAAA2zD,EAAA//B,aAAA5zB,OACA2yC,GAFA/e,GAQA+e,EAAAtc,WAAAhwB,GAAAsqD,IAAAmC,aAAA3+B,QAAA,OAUA9tB,GAAAsqD,IAAA9pB,UAAA,SAAAoQ,GACA,OACAxjB,OAAA,SAAAA,GACA,GAAAoT,GAAA,GAAA1Q,IAAA1C,EACA,QAAAxrB,KAAAgvC,GAAApQ,EAAA5+B,GAAAgvC,EAAAhvC,EACA,OAAA4+B,MAOA1Q,GAAA7tB,WACAzF,MAAA,SAAAC,EAAAC,GACA0F,KAAAgrB,OAAA5wB,MAAAC,EAAAC,IAEA2pB,OAAA,WACAjkB,KAAAgrB,OAAA/G,UAEAvG,UAAA,WACA1d,KAAAgrB,OAAAtN,aAEAC,QAAA,WACA3d,KAAAgrB,OAAArN,WAEAE,aAAA,WACA7d,KAAAgrB,OAAAnN,gBAEAC,WAAA,WACA9d,KAAAgrB,OAAAlN,eAuBAlgB,GAAAsqD,IAAAt6B,WAAAD,GACA/vB,GAAAsqD,IAAAmD,kBAAA1hC,IAsFA/rB,GAAAsqD,IAAAoD,gBAAA,WACA,MAAA39B,IAAAmB,MACGq7B,IAAAr7B,GAAAzN,OAAAyN,GACHlxB,GAAAsqD,IAAA/4B,SAAA,SAAAtM,GAEA,QAAAiH,GAAAvM,GAEA,MADAA,GAAAsF,EAAAtF,EAAA,GAAAnP,GAAAmP,EAAA,GAAAnP,IACAmP,EAAA,IAAA3O,GAAA2O,EAAA,IAAA3O,GAAA2O,EAMA,MATAsF,GAAAmL,GAAAnL,EAAA,OAAAzU,GAAAyU,EAAA,GAAAzU,GAAAyU,EAAA1sB,OAAA,EAAA0sB,EAAA,GAAAzU,GAAA,GAKA0b,EAAAzI,OAAA,SAAA9D,GAEA,MADAA,GAAAsF,EAAAxB,OAAA9D,EAAA,GAAAnP,GAAAmP,EAAA,GAAAnP,IACAmP,EAAA,IAAA3O,GAAA2O,EAAA,IAAA3O,GAAA2O,GAEAuM,GAKAiF,GAAA1N,OAAAyN,GA0BAlxB,GAAAsqD,IAAAn1B,OAAA,WAEA,QAAAA,KACA,GAAA5E,GAAA,kBAAAyoB,KAAAx1C,MAAApB,KAAA5D,WAAAw6C,EAAA/zB,EAAAmL,IAAAG,EAAA,GAAA/f,IAAA+f,EAAA,GAAA/f,GAAA,GAAAiT,OAAA4B,IAOA,OANAvB,GAAA,aACAtnB,MAAA,SAAAC,EAAAC,GACA2oB,EAAApnB,KAAAxB,EAAAwoB,EAAAxoB,EAAAC,IACAD,EAAA,IAAAuU,GAAAvU,EAAA,IAAAuU,OAIA/W,KAAA,UACA0lB,aAAA0F,IAXA,GAAAyM,GAAAhO,EAAAk1B,GAAA,KAAA9hC,EAAA,CA6BA,OAfAie,GAAA6jB,OAAA,SAAAv8C,GACA,MAAA+B,WAAAjG,QACAygD,EAAAv8C,EACA04B,GAFA6jB,GAIA7jB,EAAArD,MAAA,SAAAr1B,GACA,MAAA+B,WAAAjG,QACAurB,EAAAmG,IAAA6H,GAAAr1B,GAAA+T,GAAA0G,EAAA1G,IACA2kB,GAFArD,GAIAqD,EAAAje,UAAA,SAAAvd,GACA,MAAA6E,WAAAjG,QACAurB,EAAAmG,GAAA6H,EAAAthB,IAAA0G,GAAAvd,GAAA6W,IACA2kB,GAFAje,GAIAie,EAAArD,MAAA,KA0BA9xB,GAAAsqD,IAAAz3B,SAAA,SAAAjyB,EAAAC,GACA,GAAA2T,GAAAm5C,GAAA9sD,EAAA,GAAAD,EAAA,IAAA4P,GAAAkW,EAAA9lB,EAAA,GAAA4P,GAAAqW,EAAAhmB,EAAA,GAAA2P,GAAAo9C,EAAApyD,KAAA6T,IAAAs+C,GAAA56B,EAAAv3B,KAAA+U,IAAAo9C,GAAA9sC,EAAArlB,KAAA6T,IAAAqX,GAAA3F,EAAAvlB,KAAA+U,IAAAmW,GAAAmnC,EAAAryD,KAAA6T,IAAAwX,GAAAG,EAAAxrB,KAAA+U,IAAAsW,EACA,OAAArrB,MAAAuV,MAAAvV,KAAAyV,MAAAuD,EAAAwS,EAAA4mC,GAAAp5C,KAAAuM,EAAA8sC,EAAAhtC,EAAAmG,EAAA+L,GAAAve,GAAAqM,EAAAgtC,EAAA9sC,EAAAiG,EAAA+L,IAEA/yB,GAAAsqD,IAAAwD,UAAA,WAEA,QAAAA,KACA,OACA7zD,KAAA,kBACA0lB,YAAA4G,KAGA,QAAAA,KACA,MAAAvmB,IAAA1C,MAAA9B,KAAAga,KAAAu4C,EAAAC,KAAAC,EAAAD,GAAAjyD,IAAAqf,GAAAvW,OAAA7E,GAAA1C,MAAA9B,KAAAga,KAAA04C,EAAAC,KAAAC,EAAAD,GAAApyD,IAAAyhB,IAAA3Y,OAAA7E,GAAA1C,MAAA9B,KAAAga,KAAAiN,EAAA9lB,KAAAwtB,EAAAxtB,GAAAiP,OAAA,SAAAnP,GACA,MAAAU,IAAAV,EAAAuxD,GAAAjsC,KACOhmB,IAAAU,IAAAoI,OAAA7E,GAAA1C,MAAA9B,KAAAga,KAAA+M,EAAA3lB,KAAAwtB,EAAAxtB,GAAAgP,OAAA,SAAAlP,GACP,MAAAS,IAAAT,EAAAyxD,GAAApsC,KACOhmB,IAAAW,IAZP,GAAAytB,GAAA1H,EAAAwrC,EAAAF,EAAA3jC,EAAA7H,EAAA6rC,EAAAF,EAAAzxD,EAAAC,EAAA0e,EAAAoC,EAAA7gB,EAAA,GAAAC,EAAAD,EAAAqxD,EAAA,GAAAG,EAAA,IAAAj3C,EAAA,GAuEA,OAzDA42C,GAAAvnC,MAAA,WACA,MAAAA,KAAAxqB,IAAA,SAAA4jB,GACA,OACA1lB,KAAA,aACA0lB,kBAIAmuC,EAAAO,QAAA,WACA,OACAp0D,KAAA,UACA0lB,aAAAvE,EAAA2yC,GAAAlpD,OAAA2Y,EAAA4wC,GAAA1rD,MAAA,GAAA0Y,EAAA6yC,GAAAx3C,UAAA/T,MAAA,GAAA8a,EAAA0wC,GAAAz3C,UAAA/T,MAAA,OAGAorD,EAAA91B,OAAA,SAAAr+B,GACA,MAAA6E,WAAAjG,OACAu1D,EAAAQ,YAAA30D,GAAA40D,YAAA50D,GADAm0D,EAAAS,eAGAT,EAAAQ,YAAA,SAAA30D,GACA,MAAA6E,WAAAjG,QACAw1D,GAAAp0D,EAAA,MAAAs0D,GAAAt0D,EAAA,MACAu0D,GAAAv0D,EAAA,MAAAy0D,GAAAz0D,EAAA,MACAo0D,EAAAE,IAAAt0D,EAAAo0D,IAAAE,IAAAt0D,GACAu0D,EAAAE,IAAAz0D,EAAAu0D,IAAAE,IAAAz0D,GACAm0D,EAAA52C,gBALA62C,EAAAG,IAAAD,EAAAG,KAOAN,EAAAS,YAAA,SAAA50D,GACA,MAAA6E,WAAAjG,QACAkqB,GAAA9oB,EAAA,MAAAwwB,GAAAxwB,EAAA,MACA4oB,GAAA5oB,EAAA,MAAAywB,GAAAzwB,EAAA,MACA8oB,EAAA0H,IAAAxwB,EAAA8oB,IAAA0H,IAAAxwB,GACA4oB,EAAA6H,IAAAzwB,EAAA4oB,IAAA6H,IAAAzwB,GACAm0D,EAAA52C,gBALAuL,EAAAF,IAAA4H,EAAAC,KAOA0jC,EAAA11C,KAAA,SAAAze,GACA,MAAA6E,WAAAjG,OACAu1D,EAAAU,UAAA70D,GAAA80D,UAAA90D,GADAm0D,EAAAW,aAGAX,EAAAU,UAAA,SAAA70D,GACA,MAAA6E,WAAAjG,QACAy1D,GAAAr0D,EAAA,GAAAw0D,GAAAx0D,EAAA,GACAm0D,IAFAE,EAAAG,IAIAL,EAAAW,UAAA,SAAA90D,GACA,MAAA6E,WAAAjG,QACAoE,GAAAhD,EAAA,GAAAiD,GAAAjD,EAAA,GACAm0D,IAFAnxD,EAAAC,IAIAkxD,EAAA52C,UAAA,SAAAvd,GACA,MAAA6E,WAAAjG,QACA2e,GAAAvd,EACA8C,EAAAu1B,GAAAzP,EAAA6H,EAAA,IACA1tB,EAAAu1B,GAAAxP,EAAA0H,EAAAjT,GACAkE,EAAA4W,GAAAk8B,EAAAE,EAAA,IACA5wC,EAAAyU,GAAA87B,EAAAE,EAAA/2C,GACA42C,GANA52C,GAQA42C,EAAAQ,eAAA,QAAAvsC,KAAA,OAAAA,MAAAwsC,eAAA,QAAAxsC,KAAA,OAAAA,OAwBA/hB,GAAAsqD,IAAAoE,SAAA,WAEA,QAAAA,KACA,OACAz0D,KAAA,aACA0lB,aAAAgvC,GAAArrD,EAAAE,MAAApB,KAAA5D,WAAAowD,GAAAvrD,EAAAG,MAAApB,KAAA5D,aAJA,GAAAmwD,GAAAC,EAAAtrD,EAAA4uB,GAAA7uB,EAAA8uB,EAuBA,OAhBAu8B,GAAA77B,SAAA,WACA,MAAA7yB,IAAAsqD,IAAAz3B,SAAA87B,GAAArrD,EAAAE,MAAApB,KAAA5D,WAAAowD,GAAAvrD,EAAAG,MAAApB,KAAA5D,aAEAkwD,EAAAprD,OAAA,SAAA3J,GACA,MAAA6E,WAAAjG,QACA+K,EAAA3J,EAAAg1D,EAAA,kBAAAh1D,GAAA,KAAAA,EACA+0D,GAFAprD,GAIAorD,EAAArrD,OAAA,SAAA1J,GACA,MAAA6E,WAAAjG,QACA8K,EAAA1J,EAAAi1D,EAAA,kBAAAj1D,GAAA,KAAAA,EACA+0D,GAFArrD,GAIAqrD,EAAAx3C,UAAA,WACA,MAAA1Y,WAAAjG,OAAAm2D,EAAA,GAEAA,GAEA1uD,GAAAsqD,IAAAxmC,YAAA,SAAAxgB,EAAAD,GACA,MAAA+uB,IAAA9uB,EAAA,GAAAkN,GAAAlN,EAAA,GAAAkN,GAAAnN,EAAA,GAAAmN,GAAAnN,EAAA,GAAAmN,KAaAxQ,GAAAsqD,IAAA/xD,OAAA,SAAAmL,GAGA,MAFAsvB,IAAA,EACAhzB,GAAAsqD,IAAAl9B,OAAA1pB,EAAAuvB,IACAD,GAEA,IAAAA,IACAC,IACA5M,OAAAriB,EACAxH,MAAAwH,EACA8b,UAAAgT,GACA/S,QAAA/b,EACAic,aAAAjc,EACAkc,WAAAlc,GA4BA6qD,GAAA37B,GAAA,SAAA47B,GACA,MAAAtzD,MAAAyV,KAAA,KAAA69C,KACG,SAAA3iC,GACH,SAAA3wB,KAAAuT,KAAAod,EAAA,MAEAnsB,GAAAsqD,IAAAyE,mBAAA,WACA,MAAAh/B,IAAA8+B,MACGtC,IAAAsC,EACH,IAAAG,IAAA97B,GAAA,SAAA47B,GACA,GAAA/mD,GAAAvM,KAAAoT,KAAAkgD,EACA,OAAA/mD,MAAAvM,KAAA6T,IAAAtH,IACG5E,IACHnD,GAAAsqD,IAAA2E,qBAAA,WACA,MAAAl/B,IAAAi/B,MACGzC,IAAAyC,IAqBHhvD,GAAAsqD,IAAA4E,eAAA,WACA,MAAArjC,IAAA0H,MACGg5B,IAAAh5B,IAcHvzB,GAAAsqD,IAAA6E,iBAAA,WACA,MAAAtjC,IAAA8H,MACG44B,IAAA54B,EACH,IAAAy7B,IAAAl8B,GAAA,SAAA47B,GACA,SAAAA,GACGtzD,KAAA0rB,OACHlnB,GAAAsqD,IAAA+E,SAAA,WACA,MAAAt/B,IAAAq/B,MACG7C,IAAA6C,GAIH17B,GAAAjQ,OAAA,SAAAhnB,EAAAC,GACA,OAAAD,EAAA,EAAAjB,KAAA0rB,KAAA1rB,KAAAyT,IAAAvS,IAAAoS,MA0BA9O,GAAAsqD,IAAAgF,SAAA,WACA,MAAAz7B,IAAAH,MACG64B,IAAA74B,EACH,IAAA67B,IAAAr8B,GAAA,WACA,UACG13B,KAAAuT,OACH/O,GAAAsqD,IAAAkF,aAAA,WACA,MAAAz/B,IAAAw/B,MACGhD,IAAAgD,EACH,IAAAE,IAAAv8B,GAAA,SAAA47B,GACA,YAAAA,IACG,SAAA3iC,GACH,SAAA3wB,KAAA0rB,KAAAiF,MAEAnsB,GAAAsqD,IAAAoF,cAAA,WACA,MAAA3/B,IAAA0/B,MACGlD,IAAAkD,GAIH17B,GAAAtQ,OAAA,SAAAhnB,EAAAC,GACA,QAAAA,EAAA,EAAAlB,KAAA0rB,KAAA1rB,KAAAyT,IAAAxS,IAAAqS,MAEA9O,GAAAsqD,IAAAqF,mBAAA,WACA,GAAA3/B,GAAA6D,GAAAE,IAAAxD,EAAAP,EAAAO,OAAAtL,EAAA+K,EAAA/K,MAQA,OAPA+K,GAAAO,OAAA,SAAA52B,GACA,MAAAA,GAAA42B,IAAA52B,EAAA,GAAAA,EAAA,MAAAA,EAAA42B,KAAA52B,EAAA,IAAAA,EAAA,MAEAq2B,EAAA/K,OAAA,SAAAtrB,GACA,MAAAA,GAAAsrB,GAAAtrB,EAAA,GAAAA,EAAA,GAAAA,EAAApB,OAAA,EAAAoB,EAAA,YAAAA,EAAAsrB,KACAtrB,EAAA,GAAAA,EAAA,GAAAA,EAAA,SAEAsrB,GAAA,WACGsnC,IAAAx4B,GACH/zB,GAAA4vD,QAOA5vD,GAAA4vD,KAAAz7B,KAAA,SAAA07B,GAGA,QAAA17B,GAAAtqB,GACA,GAAAA,EAAAtR,OAAA,UACA,IAAA8F,GAAA27B,EAAA9nB,GAAAzV,GAAAw9B,EAAA/nB,GAAAxV,GAAAmH,EAAAgG,EAAAtR,OAAAisB,KAAAsrC,IACA,KAAAzxD,EAAA,EAAiBA,EAAAwF,EAAOxF,IACxBmmB,EAAAvmB,OAAA+7B,EAAAzuB,KAAAnJ,KAAAyH,EAAAxL,OAAA47B,EAAA1uB,KAAAnJ,KAAAyH,EAAAxL,SAGA,KADAmmB,EAAAH,KAAAgQ,IACAh2B,EAAA,EAAiBA,EAAAwF,EAAOxF,IAAAyxD,EAAA7xD,MAAAumB,EAAAnmB,GAAA,IAAAmmB,EAAAnmB,GAAA,IACxB,IAAA0xD,GAAA77B,GAAA1P,GAAAwrC,EAAA97B,GAAA47B,GACAG,EAAAD,EAAA,KAAAD,EAAA,GAAAG,EAAAF,IAAAz3D,OAAA,KAAAw3D,IAAAx3D,OAAA,GAAAstB,IACA,KAAAxnB,EAAA0xD,EAAAx3D,OAAA,EAAgC8F,GAAA,IAAQA,EAAAwnB,EAAA5nB,KAAA4L,EAAA2a,EAAAurC,EAAA1xD,IAAA,IACxC,KAAAA,GAAA4xD,EAAyB5xD,EAAA2xD,EAAAz3D,OAAA23D,IAA8B7xD,EAAAwnB,EAAA5nB,KAAA4L,EAAA2a,EAAAwrC,EAAA3xD,IAAA,IACvD,OAAAwnB,GAdA,GAAAppB,GAAAu3B,GAAAt3B,EAAAu3B,EACA,OAAAz1B,WAAAjG,OAAA47B,EAAA07B,IAeA17B,EAAA13B,EAAA,SAAA9C,GACA,MAAA6E,WAAAjG,QAAAkE,EAAA9C,EAAAw6B,GAAA13B,GAEA03B,EAAAz3B,EAAA,SAAA/C,GACA,MAAA6E,WAAAjG,QAAAmE,EAAA/C,EAAAw6B,GAAAz3B,GAEAy3B,IAaAn0B,GAAA4vD,KAAA/pC,QAAA,SAAAlG,GAEA,MADA9Z,IAAA8Z,EAAAwwC,IACAxwC,EAEA,IAAAwwC,IAAAnwD,GAAA4vD,KAAA/pC,QAAA5jB,YACAkuD,IAAAliB,KAAA,WAEA,IADA,GAAArtC,GAAAvC,GAAA,EAAAwF,EAAAzB,KAAA7J,OAAAsI,EAAAuB,KAAAyB,EAAA,GAAAoqC,EAAA,IACA5vC,EAAAwF,GACAjD,EAAAC,EACAA,EAAAuB,KAAA/D,GACA4vC,GAAArtC,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,EAEA,UAAAotC,GAEAkiB,GAAA9D,SAAA,SAAAzqD,GACA,GAAAhB,GAAAmH,EAAA1J,GAAA,EAAAwF,EAAAzB,KAAA7J,OAAAkE,EAAA,EAAAC,EAAA,EAAAmE,EAAAuB,KAAAyB,EAAA,EAEA,KADArF,UAAAjG,SAAAqJ,GAAA,KAAAQ,KAAA6rC,WACA5vC,EAAAwF,GACAjD,EAAAC,EACAA,EAAAuB,KAAA/D,GACA0J,EAAAnH,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,GACAnE,IAAAmE,EAAA,GAAAC,EAAA,IAAAkH,EACArL,IAAAkE,EAAA,GAAAC,EAAA,IAAAkH,CAEA,QAAAtL,EAAAmF,EAAAlF,EAAAkF,IAEAuuD,GAAAnsC,KAAA,SAAAD,GAEA,IADA,GAAAwjB,GAAAl9B,EAAAC,EAAAzJ,EAAAkH,EAAArG,EAAAke,EAAAmV,GAAAhR,GAAA1lB,GAAA,EAAAwF,EAAAzB,KAAA7J,OAAAw8B,GAAA3yB,MAAAxB,EAAAwB,KAAAyB,EAAA,KACAxF,EAAAwF,GAAA,CAMA,IALA0jC,EAAAxjB,EAAArhB,QACAqhB,EAAAxrB,OAAA,EACAsI,EAAAuB,KAAA/D,GACA0J,EAAAw/B,GAAAj9B,EAAAi9B,EAAAhvC,OAAAqnB,GAAA,GACAvV,GAAA,IACAA,EAAAC,GACA5I,EAAA6lC,EAAAl9B,GACAiqB,GAAA5yB,EAAAd,EAAAC,IACAyzB,GAAAvsB,EAAAnH,EAAAC,IACAkjB,EAAA9lB,KAAAs2B,GAAAxsB,EAAArG,EAAAd,EAAAC,IAEAkjB,EAAA9lB,KAAAyD,IACS4yB,GAAAvsB,EAAAnH,EAAAC,IACTkjB,EAAA9lB,KAAAs2B,GAAAxsB,EAAArG,EAAAd,EAAAC,IAEAkH,EAAArG,CAEAke,IAAAmE,EAAA9lB,KAAA8lB,EAAA,IACAnjB,EAAAC,EAEA,MAAAkjB,GAaA,IAAAuV,IAAAf,GAAA9C,GAAA2D,GAAAD,GAAA7D,MAAA4D,KAgIApB,IAAA71B,UAAAw2B,QAAA,WAEA,IADA,GAAAt9B,GAAAg9B,EAAA/1B,KAAAnH,MAAAi9B,EAAAC,EAAA5/B,OACA2/B,KACA/8B,EAAAg9B,EAAAD,GAAA/8B,KACAA,EAAA0F,GAAA1F,EAAAyF,GAAAu3B,EAAAO,OAAAR,EAAA,EAGA,OADAC,GAAA9T,KAAAwU,IACAV,EAAA5/B,QA4MAogC,GAAA12B,WACAhD,MAAA,WACA,MAAAmD,MAAAjH,KAAAkJ,IAAAjC,KAAA8yB,KAAA9yB,KAAAjH,KAAAyF,EAAAwB,KAAAjH,KAAA0F,GAEAw3B,IAAA,WACA,MAAAj2B,MAAAjH,KAAAkJ,IAAAjC,KAAA8yB,KAAA9yB,KAAAjH,KAAA0F,EAAAuB,KAAAjH,KAAAyF,IASAu5B,GAAAl4B,WACAg1B,OAAA,SAAAnf,EAAA9c,GACA,GAAAyO,GAAA2mD,EAAAC,CACA,IAAAv4C,EAAA,CAKA,GAJA9c,EAAA66B,EAAA/d,EACA9c,EAAA+6B,EAAAje,EAAAie,EACAje,EAAAie,IAAAje,EAAAie,EAAAF,EAAA76B,GACA8c,EAAAie,EAAA/6B,EACA8c,EAAAif,EAAA,CAEA,IADAjf,IAAAif,EACAjf,EAAA6B,GAAA7B,IAAA6B,CACA7B,GAAA6B,EAAA3e,MAEA8c,GAAAif,EAAA/7B,CAEAyO,GAAAqO,MACO1V,MAAAzI,GACPme,EAAAyiB,GAAAn4B,KAAAzI,GACAqB,EAAA66B,EAAA,KACA76B,EAAA+6B,EAAAje,EACAA,EAAA+d,EAAA/d,EAAA6B,EAAA3e,EACAyO,EAAAqO,IAEA9c,EAAA66B,EAAA76B,EAAA+6B,EAAA,KACA3zB,KAAAzI,EAAAqB,EACAyO,EAAA,KAMA,KAJAzO,EAAA2e,EAAA3e,EAAA+7B,EAAA,KACA/7B,EAAAkf,EAAAzQ,EACAzO,EAAAoxB,GAAA,EACAtU,EAAA9c,EACAyO,KAAA2iB,GACAgkC,EAAA3mD,EAAAyQ,EACAzQ,IAAA2mD,EAAAz2C,GACA02C,EAAAD,EAAAr5B,EACAs5B,KAAAjkC,GACA3iB,EAAA2iB,EAAAikC,EAAAjkC,GAAA,EACAgkC,EAAAhkC,GAAA,EACAtU,EAAAs4C,IAEAt4C,IAAArO,EAAAstB,IACAqD,GAAAh4B,KAAAqH,GACAqO,EAAArO,EACAA,EAAAqO,EAAAoC,GAEAzQ,EAAA2iB,GAAA,EACAgkC,EAAAhkC,GAAA,EACAkO,GAAAl4B,KAAAguD,MAGAC,EAAAD,EAAAz2C,EACA02C,KAAAjkC,GACA3iB,EAAA2iB,EAAAikC,EAAAjkC,GAAA,EACAgkC,EAAAhkC,GAAA,EACAtU,EAAAs4C,IAEAt4C,IAAArO,EAAAkQ,IACA2gB,GAAAl4B,KAAAqH,GACAqO,EAAArO,EACAA,EAAAqO,EAAAoC,GAEAzQ,EAAA2iB,GAAA,EACAgkC,EAAAhkC,GAAA,EACAgO,GAAAh4B,KAAAguD,KAGA3mD,EAAAqO,EAAAoC,CAEA9X,MAAAzI,EAAAyyB,GAAA,GAEAtnB,OAAA,SAAA9J,GACAA,EAAA+6B,IAAA/6B,EAAA+6B,EAAAF,EAAA76B,EAAA66B,GACA76B,EAAA66B,IAAA76B,EAAA66B,EAAAE,EAAA/6B,EAAA+6B,GACA/6B,EAAA+6B,EAAA/6B,EAAA66B,EAAA,IACA,IAAAy6B,GAAAx6B,EAAA4uB,EAAAj7C,EAAAzO,EAAAkf,EAAA9Y,EAAApG,EAAA2e,EAAAnY,EAAAxG,EAAA+7B,CA6BA,IA5B4DjB,EAA5D10B,EAA8BI,EAA8B+4B,GAAA/4B,GAA9BJ,EAA9BI,EACAiI,EACAA,EAAAkQ,IAAA3e,EAAAyO,EAAAkQ,EAAAmc,EAA+CrsB,EAAAstB,EAAAjB,EAE/C1zB,KAAAzI,EAAAm8B,EAEA10B,GAAAI,GACAkjD,EAAA5uB,EAAA1J,EACA0J,EAAA1J,EAAApxB,EAAAoxB,EACA0J,EAAAnc,EAAAvY,EACAA,EAAA8Y,EAAA4b,EACAA,IAAAt0B,GACAiI,EAAAqsB,EAAA5b,EACA4b,EAAA5b,EAAAlf,EAAAkf,EACAlf,EAAA86B,EAAAiB,EACAttB,EAAAkQ,EAAA3e,EACA86B,EAAAiB,EAAAv1B,EACAA,EAAA0Y,EAAA4b,IAEAA,EAAA5b,EAAAzQ,EACAA,EAAAqsB,EACA96B,EAAA86B,EAAAiB,KAGA2tB,EAAA1pD,EAAAoxB,EACApxB,EAAA86B,GAEA96B,MAAAkf,EAAAzQ,IACAi7C,EAAA,CACA,GAAA1pD,KAAAoxB,EAEA,YADApxB,EAAAoxB,GAAA,EAGA,IACA,GAAApxB,IAAAoH,KAAAzI,EAAA,KACA,IAAAqB,IAAAyO,EAAAkQ,GAQA,GAPA22C,EAAA7mD,EAAAstB,EACAu5B,EAAAlkC,IACAkkC,EAAAlkC,GAAA,EACA3iB,EAAA2iB,GAAA,EACAgO,GAAAh4B,KAAAqH,GACA6mD,EAAA7mD,EAAAstB,GAEAu5B,EAAA32C,GAAA22C,EAAA32C,EAAAyS,GAAAkkC,EAAAv5B,GAAAu5B,EAAAv5B,EAAA3K,EAAA,CACAkkC,EAAAv5B,GAAAu5B,EAAAv5B,EAAA3K,IACAkkC,EAAA32C,EAAAyS,GAAA,EACAkkC,EAAAlkC,GAAA,EACAkO,GAAAl4B,KAAAkuD,GACAA,EAAA7mD,EAAAstB,GAEAu5B,EAAAlkC,EAAA3iB,EAAA2iB,EACA3iB,EAAA2iB,EAAAkkC,EAAAv5B,EAAA3K,GAAA,EACAgO,GAAAh4B,KAAAqH,GACAzO,EAAAoH,KAAAzI,CACA,YAUA,IAPA22D,EAAA7mD,EAAAkQ,EACA22C,EAAAlkC,IACAkkC,EAAAlkC,GAAA,EACA3iB,EAAA2iB,GAAA,EACAkO,GAAAl4B,KAAAqH,GACA6mD,EAAA7mD,EAAAkQ,GAEA22C,EAAA32C,GAAA22C,EAAA32C,EAAAyS,GAAAkkC,EAAAv5B,GAAAu5B,EAAAv5B,EAAA3K,EAAA,CACAkkC,EAAA32C,GAAA22C,EAAA32C,EAAAyS,IACAkkC,EAAAv5B,EAAA3K,GAAA,EACAkkC,EAAAlkC,GAAA,EACAgO,GAAAh4B,KAAAkuD,GACAA,EAAA7mD,EAAAkQ,GAEA22C,EAAAlkC,EAAA3iB,EAAA2iB,EACA3iB,EAAA2iB,EAAAkkC,EAAA32C,EAAAyS,GAAA,EACAkO,GAAAl4B,KAAAqH,GACAzO,EAAAoH,KAAAzI,CACA,OAGA22D,EAAAlkC,GAAA,EACApxB,EAAAyO,EACAA,IAAAyQ,SACOlf,EAAAoxB,EACPpxB,OAAAoxB,GAAA,MAiEApsB,GAAA4vD,KAAAW,QAAA,SAAA/rC,GAGA,QAAA+rC,GAAA1mD,GACA,GAAA2mD,GAAA,GAAAx4C,OAAAnO,EAAAtR,QAAAkqB,EAAAsO,EAAA,MAAAxO,EAAAwO,EAAA,MAAA5G,EAAA4G,EAAA,MAAA3G,EAAA2G,EAAA,KAQA,OAPAyJ,IAAAC,EAAA5wB,GAAAknB,GAAAuH,MAAAx9B,QAAA,SAAAm9B,EAAA55B,GACA,GAAApD,GAAAg9B,EAAAh9B,MAAAi6B,EAAA+C,EAAA/C,MAAAs7B,EAAAnyD,GAAApD,EAAA1C,OAAA0C,EAAAc,IAAA,SAAAtD,GACA,GAAA0M,GAAA1M,EAAAwG,OACA,QAAAkG,EAAA1I,EAAA0I,EAAAzI,KACSw4B,EAAAz4B,GAAAgmB,GAAAyS,EAAAz4B,GAAA0tB,GAAA+K,EAAAx4B,GAAA6lB,GAAA2S,EAAAx4B,GAAA0tB,IAAA3H,EAAA2H,IAAAD,EAAAC,IAAAD,EAAA5H,IAAAE,EAAAF,QACT/lB,MAAAqN,EAAAxL,KAEAmyD,EAEA,QAAA/1B,GAAA5wB,GACA,MAAAA,GAAA9N,IAAA,SAAA2F,EAAArD,GACA,OACA5B,EAAAjB,KAAAsU,MAAAkqB,EAAAt4B,EAAArD,GAAA0jB,OACArlB,EAAAlB,KAAAsU,MAAAmqB,EAAAv4B,EAAArD,GAAA0jB,OACA1jB,OAlBA,GAAA5B,GAAAu3B,GAAAt3B,EAAAu3B,GAAA+F,EAAAv9B,EAAAw9B,EAAAv9B,EAAAq0B,EAAA0/B,EACA,OAAAjsC,GAAA+rC,EAAA/rC,IAqBA+rC,EAAAjuB,MAAA,SAAAz4B,GACA,MAAA2wB,IAAAC,EAAA5wB,IAAA5O,MAAA2Q,OAAA,SAAAzQ,GACA,MAAAA,GAAAkJ,GAAAlJ,EAAAkV,IACOtU,IAAA,SAAAZ,GACP,OACAmI,OAAAuG,EAAA1O,EAAAkJ,EAAAhG,GACAgF,OAAAwG,EAAA1O,EAAAkV,EAAAhS,OAIAkyD,EAAAG,UAAA,SAAA7mD,GACA,GAAA6mD,KAaA,OAZAl2B,IAAAC,EAAA5wB,IAAAyuB,MAAAx9B,QAAA,SAAAm9B,EAAA55B,GAEA,IADA,GAAAsyD,GAAAz7B,EAAA+C,EAAA/C,KAAAj6B,EAAAg9B,EAAAh9B,MAAAopB,KAAAwU,IAAAxuB,GAAA,EAAAC,EAAArP,EAAA1C,OAAAkN,EAAAxK,EAAAqP,EAAA,GAAAnP,KAAA0pC,EAAAp/B,EAAApB,IAAA6wB,EAAAzvB,EAAA4K,EAAA5K,EAAApB,IACAgG,EAAAC,GACA7E,EACAkrD,EAAA9rB,EACAp/B,EAAAxK,EAAAoP,GAAAlP,KACA0pC,EAAAp/B,EAAApB,IAAA6wB,EAAAzvB,EAAA4K,EAAA5K,EAAApB,EACAhG,EAAAsyD,EAAAtyD,KAAAwmC,EAAAxmC,GAAAw8B,GAAA3F,EAAAy7B,EAAA9rB,GAAA,GACA6rB,EAAAzyD,MAAA4L,EAAAxL,GAAAwL,EAAA8mD,EAAAtyD,GAAAwL,EAAAg7B,EAAAxmC,OAIAqyD,GAEAH,EAAA9zD,EAAA,SAAA9C,GACA,MAAA6E,WAAAjG,QAAAyhC,EAAA9nB,GAAAzV,EAAA9C,GAAA42D,GAAA9zD,GAEA8zD,EAAA7zD,EAAA,SAAA/C,GACA,MAAA6E,WAAAjG,QAAA0hC,EAAA/nB,GAAAxV,EAAA/C,GAAA42D,GAAA7zD,GAEA6zD,EAAAx/B,WAAA,SAAAp3B,GACA,MAAA6E,WAAAjG,QACAw4B,EAAA,MAAAp3B,EAAA82D,GAAA92D,EACA42D,GAFAx/B,IAAA0/B,GAAA,KAAA1/B,GAIAw/B,EAAAvtD,KAAA,SAAArJ,GACA,MAAA6E,WAAAjG,OACAg4D,EAAAx/B,WAAAp3B,KAAA,KAAAA,IADAo3B,IAAA0/B,GAAA,KAAA1/B,KAAA,IAGAw/B,GAEA,IAAAE,OAAA,oBAIAzwD,IAAA4vD,KAAAgB,SAAA,SAAAf,GACA,MAAA7vD,IAAA4vD,KAAAW,UAAAG,UAAAb,IAEA7vD,GAAA4vD,KAAAiB,SAAA,SAAArsC,EAAA2F,EAAAC,EAAAkF,EAAAC,GAYA,QAAAshC,GAAAhnD,GA4BA,QAAAotB,GAAApzB,EAAAnC,EAAAjF,EAAAC,EAAAytB,EAAAC,EAAAkF,EAAAC,GACA,IAAAtuB,MAAAxE,KAAAwE,MAAAvE,GACA,GAAAmH,EAAAo3B,KAAA,CACA,GAAA61B,GAAAjtD,EAAApH,EAAAs0D,EAAAltD,EAAAnH,CACA,UAAAo0D,EACA,GAAA3zD,GAAA2zD,EAAAr0D,GAAAU,GAAA4zD,EAAAr0D,GAAA,IACAs0D,EAAAntD,EAAAnC,EAAAjF,EAAAC,EAAAytB,EAAAC,EAAAkF,EAAAC,OACa,CACb,GAAA0hC,GAAAptD,EAAArH,KACAqH,GAAApH,EAAAoH,EAAAnH,EAAAmH,EAAArH,MAAA,KACAw0D,EAAAntD,EAAAotD,EAAAH,EAAAC,EAAA5mC,EAAAC,EAAAkF,EAAAC,GACAyhC,EAAAntD,EAAAnC,EAAAjF,EAAAC,EAAAytB,EAAAC,EAAAkF,EAAAC,OAGA1rB,GAAApH,IAAAoH,EAAAnH,IAAAmH,EAAArH,MAAAkF,MAGAsvD,GAAAntD,EAAAnC,EAAAjF,EAAAC,EAAAytB,EAAAC,EAAAkF,EAAAC,GAGA,QAAAyhC,GAAAntD,EAAAnC,EAAAjF,EAAAC,EAAAytB,EAAAC,EAAAkF,EAAAC,GACA,GAAAkM,GAAA,IAAAtR,EAAAmF,GAAAoM,EAAA,IAAAtR,EAAAmF,GAAA/tB,EAAA/E,GAAAg/B,EAAAE,EAAAj/B,GAAAg/B,EAAAr9B,EAAAs9B,GAAA,EAAAn6B,CACAqC,GAAAo3B,MAAA,EACAp3B,IAAA9I,MAAAsD,KAAAwF,EAAA9I,MAAAsD,GAAA28B,MACAx5B,EAAA2oB,EAAAsR,EAA2BnM,EAAAmM,EAC3BE,EAAAvR,EAAAsR,EAA2BnM,EAAAmM,EAC3BzE,EAAApzB,EAAAnC,EAAAjF,EAAAC,EAAAytB,EAAAC,EAAAkF,EAAAC,GArDA,GAAA7tB,GAAAwvD,EAAAC,EAAA9yD,EAAAwF,EAAAutD,EAAAC,EAAAC,EAAAC,EAAAv3B,EAAA9nB,GAAAzV,GAAAw9B,EAAA/nB,GAAAxV,EACA,UAAAytB,EACAinC,EAAAjnC,EAAAknC,EAAAjnC,EAAAknC,EAAAhiC,EAAAiiC,EAAAhiC,MAKA,IAHA+hC,EAAAC,IAAAH,EAAAC,EAAAh8C,KACA67C,KAAAC,KACAttD,EAAAgG,EAAAtR,OACAi5D,EAAA,IAAAnzD,EAAA,EAA+BA,EAAAwF,IAAOxF,EACtCqD,EAAAmI,EAAAxL,GACAqD,EAAAjF,EAAA20D,MAAA1vD,EAAAjF,GACAiF,EAAAhF,EAAA20D,MAAA3vD,EAAAhF,GACAgF,EAAAjF,EAAA60D,MAAA5vD,EAAAjF,GACAiF,EAAAhF,EAAA60D,MAAA7vD,EAAAhF,GACAw0D,EAAAjzD,KAAAyD,EAAAjF,GACA00D,EAAAlzD,KAAAyD,EAAAhF,OACS,KAAA2B,EAAA,EAAiBA,EAAAwF,IAAOxF,EAAA,CACjC,GAAA+sB,IAAA4O,EAAAt4B,EAAAmI,EAAAxL,MAAAgtB,GAAA4O,EAAAv4B,EAAArD,EACA+sB,GAAAgmC,MAAAhmC,GACAC,EAAAgmC,MAAAhmC,GACAD,EAAAkmC,MAAAlmC,GACAC,EAAAkmC,MAAAlmC,GACA6lC,EAAAjzD,KAAAmtB,GACA+lC,EAAAlzD,KAAAotB,GAGA,GAAA1uB,GAAA20D,EAAAF,EAAAx0D,EAAA20D,EAAAF,CACA10D,GAAAC,EAAA20D,EAAAF,EAAA10D,EAAkC20D,EAAAF,EAAAx0D,CA6BlC,IAAAw+B,GAAAJ,IAWA,IAVAI,EAAAnzB,IAAA,SAAAvG,GACAu1B,EAAAmE,EAAA15B,GAAAs4B,EAAAt4B,IAAArD,IAAA47B,EAAAv4B,EAAArD,GAAA+yD,EAAAC,EAAAC,EAAAC,IAEAn2B,EAAAq2B,MAAA,SAAA7jD,GACAstB,GAAAttB,EAAAwtB,EAAAg2B,EAAAC,EAAAC,EAAAC,IAEAn2B,EAAAG,KAAA,SAAA/+B,GACA,MAAA2+B,IAAAC,EAAA5+B,EAAA,GAAAA,EAAA,GAAA40D,EAAAC,EAAAC,EAAAC,IAEAlzD,GAAA,EACA,MAAA8rB,EAAA,CACA,OAAA9rB,EAAAwF,GACAozB,EAAAmE,EAAAvxB,EAAAxL,GAAA6yD,EAAA7yD,GAAA8yD,EAAA9yD,GAAA+yD,EAAAC,EAAAC,EAAAC,KAEAlzD,MACOwL,GAAA/O,QAAAsgC,EAAAnzB,IAEP,OADAipD,GAAAC,EAAAtnD,EAAAnI,EAAA,KACA05B,EArFA,GAAAo2B,GAAA/0D,EAAAu3B,GAAAt3B,EAAAu3B,EACA,QAAAu9B,EAAAhzD,UAAAjG,SACAkE,EAAAq+B,GACAp+B,EAAAq+B,GACA,IAAAy2B,IACAjiC,EAAAnF,EACAkF,EAAAnF,EACAC,EAAAD,EAAA,GAEA0mC,EAAArsC,KA8EAqsC,EAAAp0D,EAAA,SAAA9C,GACA,MAAA6E,WAAAjG,QAAAkE,EAAA9C,EAAAk3D,GAAAp0D,GAEAo0D,EAAAn0D,EAAA,SAAA/C,GACA,MAAA6E,WAAAjG,QAAAmE,EAAA/C,EAAAk3D,GAAAn0D,GAEAm0D,EAAA74B,OAAA,SAAAr+B,GACA,MAAA6E,WAAAjG,QACA,MAAAoB,EAAAwwB,EAAAC,EAAAkF,EAAAC,EAAA,MAA8CpF,GAAAxwB,EAAA,MAAAywB,GAAAzwB,EAAA,MAAA21B,GAAA31B,EAAA,MAC9C41B,GAAA51B,EAAA,OACAk3D,GAHA,MAAA1mC,EAAA,OAAAA,EAAAC,IAAAkF,EAAAC,KAKAshC,EAAA7tD,KAAA,SAAArJ,GACA,MAAA6E,WAAAjG,QACA,MAAAoB,EAAAwwB,EAAAC,EAAAkF,EAAAC,EAAA,MAA8CpF,EAAAC,EAAA,EAAAkF,GAAA31B,EAAA,GAAA41B,GAAA51B,EAAA,IAC9Ck3D,GAFA,MAAA1mC,EAAA,MAAAmF,EAAAnF,EAAAoF,EAAAnF,IAIAymC,IA8DA7wD,GAAA0xD,eAAA91B,GASA57B,GAAA2xD,kBAAAx1B,GAoBAn8B,GAAA4xD,kBAAAv1B,GAOAr8B,GAAA6xD,kBAAAv1B,EAiCA,IAAAK,IAAA,8CAAAC,GAAA,GAAAt1B,QAAAq1B,GAAAr5B,OAAA,IACAtD,IAAA8jB,YAAAsY,GAMAp8B,GAAA88B,eAAA,SAAAl8B,EAAAC,GACA,GAAA2T,SAAA3T,EACA,mBAAA2T,EAAAzC,GAAAlU,IAAAgD,EAAA+Q,gBAAA,oBAAAxJ,KAAAvH,GAAA+6B,GAAAU,GAAAz7B,YAAAyO,IAAAssB,GAAA5jB,MAAAi8B,QAAApzC,GAAAk8B,GAAA,WAAAvoB,GAAAvT,MAAAJ,GAAAs7B,GAAAE,IAAAz7B,EAAAC,KAEAb,GAAA8xD,iBAAA/0B,EAWA,IAAAg1B,IAAA,WACA,MAAA5uD,IAEA6uD,GAAAhyD,GAAAjE,KACAurC,OAAAyqB,GACAE,KAAAv0B,GACAoE,KAAA,WACA,MAAAxE,KAEA40B,MAAA,WACA,MAAA30B,KAEAluB,IAAA,WACA,MAAAsuB,KAEA1uB,IAAA,WACA,MAAA2uB,KAEAzI,OAAA,WACA,MAAA0I,KAEAs0B,QAAAr0B,GACAs0B,KAAAr0B,GACAs0B,OAAA,WACA,MAAAr0B,OAGAs0B,GAAAtyD,GAAAjE,KACAw2D,GAAApvD,EACAqvD,IAAAp1B,GACAq1B,SAAAp1B,GACAq1B,SAAA,SAAA9kD,GACA,MAAAyvB,IAAAD,GAAAxvB,MAGA5N,IAAAqwC,KAAA,SAAAz3C,GACA,GAAAyF,GAAAzF,EAAAgM,QAAA,KAAA4P,EAAAnW,GAAA,EAAAzF,EAAA8J,MAAA,EAAArE,GAAAzF,EAAA0R,EAAAjM,GAAA,EAAAzF,EAAA8J,MAAArE,EAAA,OAGA,OAFAmW,GAAAw9C,GAAArtD,IAAA6P,IAAAu9C,GACAznD,EAAAgoD,GAAA3tD,IAAA2F,IAAAnH,EACAg6B,GAAA7yB,EAAAkK,EAAAhR,MAAA,KAAAsuC,GAAAvmC,KAAA/M,UAAA,OA4DAwB,GAAA2yD,eAAA10B,GAWAj+B,GAAA4yD,eAAAn0B,GAWAz+B,GAAA6yD,eAAAl0B,GASA3+B,GAAA8yD,iBAAA/zB,GAOA/+B,GAAAwgC,UAAA,SAAArnB,GACA,GAAA/gB,GAAAo5C,GAAAloC,gBAAAtJ,GAAAiH,GAAA1I,OAAAuO,IAAA,IACA,QAAA9M,GAAAwgC,UAAA,SAAArnB,GACA,SAAAA,EAAA,CACA/gB,EAAAwO,aAAA,YAAAuS,EACA,IAAA3E,GAAApc,EAAAooC,UAAAuyB,QAAAC,cAEA,UAAAh0B,IAAAxqB,IAAAm/B,OAAAsf,MACK95C,IAeL6lB,GAAA/8B,UAAAsP,SAAA,WACA,mBAAAnP,KAAA6uB,UAAA,WAAA7uB,KAAA6iB,OAAA,UAAA7iB,KAAAq9B,KAAA,UAAAr9B,KAAAuT,MAAA,IAkBA,IAAAs9C,KACAryD,EAAA,EACAC,EAAA,EACAkH,EAAA,EACArG,EAAA,EACAjJ,EAAA,EACAmV,EAAA,EAEA5N,IAAAkzD,qBAAA3yB,GA+EAvgC,GAAAmzD,UACAnzD,GAAAmzD,OAAAC,OAAA,WACA,gBAAA9wB,GAEA,IADA,GAAA+wB,MAAAh1D,GAAA,EAAAwF,EAAAy+B,EAAA/pC,SACA8F,EAAAwF,GAAAwvD,EAAAp1D,KAAA0iC,GAAA2B,EAAAjkC,IACA,OAAAg1D,KAoCArzD,GAAAmzD,OAAAG,MAAA,WAEA,QAAAC,KACA,GAAwB3xD,GAAAnF,EAAAgmB,EAAApkB,EAAAgM,EAAxBorC,KAAwB+d,KAAAC,EAAAzzD,GAAA1C,MAAAuG,GAAA6vD,IAIxB,KAHAC,KACA/tD,KACAhE,EAAA,EAAAvD,GAAA,IACAA,EAAAwF,GAAA,CAEA,IADApH,EAAA,EAAA4N,GAAA,IACAA,EAAAxG,GACApH,GAAAk3C,EAAAt1C,GAAAgM,EAEAmpD,GAAAv1D,KAAAxB,GACAi3D,EAAAz1D,KAAA+B,GAAA1C,MAAAuG,IACAjC,GAAAnF,EAgBA,IAdAm3D,GACAH,EAAApvC,KAAA,SAAAzjB,EAAAC,GACA,MAAA+yD,GAAAJ,EAAA5yD,GAAA4yD,EAAA3yD,MAGAgzD,GACAH,EAAA54D,QAAA,SAAA4G,EAAArD,GACAqD,EAAA2iB,KAAA,SAAAzjB,EAAAC,GACA,MAAAgzD,GAAAlgB,EAAAt1C,GAAAuC,GAAA+yC,EAAAt1C,GAAAwC,QAIAe,GAAAmmB,GAAAva,EAAA3J,GAAAjC,EACAnF,EAAA,EAAA4B,GAAA,IACAA,EAAAwF,GAAA,CAEA,IADA4e,EAAAhmB,EAAA4N,GAAA,IACAA,EAAAxG,GAAA,CACA,GAAAiwD,GAAAL,EAAAp1D,GAAA01D,EAAAL,EAAAI,GAAAzpD,GAAAhS,EAAAs7C,EAAAmgB,GAAAC,GAAArlC,EAAAjyB,EAAAuuB,EAAAvuB,GAAApE,EAAAuJ,CACA6zC,GAAAqe,EAAA,IAAAC,IACAl3B,MAAAi3B,EACAE,SAAAD,EACArpB,WAAAhc,EACAkc,SAAA5f,EACAjsB,MAAA1G,GAGAuN,EAAAkuD,IACAj3B,MAAAi3B,EACAppB,WAAAjoB,EACAmoB,SAAAnuC,EACAsC,MAAAy0D,EAAAM,IAEAr3D,GAAA+Q,EAGA,IADAnP,GAAA,IACAA,EAAAwF,GAEA,IADAwG,EAAAhM,EAAA,IACAgM,EAAAxG,GAAA,CACA,GAAAP,GAAAmyC,EAAAp3C,EAAA,IAAAgM,GAAAhH,EAAAoyC,EAAAprC,EAAA,IAAAhM,IACAiF,EAAAvE,OAAAsE,EAAAtE,QACA40D,EAAA11D,KAAAqF,EAAAvE,MAAAsE,EAAAtE,OACAuE,OAAAD,EACAA,OAAAC,IAEAA,SACAD,WAKA4wD,GAAAC,IAEA,QAAAA,KACAP,EAAAtvC,KAAA,SAAAzjB,EAAAC,GACA,MAAAozD,IAAArzD,EAAA0C,OAAAvE,MAAA6B,EAAAyC,OAAAtE,OAAA,GAAA8B,EAAAyC,OAAAvE,MAAA8B,EAAAwC,OAAAtE,OAAA,KArEA,GAAkB40D,GAAA/tD,EAAA+tC,EAAA9vC,EAAA+vD,EAAAC,EAAAI,EAAlBX,KAAkB9lD,EAAA,CA8GlB,OAtCA8lD,GAAA3f,OAAA,SAAAl3C,GACA,MAAA+B,WAAAjG,QACAsL,GAAA8vC,EAAAl3C,IAAAk3C,EAAAp7C,OACAo7D,EAAA/tD,EAAA,KACA0tD,GAHA3f,GAKA2f,EAAA9lD,QAAA,SAAA/Q,GACA,MAAA+B,WAAAjG,QACAiV,EAAA/Q,EACAk3D,EAAA/tD,EAAA,KACA0tD,GAHA9lD,GAKA8lD,EAAAM,WAAA,SAAAn3D,GACA,MAAA+B,WAAAjG,QACAq7D,EAAAn3D,EACAk3D,EAAA/tD,EAAA,KACA0tD,GAHAM,GAKAN,EAAAO,cAAA,SAAAp3D,GACA,MAAA+B,WAAAjG,QACAs7D,EAAAp3D,EACAk3D,EAAA,KACAL,GAHAO,GAKAP,EAAAW,WAAA,SAAAx3D,GACA,MAAA+B,WAAAjG,QACA07D,EAAAx3D,EACAk3D,GAAAO,IACAZ,GAHAW,GAKAX,EAAAK,OAAA,WAEA,MADAA,IAAAJ,IACAI,GAEAL,EAAA1tD,OAAA,WAEA,MADAA,IAAA2tD,IACA3tD,GAEA0tD,GAEAtzD,GAAAmzD,OAAAgB,MAAA,WAEA,QAAAC,GAAAp5D,GACA,gBAAA8mC,EAAA3X,EAAAxwB,EAAA21B,GACA,GAAAwS,EAAAtlC,QAAAxB,EAAA,CACA,GAAA2B,GAAAmlC,EAAA7e,GAAAjoB,EAAAyB,EAAAG,EAAAklC,EAAA5e,GAAAloB,EAAA0B,EAAA23D,EAAA/kC,EAAAnF,EAAAmqC,EAAA33D,IAAAC,GACA,IAAAy3D,IAAAE,EAAAD,EAAA,CACA,GAAAA,EAAAE,EAAA,CACA,GAAA5yD,GAAAkgC,EAAAG,OAAAqyB,CACAt5D,GAAA0mC,IAAA/kC,EAAAiF,EACA5G,EAAA2mC,IAAA/kC,EAAAgF,EAEA,SAEA,GAAAkgC,EAAAtlC,OAAA83D,KAAAE,EAAA,CACA,GAAA5yD,GAAAkgC,EAAAK,YAAAmyB,CACAt5D,GAAA0mC,IAAA/kC,EAAAiF,EACA5G,EAAA2mC,IAAA/kC,EAAAgF,GAGA,OAAAkgC,EAAAG,QAgMA,QAAAwyB,GAAA/yD,GACAA,EAAAggC,GAAA1hC,GAAAoE,MAAA3H,EAAAiF,EAAAigC,GAAA3hC,GAAAoE,MAAA1H,EACAy3D,EAAAO,SArNA,GAAkBngD,GAAAwjC,EAAAhW,EAAA4yB,EAAAC,EAAA5yB,EAAlBmyB,KAAkB/vD,EAAApE,GAAAmE,SAAA,sBAAAnB,GAAA,KAAA6xD,EAAA,GAAAC,EAAAC,GAAAC,EAAAC,GAAAhzB,GAAA,GAAAuyB,EAAAU,GAAAC,EAAA,GAAAZ,EAAA,IAAAx5D,KAAAunC,IAuNlB,OAjMA6xB,GAAAhkB,KAAA,WACA,IAAApO,GAAA,UAMA,MALAxtB,GAAA,KACAnQ,EAAAi0B,KACAp+B,KAAA,MACA8nC,QAAA,KAEA,CAEA,IAAAlY,GAAAxrB,EAAA0N,EAAA5G,EAAAqP,EAAAnQ,EAAAzC,EAAAnF,EAAAC,EAAAmH,EAAA9I,EAAAxC,OAAA+R,EAAAg4B,EAAA/pC,MACA,KAAA8F,EAAA,EAAiBA,EAAAiM,IAAOjM,EACxB0N,EAAAu2B,EAAAjkC,GACA8G,EAAA4G,EAAAzI,OACAkR,EAAAzI,EAAA1I,OACA5G,EAAA+X,EAAA/X,EAAA0I,EAAA1I,EACAC,EAAA8X,EAAA9X,EAAAyI,EAAAzI,GACA2H,EAAA5H,IAAAC,OACA2H,EAAA09B,EAAA6yB,EAAAv2D,KAAAgG,EAAA7I,KAAAyV,KAAA5M,IAAAswD,EAAAt2D,IAAAgG,EACA5H,GAAA4H,EACA3H,GAAA2H,EACAmQ,EAAA/X,MAAAmF,EAAAuD,EAAA/J,OAAAoZ,EAAApZ,OAAA+J,EAAA/J,QAAA+J,EAAA/J,OAAAoZ,EAAApZ,QAAA,IACAoZ,EAAA9X,KAAAkF,EACAuD,EAAA1I,MAAAmF,EAAA,EAAAA,GACAuD,EAAAzI,KAAAkF,EAGA,KAAAA,EAAAmgC,EAAAozB,KACA14D,EAAAuG,EAAA,KACAtG,EAAAsG,EAAA,KACA3E,GAAA,EACAuD,GAAA,OAAAvD,EAAAwF,GACAkI,EAAAhR,EAAAsD,GACA0N,EAAAtP,MAAAsP,EAAAtP,GAAAmF,EACAmK,EAAArP,MAAAqP,EAAArP,GAAAkF,CAGA,IAAAqgC,EAGA,IAFAJ,GAAAhY,EAAA7pB,GAAA4vD,KAAAiB,SAAA91D,GAAAgnC,EAAAC,GACA3jC,GAAA,IACAA,EAAAwF,IACAkI,EAAAhR,EAAAsD,IAAAkjC,OACA1X,EAAA4nC,MAAA2C,EAAAroD,GAKA,KADA1N,GAAA,IACAA,EAAAwF,GACAkI,EAAAhR,EAAAsD,GACA0N,EAAAw1B,OACAx1B,EAAAtP,EAAAsP,EAAA21B,GACA31B,EAAArP,EAAAqP,EAAA41B,KAEA51B,EAAAtP,IAAAsP,EAAA21B,IAAA31B,EAAA21B,GAAA31B,EAAAtP,IAAAo4D,EACA9oD,EAAArP,IAAAqP,EAAA41B,IAAA51B,EAAA41B,GAAA51B,EAAArP,IAAAm4D,EAGAzwD,GAAA+rC,MACAl2C,KAAA,OACA8nC,WAGAoyB,EAAAp5D,MAAA,SAAA0B,GACA,MAAA+B,WAAAjG,QACAwC,EAAA0B,EACA03D,GAFAp5D,GAIAo5D,EAAA7xB,MAAA,SAAA7lC,GACA,MAAA+B,WAAAjG,QACA+pC,EAAA7lC,EACA03D,GAFA7xB,GAIA6xB,EAAAnxD,KAAA,SAAAvG,GACA,MAAA+B,WAAAjG,QACAyK,EAAAvG,EACA03D,GAFAnxD,GAIAmxD,EAAAW,aAAA,SAAAr4D,GACA,MAAA+B,WAAAjG,QACAu8D,EAAA,kBAAAr4D,QACA03D,GAFAW,GAIAX,EAAAthC,SAAAshC,EAAAW,aACAX,EAAAa,aAAA,SAAAv4D,GACA,MAAA+B,WAAAjG,QACAy8D,EAAA,kBAAAv4D,QACA03D,GAFAa,GAIAb,EAAAU,SAAA,SAAAp4D,GACA,MAAA+B,WAAAjG,QACAs8D,GAAAp4D,EACA03D,GAFAU,GAIAV,EAAAlyB,OAAA,SAAAxlC,GACA,MAAA+B,WAAAjG,QACA0pC,EAAA,kBAAAxlC,QACA03D,GAFAlyB,GAIAkyB,EAAAiB,eAAA,SAAA34D,GACA,MAAA+B,WAAAjG,QACAi8D,EAAA/3D,IACA03D,GAFA34D,KAAAyV,KAAAujD,IAIAL,EAAAgB,QAAA,SAAA14D,GACA,MAAA+B,WAAAjG,QACA48D,GAAA14D,EACA03D,GAFAgB,GAIAhB,EAAAkB,MAAA,SAAA54D,GACA,MAAA+B,WAAAjG,QACAg8D,EAAA93D,IACA03D,GAFA34D,KAAAyV,KAAAsjD,IAIAJ,EAAApyB,MAAA,SAAAtlC,GACA,MAAA+B,WAAAjG,QACAkE,KACAslC,EACAtlC,EAAA,EACAslC,EAAAtlC,GAEA8X,EAAAxM,EAAA,KAAAwM,EAAAC,EAAA1T,IAAAyT,EAAA,KACAnQ,EAAAi0B,KACAp+B,KAAA,MACA8nC,QAAA,KAGOtlC,EAAA,IACP2H,EAAAnF,OACAhF,KAAA,QACA8nC,QAAAtlC,IAEA8X,EAAAJ,GAAAggD,EAAAhkB,OAEAgkB,GAnBApyB,GAqBAoyB,EAAAl1D,MAAA,WA0BA,QAAAoO,GAAAioD,EAAAtyD,GACA,IAAAuyD,EAAA,CAEA,IADAA,EAAA,GAAAv9C,OAAAnU,GACAwG,EAAA,EAAqBA,EAAAxG,IAAOwG,EAC5BkrD,EAAAlrD,KAEA,KAAAA,EAAA,EAAqBA,EAAAC,IAAOD,EAAA,CAC5B,GAAA0B,GAAAu2B,EAAAj4B,EACAkrD,GAAAxpD,EAAAzI,OAAAu5B,OAAA5+B,KAAA8N,EAAA1I,QACAkyD,EAAAxpD,EAAA1I,OAAAw5B,OAAA5+B,KAAA8N,EAAAzI,SAIA,IADA,GAAA7G,GAAA+4D,EAAAD,EAAAl3D,GAAAgM,GAAA,EAAAhG,EAAAmxD,EAAAj9D,SACA8R,EAAAhG,GAAA,IAAApD,MAAAxE,EAAA+4D,EAAAnrD,GAAAirD,IAAA,MAAA74D,EACA,OAAAjB,MAAA0mC,SAAAl/B,EAvCA,GAAA3E,GAAAk3D,EAAAxpD,EAAAlI,EAAA9I,EAAAxC,OAAA+R,EAAAg4B,EAAA/pC,OAAAI,EAAAqK,EAAA,GAAAlG,EAAAkG,EAAA,EACA,KAAA3E,EAAA,EAAiBA,EAAAwF,IAAOxF,GACxB0N,EAAAhR,EAAAsD,IAAAw+B,MAAAx+B,EACA0N,EAAA3Q,OAAA,CAEA,KAAAiD,EAAA,EAAiBA,EAAAiM,IAAOjM,EACxB0N,EAAAu2B,EAAAjkC,GACA,gBAAA0N,GAAAzI,SAAAyI,EAAAzI,OAAAvI,EAAAgR,EAAAzI,SACA,gBAAAyI,GAAA1I,SAAA0I,EAAA1I,OAAAtI,EAAAgR,EAAA1I,WACA0I,EAAAzI,OAAAlI,SACA2Q,EAAA1I,OAAAjI,MAEA,KAAAiD,EAAA,EAAiBA,EAAAwF,IAAOxF,EACxB0N,EAAAhR,EAAAsD,GACA4C,MAAA8K,EAAAtP,KAAAsP,EAAAtP,EAAA4Q,EAAA,IAAA1U,IACAsI,MAAA8K,EAAArP,KAAAqP,EAAArP,EAAA2Q,EAAA,IAAAvQ,IACAmE,MAAA8K,EAAA21B,MAAA31B,EAAA21B,GAAA31B,EAAAtP,GACAwE,MAAA8K,EAAA41B,MAAA51B,EAAA41B,GAAA51B,EAAArP,EAGA,IADAi4D,KACA,kBAAAG,GAAA,IAAAz2D,EAAA,EAAyDA,EAAAiM,IAAOjM,EAAAs2D,EAAAt2D,IAAAy2D,EAAAvpD,KAAAnJ,KAAAkgC,EAAAjkC,UAA2D,KAAAA,EAAA,EAAiBA,EAAAiM,IAAOjM,EAAAs2D,EAAAt2D,GAAAy2D,CAEnJ,IADAF,KACA,kBAAAI,GAAA,IAAA32D,EAAA,EAAyDA,EAAAiM,IAAOjM,EAAAu2D,EAAAv2D,IAAA22D,EAAAzpD,KAAAnJ,KAAAkgC,EAAAjkC,UAA2D,KAAAA,EAAA,EAAiBA,EAAAiM,IAAOjM,EAAAu2D,EAAAv2D,GAAA22D,CAEnJ,IADAhzB,KACA,kBAAAC,GAAA,IAAA5jC,EAAA,EAAmDA,EAAAwF,IAAOxF,EAAA2jC,EAAA3jC,IAAA4jC,EAAA12B,KAAAnJ,KAAArH,EAAAsD,UAAmD,KAAAA,EAAA,EAAiBA,EAAAwF,IAAOxF,EAAA2jC,EAAA3jC,GAAA4jC,CAiBrI,OAAAkyB,GAAAO,UAEAP,EAAAO,OAAA,WACA,MAAAP,GAAApyB,MAAA,KAEAoyB,EAAA5tB,KAAA,WACA,MAAA4tB,GAAApyB,MAAA,IAEAoyB,EAAApc,KAAA,WAEA,GADAA,MAAA/3C,GAAA60C,SAAAkD,OAAAiB,OAAA71C,GAAAqB,GAAA,kBAAA88B,IAAA98B,GAAA,aAAAiwD,GAAAjwD,GAAA,gBAAAg9B,MACAhjC,UAAAjG,OAAA,MAAAw/C,EACA31C,MAAAoC,GAAA,kBAAAi9B,IAAAj9B,GAAA,iBAAAo9B,IAAAr2B,KAAAwsC,IAMA/3C,GAAAgU,OAAAmgD,EAAA/vD,EAAA,MA0CA,IAAA2wD,IAAA,GAAAE,GAAA,EAAAC,GAAA7/C,GACArV,IAAAmzD,OAAA9wB,UAAA,WAEA,QAAAA,GAAAjH,GACA,GAAApgC,GAAAy6D,GAAAr6B,GAAArgC,IAEA,KADAqgC,EAAAnM,MAAA,EACA,OAAAj0B,EAAAy6D,EAAA7vC,QAEA,GADA7qB,EAAAkD,KAAAjD,IACA06D,EAAAp9D,EAAAiT,KAAA82B,EAAArnC,IAAAi0B,UAAAprB,EAAA6xD,EAAAn9D,QAAA,CAEA,IADA,GAAAsL,GAAA6xD,EAAA5yB,IACAj/B,GAAA,GACA4xD,EAAAx3D,KAAA6kC,EAAA4yB,EAAA7xD,IACAi/B,EAAAr5B,OAAAzO,EACA8nC,EAAA7T,MAAAj0B,EAAAi0B,MAAA,CAEAlwB,KAAA/D,EAAA+D,MAAA,GACA/D,EAAA1C,SAAAo9D,MAEA32D,KAAA/D,EAAA+D,SAAAwM,KAAA82B,EAAArnC,IAAAi0B,QAAA,SACAj0B,GAAA1C,QAQA,OALAmqC,IAAArH,EAAA,SAAApgC,GACA,GAAA06D,GAAAjsD,CACA4a,KAAAqxC,EAAA16D,EAAA1C,WAAAo9D,EAAArxC,QACAtlB,IAAA0K,EAAAzO,EAAAyO,YAAA1K,OAAA/D,EAAA+D,SAEAhE,EAzBA,GAAAspB,GAAAwe,GAAAvqC,EAAAqqC,GAAA5jC,EAAA6jC,EAuDA,OA5BAP,GAAAhe,KAAA,SAAA5nB,GACA,MAAA+B,WAAAjG,QACA8rB,EAAA5nB,EACA4lC,GAFAhe,GAIAge,EAAA/pC,SAAA,SAAAmE,GACA,MAAA+B,WAAAjG,QACAD,EAAAmE,EACA4lC,GAFA/pC,GAIA+pC,EAAAtjC,MAAA,SAAAtC,GACA,MAAA+B,WAAAjG,QACAwG,EAAAtC,EACA4lC,GAFAtjC,GAIAsjC,EAAAszB,QAAA,SAAAv6B,GAWA,MAVAr8B,KACAyjC,GAAApH,EAAA,SAAApgC,GACAA,EAAA1C,WAAA0C,EAAA+D,MAAA,KAEA0jC,GAAArH,EAAA,SAAApgC,GACA,GAAAyO,EACAzO,GAAA1C,WAAA0C,EAAA+D,SAAAwM,KAAA82B,EAAArnC,IAAAi0B,QAAA,IACAxlB,EAAAzO,EAAAyO,YAAA1K,OAAA/D,EAAA+D,UAGAq8B,GAEAiH,GAkDAriC,GAAAmzD,OAAA10D,UAAA,WAEA,QAAA4O,GAAArS,EAAAyB,EAAAE,EAAAC,GACA,GAAAtE,GAAA0C,EAAA1C,QAKA,IAJA0C,EAAAyB,IACAzB,EAAA0B,EAAA1B,EAAAi0B,MAAAryB,EACA5B,EAAA2B,KACA3B,EAAA4B,KACAtE,IAAAuL,EAAAvL,EAAAC,QAAA,CACA,GAAAsL,GAAAkE,EAAArG,EAAArD,GAAA,CAEA,KADA1B,EAAA3B,EAAA+D,MAAApC,EAAA3B,EAAA+D,MAAA,IACAV,EAAAwF,GACAwJ,EAAAtF,EAAAzP,EAAA+F,GAAA5B,EAAAiF,EAAAqG,EAAAhJ,MAAApC,EAAAC,GACAH,GAAAiF,GAIA,QAAAutB,GAAAj0B,GACA,GAAA1C,GAAA0C,EAAA1C,SAAAoJ,EAAA,CACA,IAAApJ,IAAAuL,EAAAvL,EAAAC,QAEA,IADA,GAAAsL,GAAAxF,GAAA,IACAA,EAAAwF,GAAAnC,EAAAlG,KAAAC,IAAAiG,EAAAutB,EAAA32B,EAAA+F,IAEA,UAAAqD,EAEA,QAAAjD,GAAAiD,EAAArD,GACA,GAAAtD,GAAAsnC,EAAA92B,KAAAnJ,KAAAV,EAAArD,EAEA,OADAgP,GAAAtS,EAAA,KAAAiI,EAAA,GAAAA,EAAA,GAAAisB,EAAAl0B,EAAA,KACAA,EA3BA,GAAAsnC,GAAAriC,GAAAmzD,OAAA9wB,YAAAr/B,GAAA,IAkCA,OALAvE,GAAAuE,KAAA,SAAAvG,GACA,MAAA+B,WAAAjG,QACAyK,EAAAvG,EACAgC,GAFAuE,GAIAo/B,GAAA3jC,EAAA4jC,IAEAriC,GAAAmzD,OAAAyC,IAAA,WAEA,QAAAA,GAAA/rD,GACA,GAEOxR,GAFPwL,EAAAgG,EAAAtR,OAAAkrC,EAAA55B,EAAA9N,IAAA,SAAA2F,EAAArD,GACA,OAAAU,EAAAwM,KAAAqqD,EAAAl0D,EAAArD,KACOuC,IAAA,kBAAA8pC,KAAAlnC,MAAApB,KAAA5D,WAAAksC,GAAAxF,GAAA,kBAAA0F,KAAApnC,MAAApB,KAAA5D,WAAAosC,GAAAhqC,EAAA2U,EAAA/Z,KAAAoC,IAAApC,KAAA2B,IAAA+nC,GAAArhC,IAAA,kBAAAinC,KAAAtnC,MAAApB,KAAA5D,WAAAssC,IAAA7hB,EAAA1T,GAAA2vB,EAAA,QAAAyN,EAAA3yC,GAAA2yC,IAAAlP,GAAA7hC,EAAA+wC,GAAAzN,EAAArhC,EAAAolB,GAAA0pB,EAAA,EAAA9V,EAAA78B,GAAA1C,MAAAuG,GAAAgyD,IAeP,OAdA,OAAAxxC,GAAAwY,EAAAxY,SAAAyxC,GAAA,SAAAz3D,EAAAgM,GACA,MAAAo5B,GAAAp5B,GAAAo5B,EAAAplC,IACO,SAAAA,EAAAgM,GACP,MAAAga,GAAAxa,EAAAxL,GAAAwL,EAAAQ,MAEAwyB,EAAA/hC,QAAA,SAAAuD,GACAw3D,EAAAx3D,IACAwL,OAAAxL,GACAU,MAAA1G,EAAAorC,EAAAplC,GACAqsC,WAAA9pC,EACAgqC,SAAAhqC,GAAAvI,EAAAuJ,EAAAqnB,EACA6hB,SAAAv1B,KAGAsgD,EAnBA,GAAA92D,GAAAyoC,OAAAnjB,EAAAyxC,GAAAprB,EAAA,EAAAE,EAAA7iB,GAAA+iB,EAAA,CA8CA,OAzBA8qB,GAAA72D,MAAA,SAAApF,GACA,MAAA6E,WAAAjG,QACAwG,EAAApF,EACAi8D,GAFA72D,GAIA62D,EAAAvxC,KAAA,SAAA1qB,GACA,MAAA6E,WAAAjG,QACA8rB,EAAA1qB,EACAi8D,GAFAvxC,GAIAuxC,EAAAlrB,WAAA,SAAA/wC,GACA,MAAA6E,WAAAjG,QACAmyC,EAAA/wC,EACAi8D,GAFAlrB,GAIAkrB,EAAAhrB,SAAA,SAAAjxC,GACA,MAAA6E,WAAAjG,QACAqyC,EAAAjxC,EACAi8D,GAFAhrB,GAIAgrB,EAAA9qB,SAAA,SAAAnxC,GACA,MAAA6E,WAAAjG,QACAuyC,EAAAnxC,EACAi8D,GAFA9qB,GAIA8qB,EAEA,IAAAE,MACA91D,IAAAmzD,OAAAsC,MAAA,WAEA,QAAAA,GAAA5rD,EAAAgzB,GACA,KAAAh5B,EAAAgG,EAAAtR,QAAA,MAAAsR,EACA,IAAAksD,GAAAlsD,EAAA9N,IAAA,SAAA2F,EAAArD,GACA,MAAAolC,GAAAl4B,KAAAkqD,EAAA/zD,EAAArD,KAEAmmB,EAAAuxC,EAAAh6D,IAAA,SAAA2F,GACA,MAAAA,GAAA3F,IAAA,SAAA1D,EAAAgG,GACA,OAAA5B,EAAA8O,KAAAkqD,EAAAp9D,EAAAgG,GAAA3B,EAAA6O,KAAAkqD,EAAAp9D,EAAAgG,QAGA23D,EAAAt4D,EAAA6N,KAAAkqD,EAAAjxC,EAAAqY,EACAk5B,GAAA/1D,GAAAszC,QAAAyiB,EAAAC,GACAxxC,EAAAxkB,GAAAszC,QAAA9uB,EAAAwxC,EACA,IACAnyD,GAAAxF,EAAAgM,EAAA0B,EADAkqD,EAAAl4D,EAAAwN,KAAAkqD,EAAAjxC,EAAAqY,GACAvyB,EAAAyrD,EAAA,GAAAx9D,MACA,KAAA8R,EAAA,EAAiBA,EAAAC,IAAOD,EAExB,IADAmoD,EAAAjnD,KAAAkqD,EAAAM,EAAA,GAAA1rD,GAAA0B,EAAAkqD,EAAA5rD,GAAAma,EAAA,GAAAna,GAAA,IACAhM,EAAA,EAAmBA,EAAAwF,IAAOxF,EAC1Bm0D,EAAAjnD,KAAAkqD,EAAAM,EAAA13D,GAAAgM,GAAA0B,GAAAyY,EAAAnmB,EAAA,GAAAgM,GAAA,GAAAma,EAAAnmB,GAAAgM,GAAA,GAGA,OAAAR,GAtBA,GAAA45B,GAAAtgC,EAAAzF,EAAAwlC,GAAAnlC,EAAAolC,GAAAqvB,EAAAvvB,GAAAxmC,EAAAsmC,GAAArmC,EAAAsmC,EAsDA,OA9BAyyB,GAAAhyB,OAAA,SAAAhnC,GACA,MAAA+B,WAAAjG,QACAkrC,EAAAhnC,EACAg5D,GAFAhyB,GAIAgyB,EAAA/3D,MAAA,SAAAjB,GACA,MAAA+B,WAAAjG,QACAmF,EAAA,kBAAAjB,KAAAy5D,GAAAvxD,IAAAlI,IAAAymC,GACAuyB,GAFA/3D,GAIA+3D,EAAA13D,OAAA,SAAAtB,GACA,MAAA+B,WAAAjG,QACAwF,EAAA,kBAAAtB,KAAA05D,GAAAxxD,IAAAlI,IAAA0mC,GACAsyB,GAFA13D,GAIA03D,EAAAh5D,EAAA,SAAA6H,GACA,MAAA9F,WAAAjG,QACAkE,EAAA6H,EACAmxD,GAFAh5D,GAIAg5D,EAAA/4D,EAAA,SAAA4H,GACA,MAAA9F,WAAAjG,QACAmE,EAAA4H,EACAmxD,GAFA/4D,GAIA+4D,EAAAjD,IAAA,SAAAluD,GACA,MAAA9F,WAAAjG,QACAi6D,EAAAluD,EACAmxD,GAFAjD,GAIAiD,EAYA,IAAAS,IAAAl2D,GAAAjE,KACAq6D,aAAA,SAAAvsD,GACA,GAAAxL,GAAAgM,EAAAxG,EAAAgG,EAAAtR,OAAAkD,EAAAoO,EAAA9N,IAAAqnC,IAAAizB,EAAAxsD,EAAA9N,IAAAsnC,IAAAxG,EAAA78B,GAAA1C,MAAAuG,GAAAwgB,KAAA,SAAAzjB,EAAAC,GACA,MAAApF,GAAAmF,GAAAnF,EAAAoF,KACOyM,EAAA,EAAAgpD,EAAA,EAAAC,KAAAC,IACP,KAAAn4D,EAAA,EAAiBA,EAAAwF,IAAOxF,EACxBgM,EAAAwyB,EAAAx+B,GACAiP,EAAAgpD,GACAhpD,GAAA+oD,EAAAhsD,GACAksD,EAAAt4D,KAAAoM,KAEAisD,GAAAD,EAAAhsD,GACAmsD,EAAAv4D,KAAAoM,GAGA,OAAAmsD,GAAA//C,UAAA5R,OAAA0xD,IAEA9/C,QAAA,SAAA5M,GACA,MAAA7J,IAAA1C,MAAAuM,EAAAtR,QAAAke,WAEArc,QAAA8oC,KAEAizB,GAAAn2D,GAAAjE,KACA06D,WAAA,SAAA5sD,GACA,GAAAxL,GAAAgM,EAAA0B,EAAAlI,EAAAgG,EAAAtR,OAAA+R,EAAAT,EAAA,GAAAtR,OAAA89D,KAAA56D,EAAA,EAAA8mB,IACA,KAAAlY,EAAA,EAAiBA,EAAAC,IAAOD,EAAA,CACxB,IAAAhM,EAAA,EAAA0N,EAAA,EAA0B1N,EAAAwF,EAAOxF,IAAA0N,GAAAlC,EAAAxL,GAAAgM,GAAA,EACjC0B,GAAAtQ,MAAAsQ,GACAsqD,EAAAp4D,KAAA8N,GAEA,IAAA1B,EAAA,EAAiBA,EAAAC,IAAOD,EACxBkY,EAAAlY,IAAA5O,EAAA46D,EAAAhsD,IAAA,CAEA,OAAAkY,IAEAm0C,OAAA,SAAA7sD,GACA,GAAAxL,GAAAgM,EAAAzI,EAAAijC,EAAAC,EAAA6xB,EAAAh6D,EAAAoP,EAAA6qD,EAAA/yD,EAAAgG,EAAAtR,OAAAkE,EAAAoN,EAAA,GAAAS,EAAA7N,EAAAlE,OAAAgqB,IAEA,KADAA,EAAA,GAAAxW,EAAA6qD,EAAA,EACAvsD,EAAA,EAAiBA,EAAAC,IAAOD,EAAA,CACxB,IAAAhM,EAAA,EAAAwmC,EAAA,EAA2BxmC,EAAAwF,IAAOxF,EAAAwmC,GAAAh7B,EAAAxL,GAAAgM,GAAA,EAClC,KAAAhM,EAAA,EAAAymC,EAAA,EAAAnoC,EAAAF,EAAA4N,GAAA,GAAA5N,EAAA4N,EAAA,MAAuDhM,EAAAwF,IAAOxF,EAAA,CAC9D,IAAAuD,EAAA,EAAA+0D,GAAA9sD,EAAAxL,GAAAgM,GAAA,GAAAR,EAAAxL,GAAAgM,EAAA,UAAA1N,GAA0EiF,EAAAvD,IAAOuD,EACjF+0D,IAAA9sD,EAAAjI,GAAAyI,GAAA,GAAAR,EAAAjI,GAAAyI,EAAA,OAAA1N,CAEAmoC,IAAA6xB,EAAA9sD,EAAAxL,GAAAgM,GAAA,GAEAkY,EAAAlY,GAAA0B,GAAA84B,EAAAC,EAAAD,EAAAloC,EAAA,EACAoP,EAAA6qD,MAAA7qD,GAEA,IAAA1B,EAAA,EAAiBA,EAAAC,IAAOD,EAAAkY,EAAAlY,IAAAusD,CACxB,OAAAr0C,IAEAs0C,OAAA,SAAAhtD,GACA,GAAAxL,GAAAgM,EAAA0B,EAAAlI,EAAAgG,EAAAtR,OAAA+R,EAAAT,EAAA,GAAAtR,OAAAqJ,EAAA,EAAAiC,EAAA0e,IACA,KAAAlY,EAAA,EAAiBA,EAAAC,IAAOD,EAAA,CACxB,IAAAhM,EAAA,EAAA0N,EAAA,EAA0B1N,EAAAwF,EAAOxF,IAAA0N,GAAAlC,EAAAxL,GAAAgM,GAAA,EACjC,IAAA0B,EAAA,IAAA1N,EAAA,EAA0BA,EAAAwF,EAAOxF,IAAAwL,EAAAxL,GAAAgM,GAAA,IAAA0B,MAAyB,KAAA1N,EAAA,EAAiBA,EAAAwF,EAAOxF,IAAAwL,EAAAxL,GAAAgM,GAAA,GAAAzI,EAElF,IAAAyI,EAAA,EAAiBA,EAAAC,IAAOD,EAAAkY,EAAAlY,GAAA,CACxB,OAAAkY,IAEAu0C,KAAA3zB,IA0BAnjC,IAAAmzD,OAAA4D,UAAA,WAEA,QAAAA,GAAAltD,EAAAxL,GAEA,IADA,GAAA24D,GAAAv6D,EAAAw6D,KAAAxzB,EAAA55B,EAAA9N,IAAAm7D,EAAA90D,MAAA9E,EAAA4rC,EAAA39B,KAAAnJ,KAAAqhC,EAAAplC,GAAAurC,EAAAutB,EAAA5rD,KAAAnJ,KAAA9E,EAAAmmC,EAAAplC,MAAA,EAAAwF,EAAA4/B,EAAAlrC,OAAA+R,EAAAs/B,EAAArxC,OAAA,EAAAqJ,EAAAw1D,EAAA,IAAAvzD,IACAxF,EAAAiM,GACA0sD,EAAAC,EAAA54D,MACA24D,EAAAr6D,GAAAitC,EAAAvrC,EAAA,IAAA24D,EAAAv6D,EAAAmtC,EAAAvrC,IACA24D,EAAAt6D,EAAA,CAEA,IAAA4N,EAAA,EAEA,IADAjM,GAAA,IACAA,EAAAwF,IACApH,EAAAgnC,EAAAplC,KACAf,EAAA,IAAAb,GAAAa,EAAA,KACA05D,EAAAC,EAAAj3D,GAAAknC,OAAA0C,EAAAntC,EAAA,EAAA6N,GAAA,GACA0sD,EAAAt6D,GAAAkF,EACAo1D,EAAA/4D,KAAA4L,EAAAxL,IAIA,OAAA44D,GAnBA,GAAAG,IAAA,EAAAF,EAAA1vB,OAAA0B,EAAAtF,GAAAuzB,EAAA3zB,EA2CA,OAtBAuzB,GAAAh4D,MAAA,SAAAtC,GACA,MAAA+B,WAAAjG,QACA2+D,EAAAz6D,EACAs6D,GAFAG,GAIAH,EAAAz5D,MAAA,SAAAb,GACA,MAAA+B,WAAAjG,QACA2wC,EAAAh3B,GAAAzV,GACAs6D,GAFA7tB,GAIA6tB,EAAAE,KAAA,SAAAx6D,GACA,MAAA+B,WAAAjG,QACA4+D,EAAA,gBAAA16D,GAAA,SAAAa,GACA,MAAAomC,IAAApmC,EAAAb,IACOyV,GAAAzV,GACPs6D,GAJAI,GAMAJ,EAAAK,UAAA,SAAA36D,GACA,MAAA+B,WAAAjG,QACA6+D,IAAA36D,EACAs6D,GAFAK,GAIAL,GAaA/2D,GAAAmzD,OAAAkE,KAAA,WAEA,QAAAA,GAAA31D,EAAArD,GACA,GAAAtD,GAAAsnC,EAAA92B,KAAAnJ,KAAAV,EAAArD,GAAA+8B,EAAArgC,EAAA,GAAApC,EAAAqK,EAAA,GAAAlG,EAAAkG,EAAA,GAAAqN,EAAA,MAAA+X,EAAA5sB,KAAAyV,KAAA,kBAAAmX,KAAA,WACA,MAAAA,GAOA,IALAgT,EAAA3+B,EAAA2+B,EAAA1+B,EAAA,EACA+lC,GAAArH,EAAA,SAAA15B,GACAA,EAAA2O,KAAA3O,EAAA3C,SAEA0jC,GAAArH,EAAAgJ,IACA52B,EAAA,CACA,GAAA22B,GAAA32B,GAAA4a,EAAA,EAAA5sB,KAAAC,IAAA,EAAA2/B,EAAA/qB,EAAA1X,EAAA,EAAAyiC,EAAA/qB,EAAAvT,IAAA,CACA2lC,IAAArH,EAAA,SAAA15B,GACAA,EAAA2O,GAAA8zB,IAEA1B,GAAArH,EAAAgJ,IACA3B,GAAArH,EAAA,SAAA15B,GACAA,EAAA2O,GAAA8zB,IAIA,MADAa,IAAA5J,EAAAziC,EAAA,EAAAmE,EAAA,EAAAsrB,EAAA,IAAA5sB,KAAAC,IAAA,EAAA2/B,EAAA/qB,EAAA1X,EAAA,EAAAyiC,EAAA/qB,EAAAvT,IACA/B,EArBA,GAAAqtB,GAAAia,EAAAriC,GAAAmzD,OAAA9wB,YAAAhe,KAAAwf,IAAAr2B,EAAA,EAAAxK,GAAA,IAsCA,OAfAq0D,GAAAr0D,KAAA,SAAArJ,GACA,MAAA6E,WAAAjG,QACAyK,EAAArJ,EACA09D,GAFAr0D,GAIAq0D,EAAAjvC,OAAA,SAAAzuB,GACA,MAAA6E,WAAAjG,QACA6vB,EAAA,MAAAzuB,GAAA,kBAAAA,QACA09D,GAFAjvC,GAIAivC,EAAA7pD,QAAA,SAAA7T,GACA,MAAA6E,WAAAjG,QACAiV,GAAA7T,EACA09D,GAFA7pD,GAIA40B,GAAAi1B,EAAAh1B,IAmHAriC,GAAAmzD,OAAA94B,KAAA,WAEA,QAAAA,GAAA34B,EAAArD,GACA,GAAAtD,GAAAsnC,EAAA92B,KAAAnJ,KAAAV,EAAArD,GAAAi5D,EAAAv8D,EAAA,GAAAw8D,EAAAC,EAAAF,EAGA,IAFA70B,GAAA80B,EAAAE,GAAAF,EAAA9tD,OAAAa,GAAAitD,EAAAjzD,EACAk+B,GAAA+0B,EAAAG,GACAC,EAAAn1B,GAAA80B,EAAAM,OAAoE,CACpE,GAAAx2D,GAAAk2D,EAAA91D,EAAA81D,EAAAhB,EAAAgB,CACA90B,IAAA80B,EAAA,SAAAt8D,GACAA,EAAAyB,EAAA2E,EAAA3E,IAAA2E,EAAApG,GACAA,EAAAyB,EAAA+E,EAAA/E,IAAA+E,EAAAxG,GACAA,EAAAi0B,MAAAqnC,EAAArnC,QAAAqnC,EAAAt7D,IAEA,IAAA68D,GAAAC,EAAA12D,EAAAI,GAAA,EAAAJ,EAAA3E,EAAA0iC,EAAAn8B,EAAA,IAAAxB,EAAA/E,EAAAq7D,EAAAt2D,EAAAJ,GAAA,EAAAy2D,GAAAt4B,EAAAv8B,EAAA,IAAAszD,EAAArnC,OAAA,EACAuT,IAAA80B,EAAA,SAAAt8D,GACAA,EAAAyB,GAAAzB,EAAAyB,EAAAo7D,GAAA14B,EACAnkC,EAAA0B,EAAA1B,EAAAi0B,MAAAsQ,IAGA,MAAAxkC,GAEA,QAAAy8D,GAAAF,GAKA,IAJA,GAGOS,GAHPR,GACA96C,EAAA,KACAnkB,UAAAg/D,IACOU,GAAAT,GACP,OAAAQ,EAAAC,EAAApyC,QACA,OAAAkd,GAAAxqC,EAAAy/D,EAAAz/D,SAAA+F,EAAA,EAAAwF,EAAAvL,EAAAC,OAA8E8F,EAAAwF,IAAOxF,EACrF25D,EAAA/5D,MAAA3F,EAAA+F,GAAAykC,GACAnpC,EAAArB,EAAA+F,GACAoL,OAAAsuD,EACAz/D,UAAAwqC,EAAAxqC,EAAA+F,GAAA/F,WAAAwqC,EAAApgC,YACA+Z,EAAA,KACA7b,EAAA,KACA0D,EAAA,EACAgG,EAAA,EACAvC,EAAA,EACA5C,EAAA,EACAqP,EAAA,KACAnW,MACWuC,EAAAkiC,EAGX,OAAAy0B,GAAAj/D,SAAA,GAEA,QAAAm/D,GAAAp/D,GACA,GAAAC,GAAAD,EAAAC,SAAA2/D,EAAA5/D,EAAAoR,OAAAnR,SAAAK,EAAAN,EAAAgG,EAAA45D,EAAA5/D,EAAAgG,EAAA,OACA,IAAA/F,EAAAC,OAAA,CACAotC,GAAAttC,EACA,IAAA6/D,IAAA5/D,EAAA,GAAAgM,EAAAhM,IAAAC,OAAA,GAAA+L,GAAA,CACA3L,IACAN,EAAAiM,EAAA3L,EAAA2L,EAAAwzD,EAAAz/D,EAAAsB,EAAAhB,EAAAgB,GACAtB,EAAAiS,EAAAjS,EAAAiM,EAAA4zD,GAEA7/D,EAAAiM,EAAA4zD,MAEOv/D,KACPN,EAAAiM,EAAA3L,EAAA2L,EAAAwzD,EAAAz/D,EAAAsB,EAAAhB,EAAAgB,GAEAtB,GAAAoR,OAAAgT,EAAA07C,EAAA9/D,EAAAM,EAAAN,EAAAoR,OAAAgT,GAAAw7C,EAAA,IAEA,QAAAP,GAAAr/D,GACAA,EAAAsB,EAAA8C,EAAApE,EAAAiM,EAAAjM,EAAAoR,OAAAa,EACAjS,EAAAiS,GAAAjS,EAAAoR,OAAAa,EAEA,QAAA6tD,GAAA9/D,EAAAM,EAAAmtC,GACA,GAAAntC,EAAA,CAEA,IADA,GAAAotB,GAAAqyC,EAAA//D,EAAAggE,EAAAhgE,EAAAwtC,EAAAltC,EAAA2/D,EAAAF,EAAA3uD,OAAAnR,SAAA,GAAAigE,EAAAH,EAAA9tD,EAAAkuD,EAAAH,EAAA/tD,EAAAmuD,EAAA5yB,EAAAv7B,EAAAouD,EAAAJ,EAAAhuD,EACAu7B,EAAAP,GAAAO,GAAAuyB,EAAA/yB,GAAA+yB,GAAAvyB,GAAAuyB,GACAE,EAAAjzB,GAAAizB,GACAD,EAAA/yB,GAAA+yB,GACAA,EAAAz3D,EAAAvI,EACA0tB,EAAA8f,EAAAvhC,EAAAm0D,EAAAL,EAAA9zD,EAAAi0D,EAAAT,EAAAjyB,EAAAlsC,EAAAy+D,EAAAz+D,GACAosB,EAAA,IACAwf,GAAAK,GAAAC,EAAAxtC,EAAAytC,GAAAztC,EAAA0tB,GACAwyC,GAAAxyC,EACAyyC,GAAAzyC,GAEA0yC,GAAA5yB,EAAAv7B,EACAiuD,GAAAH,EAAA9tD,EACAouD,GAAAJ,EAAAhuD,EACAkuD,GAAAH,EAAA/tD,CAEAu7B,KAAAP,GAAA+yB,KACAA,EAAA7jD,EAAAqxB,EACAwyB,EAAA/tD,GAAAmuD,EAAAD,GAEAJ,IAAA/yB,GAAAizB,KACAA,EAAA9jD,EAAA4jD,EACAE,EAAAhuD,GAAAiuD,EAAAG,EACA5yB,EAAAztC,GAGA,MAAAytC,GAEA,QAAA8xB,GAAA58D,GACAA,EAAAyB,GAAAuG,EAAA,GACAhI,EAAA0B,EAAA1B,EAAAi0B,MAAAjsB,EAAA,GAhGA,GAAAq/B,GAAAriC,GAAAmzD,OAAA9wB,YAAAhe,KAAA,MAAAtlB,MAAA,MAAA+4D,EAAA1yB,GAAApiC,GAAA,KAAA20D,EAAA,IAiHA,OAfAt9B,GAAAy9B,WAAA,SAAAr7D,GACA,MAAA+B,WAAAjG,QACAu/D,EAAAr7D,EACA49B,GAFAy9B,GAIAz9B,EAAAr3B,KAAA,SAAAvG,GACA,MAAA+B,WAAAjG,QACAo/D,EAAA,OAAA30D,EAAAvG,GAAAm7D,EAAA,KACAv9B,GAFAs9B,EAAA,KAAA30D,GAIAq3B,EAAAs9B,SAAA,SAAAl7D,GACA,MAAA+B,WAAAjG,QACAo/D,EAAA,OAAA30D,EAAAvG,GAAA,KAAAm7D,EACAv9B,GAFAs9B,EAAA30D,EAAA,MAIAo/B,GAAA/H,EAAAgI,IAiCAriC,GAAAmzD,OAAAwF,QAAA,WAEA,QAAAA,GAAAj3D,EAAArD,GACA,GAAAu6D,GAAA79D,EAAAsnC,EAAA92B,KAAAnJ,KAAAV,EAAArD,GAAA+8B,EAAArgC,EAAA,GAAA0B,EAAA,CACAgmC,IAAArH,EAAA,SAAApgC,GACA,GAAA1C,GAAA0C,EAAA1C,QACAA,MAAAC,QACAyC,EAAAyB,EAAAupC,GAAA1tC,GACA0C,EAAA0B,EAAAqpC,GAAAztC,KAEA0C,EAAAyB,EAAAm8D,EAAAn8D,GAAAq7D,EAAA98D,EAAA49D,GAAA,EACA59D,EAAA0B,EAAA,EACAk8D,EAAA59D,IAGA,IAAAoG,GAAA6kC,GAAA7K,GAAA55B,EAAA0kC,GAAA9K,GAAA3Y,EAAArhB,EAAA3E,EAAAq7D,EAAA12D,EAAAI,GAAA,EAAA2oB,EAAA3oB,EAAA/E,EAAAq7D,EAAAt2D,EAAAJ,GAAA,CAQA,OAPAqhC,IAAArH,EAAAu8B,EAAA,SAAA38D,GACAA,EAAAyB,GAAAzB,EAAAyB,EAAA2+B,EAAA3+B,GAAAuG,EAAA,GACAhI,EAAA0B,GAAA0+B,EAAA1+B,EAAA1B,EAAA0B,GAAAsG,EAAA,IACO,SAAAhI,GACPA,EAAAyB,GAAAzB,EAAAyB,EAAAgmB,IAAA0H,EAAA1H,GAAAzf,EAAA,GACAhI,EAAA0B,GAAA,GAAA0+B,EAAA1+B,EAAA1B,EAAA0B,EAAA0+B,EAAA1+B,EAAA,IAAAsG,EAAA,KAEAjI,EAtBA,GAAAsnC,GAAAriC,GAAAmzD,OAAA9wB,YAAAhe,KAAA,MAAAtlB,MAAA,MAAA+4D,EAAA1yB,GAAApiC,GAAA,KAAA20D,GAAA,CAuCA,OAfAgB,GAAAb,WAAA,SAAAr7D,GACA,MAAA+B,WAAAjG,QACAu/D,EAAAr7D,EACAk8D,GAFAb,GAIAa,EAAA31D,KAAA,SAAAvG,GACA,MAAA+B,WAAAjG,QACAo/D,EAAA,OAAA30D,EAAAvG,GACAk8D,GAFAhB,EAAA,KAAA30D,GAIA21D,EAAAhB,SAAA,SAAAl7D,GACA,MAAA+B,WAAAjG,QACAo/D,EAAA,OAAA30D,EAAAvG,GACAk8D,GAFAhB,EAAA30D,EAAA,MAIAo/B,GAAAu2B,EAAAt2B,IAoBAriC,GAAAmzD,OAAA0F,QAAA,WAEA,QAAAljD,GAAArd,EAAAsJ,GAEA,IADA,GAAAkhC,GAAAmL,EAAA5vC,GAAA,EAAAwF,EAAAvL,EAAAC,SACA8F,EAAAwF,GACAoqC,GAAAnL,EAAAxqC,EAAA+F,IAAAU,OAAA6C,EAAA,IAAAA,GACAkhC,EAAAmL,KAAAhtC,MAAAgtC,OAAA,IAAAA,EAGA,QAAA6qB,GAAA99D,GACA,GAAA1C,GAAA0C,EAAA1C,QACA,IAAAA,KAAAC,OAAA,CACA,GAAAuqC,GAAAi2B,EAAAl1D,EAAAtH,EAAAy8D,EAAAh+D,GAAA44C,KAAAqlB,EAAA3gE,EAAAoK,QAAA0pD,EAAA/2C,IAAAyL,EAAA,UAAAo4C,EAAA38D,EAAAI,GAAA,SAAAu8D,EAAA38D,EAAAK,GAAA,eAAAs8D,EAAA,EAAAl+D,EAAAi0B,MAAA1yB,EAAAK,GAAAL,EAAAI,GAAAnB,KAAAoC,IAAArB,EAAAI,GAAAJ,EAAAK,GAGA,KAFA+Y,EAAAsjD,EAAA18D,EAAAI,GAAAJ,EAAAK,GAAA5B,EAAA+D,OACA60C,EAAA3F,KAAA,GACApqC,EAAAo1D,EAAA1gE,QAAA,GACAq7C,EAAA31C,KAAA6kC,EAAAm2B,EAAAp1D,EAAA,IACA+vC,EAAA3F,MAAAnL,EAAAmL,KACA,aAAAirB,IAAAH,EAAAI,EAAAvlB,EAAA9yB,KAAAsrC,GACA6M,EAAArzC,MACAwmC,EAAA2M,IAEAnlB,EAAA3F,MAAA2F,EAAAhuB,MAAAqoB,KACA5gC,EAAAumC,EAAA9yB,EAAAvkB,GAAA,GACAukB,EAAAtlB,KAAAoC,IAAArB,EAAAI,GAAAJ,EAAAK,IACAg3C,EAAAr7C,OAAAq7C,EAAA3F,KAAA,EACAme,EAAA/2C,IAGAu+B,GAAAr7C,SACA8U,EAAAumC,EAAA9yB,EAAAvkB,GAAA,GACAq3C,EAAAr7C,OAAAq7C,EAAA3F,KAAA,GAEA31C,EAAAwC,QAAAg+D,IAGA,QAAAM,GAAAp+D,GACA,GAAA1C,GAAA0C,EAAA1C,QACA,IAAAA,KAAAC,OAAA,CACA,GAAAuqC,GAAAvmC,EAAAy8D,EAAAh+D,GAAAi+D,EAAA3gE,EAAAoK,QAAAkxC,IAGA,KAFAj+B,EAAAsjD,EAAA18D,EAAAI,GAAAJ,EAAAK,GAAA5B,EAAA+D,OACA60C,EAAA3F,KAAA,EACAnL,EAAAm2B,EAAArzC,OACAguB,EAAA31C,KAAA6kC,GACA8Q,EAAA3F,MAAAnL,EAAAmL,KACA,MAAAnL,EAAAx+B,IACA+I,EAAAumC,EAAA9Q,EAAAx+B,EAAA/H,EAAAI,GAAAJ,EAAAK,GAAAL,GAAA08D,EAAA1gE,QACAq7C,EAAAr7C,OAAAq7C,EAAA3F,KAAA,EAGA31C,GAAAwC,QAAAs+D,IAGA,QAAAD,GAAAvlB,EAAA9yB,GAEA,IADA,GAAAzQ,GAAAlL,EAAAyuC,EAAA3F,KAAAorB,EAAA,EAAAC,EAAAjkD,IAAAhX,GAAA,EAAAwF,EAAA+vC,EAAAr7C,SACA8F,EAAAwF,IACAwM,EAAAujC,EAAAv1C,GAAA4vC,QACA59B,EAAAipD,MAAAjpD,GACAA,EAAAgpD,MAAAhpD,GAIA,OAFAlL,MACA2b,KACA3b,EAAA3J,KAAAC,IAAAqlB,EAAAu4C,EAAAE,EAAAp0D,KAAA2b,EAAAw4C,EAAAC,IAAAlkD,IAEA,QAAAhI,GAAAumC,EAAA9yB,EAAAvkB,EAAAorD,GACA,GAAA57C,GAAA1N,GAAA,EAAAwF,EAAA+vC,EAAAr7C,OAAAkE,EAAAF,EAAAE,EAAAC,EAAAH,EAAAG,EAAArE,EAAAyoB,EAAAhR,EAAA8jC,EAAA3F,KAAAntB,GAAA,CACA,IAAAA,GAAAvkB,EAAAI,GAAA,CAEA,KADAgrD,GAAAtvD,EAAAkE,EAAAK,MAAAvE,EAAAkE,EAAAK,MACAyB,EAAAwF,GACAkI,EAAA6nC,EAAAv1C,GACA0N,EAAAtP,IACAsP,EAAArP,IACAqP,EAAAnP,GAAAvE,EACAoE,GAAAsP,EAAApP,GAAAnB,KAAAoC,IAAArB,EAAAE,EAAAF,EAAAI,GAAAF,EAAApE,EAAAyX,EAAA/D,EAAAkiC,KAAA51C,GAAA,EAEA0T,GAAAzH,GAAA,EACAyH,EAAApP,IAAAJ,EAAAE,EAAAF,EAAAI,GAAAF,EACAF,EAAAG,GAAArE,EACAkE,EAAAK,IAAAvE,MACO,CAEP,KADAsvD,GAAAtvD,EAAAkE,EAAAI,MAAAtE,EAAAkE,EAAAI,MACA0B,EAAAwF,GACAkI,EAAA6nC,EAAAv1C,GACA0N,EAAAtP,IACAsP,EAAArP,IACAqP,EAAApP,GAAAtE,EACAqE,GAAAqP,EAAAnP,GAAApB,KAAAoC,IAAArB,EAAAG,EAAAH,EAAAK,GAAAF,EAAArE,EAAAyX,EAAA/D,EAAAkiC,KAAA51C,GAAA,EAEA0T,GAAAzH,GAAA,EACAyH,EAAAnP,IAAAL,EAAAG,EAAAH,EAAAK,GAAAF,EACAH,EAAAE,GAAApE,EACAkE,EAAAI,IAAAtE,GAGA,QAAAwgE,GAAAn3D,GACA,GAAA3G,GAAAy+D,GAAAn3B,EAAA3gC,GAAA05B,EAAArgC,EAAA,EAOA,OANAqgC,GAAA3+B,EAAA2+B,EAAA1+B,EAAA,EACA0+B,EAAAr8B,OAAAq8B,EAAAz+B,GAAAqG,EAAA,GAAAo4B,EAAAx+B,GAAAoG,EAAA,IAA2Do4B,EAAAz+B,GAAAy+B,EAAAx+B,GAAA,EAC3D48D,GAAAn3B,EAAAszB,QAAAv6B,GACAzlB,GAAAylB,KAAAz+B,GAAAy+B,EAAAx+B,GAAAw+B,EAAAr8B,QACAy6D,EAAAJ,EAAAN,GAAA19B,GACAq+B,IAAAD,EAAAz+D,GACAA,EArGA,GAAAy+D,GAAAn3B,EAAAriC,GAAAmzD,OAAA9wB,YAAAvyB,EAAAtU,KAAAsU,MAAA9M,GAAA,KAAAwK,EAAA,KAAAwrD,EAAA7yB,GAAAszB,GAAA,EAAAP,EAAA,WAAAK,EAAA,MAAA/9D,KAAAyV,KAAA,GA+IA,OAxCA4nD,GAAA71D,KAAA,SAAAvG,GACA,MAAA+B,WAAAjG,QACAyK,EAAAvG,EACAo8D,GAFA71D,GAIA61D,EAAArrD,QAAA,SAAA/Q,GAEA,QAAAi9D,GAAA1+D,GACA,GAAAua,GAAA9Y,EAAA8O,KAAAstD,EAAA79D,IAAAi0B,MACA,cAAA1Z,EAAA4wB,GAAAnrC,GAAAorC,GAAAprC,EAAA,gBAAAua,gBAEA,QAAAokD,GAAA3+D,GACA,MAAAorC,IAAAprC,EAAAyB,GANA,IAAA+B,UAAAjG,OAAA,MAAAiV,EAQA,IAAAvT,EAGA,OAFA++D,GAAA,OAAAxrD,EAAA/Q,GAAA0pC,GAAA,aAAAlsC,QAAAwC,IAAAi9D,EAAA,WAAAz/D,GAAAwC,YACAk9D,KACAd,GAEAA,EAAA/oD,MAAA,SAAArT,GACA,MAAA+B,WAAAjG,QACAuX,EAAArT,EAAAjB,KAAAsU,MAAA03B,OACAqxB,GAFA/oD,GAAA03B,QAIAqxB,EAAAY,OAAA,SAAAh9D,GACA,MAAA+B,WAAAjG,QACAkhE,EAAAh9D,EACA+8D,EAAA,KACAX,GAHAY,GAKAZ,EAAAU,MAAA,SAAA98D,GACA,MAAA+B,WAAAjG,QACAghE,EAAA98D,EACAo8D,GAFAU,GAIAV,EAAAK,KAAA,SAAAz8D,GACA,MAAA+B,WAAAjG,QACA2gE,EAAAz8D,EAAA,GACAo8D,GAFAK,GAIA92B,GAAAy2B,EAAAx2B,IA2BAriC,GAAAkiC,QACAupB,OAAA,SAAAmO,EAAAC,GACA,GAAAh2D,GAAArF,UAAAjG,MAGA,OAFAsL,GAAA,IAAAg2D,EAAA,GACAh2D,EAAA,IAAA+1D,EAAA,GACA,WACA,GAAAn9D,GAAAC,EAAA2T,CACA,IACA5T,EAAA,EAAAjB,KAAA0mC,SAAA,EACAxlC,EAAA,EAAAlB,KAAA0mC,SAAA,EACA7xB,EAAA5T,IAAAC,WACS2T,KAAA,EACT,OAAAupD,GAAAC,EAAAp9D,EAAAjB,KAAAyV,MAAA,EAAAzV,KAAA4D,IAAAiR,QAGAypD,UAAA,WACA,GAAA53B,GAAAliC,GAAAkiC,OAAAupB,OAAAjoD,MAAAxD,GAAAxB,UACA,mBACA,MAAAhD,MAAAyT,IAAAizB,OAGA63B,MAAA,SAAAzvD,GACA,GAAA43B,GAAAliC,GAAAkiC,OAAA83B,UAAA1vD,EACA,mBACA,MAAA43B,KAAA53B,IAGA0vD,UAAA,SAAA1vD,GACA,kBACA,OAAAnF,GAAA,EAAAkF,EAAA,EAA8BA,EAAAC,EAAOD,IAAAlF,GAAA3J,KAAA0mC,QACrC,OAAA/8B,MAIAnF,GAAA2V,QAkCA,IAAAqxB,KACAluB,MAAA3V,EACAqS,KAAArS,EAiBAnD,IAAA2V,MAAA2xB,OAAA,WACA,MAAAH,KAAA,WAAA/K,IAAA,GA+FA,IAAAkM,KACAnjC,EAAA,EACA/M,EAAA,EACAmd,EAAA,EACAlF,EAAA,EACA5X,EAAA,EASAuH,IAAA2V,MAAAvW,IAAA,WACA,MAAAmpC,IAAAvoC,GAAA2V,MAAA2xB,SAAAhB,QAAA,oBAgEA,IAAAsC,IAAA5oC,GAAAwR,OAAA,OAAAm3B,IACA7vB,MAAA,SAAArc,GACA,OAAAjB,KAAAga,MAAA/Y,IAEA+Y,KAAA,SAAA/Y,GACA,OAAAjB,KAAAsd,OAAArc,IAGAuD,IAAA2V,MAAAxE,IAAA,WACA,MAAA03B,IAAA7oC,GAAA2V,MAAA2xB,SAAA,UAyCAtnC,GAAA2V,MAAA1E,KAAA,WACA,MAAAjR,IAAA2V,MAAAxE,MAAAkG,SAAA,KAEArX,GAAA2V,MAAAskD,QAAA,WACA,MAAAhxB,QACAz0B,EAAA,QACA5T,UA4FAZ,GAAA2V,MAAAukD,WAAA,WACA,MAAAl6D,IAAA2V,MAAAskD,UAAA38D,MAAA68D,KAEAn6D,GAAA2V,MAAAykD,WAAA,WACA,MAAAp6D,IAAA2V,MAAAskD,UAAA38D,MAAA+8D,KAEAr6D,GAAA2V,MAAA2kD,YAAA,WACA,MAAAt6D,IAAA2V,MAAAskD,UAAA38D,MAAAi9D,KAEAv6D,GAAA2V,MAAA6kD,YAAA,WACA,MAAAx6D,IAAA2V,MAAAskD,UAAA38D,MAAAm9D,IAEA,IAAAN,KAAA,qFAAAp+D,IAAAsV,IACAgpD,IAAA,+KAAAt+D,IAAAsV,IACAkpD,IAAA,6KAAAx+D,IAAAsV,IACAopD,IAAA,8KAAA1+D,IAAAsV,GACArR,IAAA2V,MAAAk0B,SAAA,WACA,MAAAF,YAmCA3pC,GAAA2V,MAAA+kD,SAAA,WACA,MAAA1wB,IAAA,YAiCAhqC,GAAA2V,MAAAglD,UAAA,WACA,MAAA1wB,KAAA,YAyBAjqC,GAAA2V,MAAAw0B,SAAA,WACA,MAAAD,KAAA,OAuBAlqC,GAAA8M,OAIA9M,GAAA8M,IAAAkb,IAAA,WAEA,QAAAA,KACA,GAAAiX,GAAAzjC,KAAAC,IAAA,GAAA6uC,EAAA9mC,MAAApB,KAAA5D,YAAA0gC,EAAA1jC,KAAAC,IAAA,GAAA+uC,EAAAhnC,MAAApB,KAAA5D,YAAAkwB,EAAAgc,EAAAlnC,MAAApB,KAAA5D,WAAAsQ,GAAAkc,EAAA4f,EAAApnC,MAAApB,KAAA5D,WAAAsQ,GAAAo2B,EAAA1pC,KAAA2B,IAAA6tB,EAAA0D,GAAAwc,EAAAxc,EAAA1D,EAAA,GAEA,IADAkU,EAAAD,IAAAgM,EAAA/L,IAAAD,IAAAgM,GACA/F,GAAA+T,GAAA,MAAA2hB,GAAA17B,EAAAgM,IAAAjM,EAAA27B,EAAA37B,EAAA,EAAAiM,GAAA,OACA,IAAAD,GAAA3iB,EAAAuyC,EAAAC,EAAAr4C,EAAAF,EAAA4H,EAAAC,EAAAkF,EAAAC,EAAAiF,EAAAG,EAAAzQ,EAAA,EAAAC,EAAA,EAAAmoB,IAOA,KANAwuB,IAAAhwB,EAAAtnC,MAAApB,KAAA5D,YAAA,QACAq8D,EAAAE,IAAAC,GAAAx/D,KAAAyV,KAAAguB,IAAAC,MAAA67B,EAAAv3D,MAAApB,KAAA5D,WACA0sC,IAAA/mB,IAAA,GACA+a,IAAA/a,EAAAtV,GAAAgsD,EAAA37B,EAAA1jC,KAAA6T,IAAAyrD,KACA77B,IAAA/a,EAAArV,GAAAgsD,EAAA57B,EAAAzjC,KAAA6T,IAAAyrD,MAEA57B,EAAA,CACAzc,EAAAyc,EAAA1jC,KAAA+U,IAAAme,EAAAvK,GACA5B,EAAA2c,EAAA1jC,KAAA6T,IAAAqf,EAAAvK,GACAgG,EAAA+U,EAAA1jC,KAAA+U,IAAAya,EAAA7G,GACAiG,EAAA8U,EAAA1jC,KAAA6T,IAAA2b,EAAA7G,EACA,IAAAy3B,GAAApgD,KAAA2B,IAAA6tB,EAAA0D,EAAA,EAAAvK,IAAAxV,GAAA,GACA,IAAAwV,GAAA4mB,GAAAtoB,EAAAF,EAAA4H,EAAAC,KAAA8gB,EAAA0Q,EAAA,CACA,GAAAqf,IAAAvsC,EAAA1D,GAAA,CACAvI,GAAAyc,EAAA1jC,KAAA+U,IAAA0qD,GACA14C,EAAA2c,EAAA1jC,KAAA6T,IAAA4rD,GACA9wC,EAAAC,EAAA,UAGA3H,GAAAF,EAAA,CAEA,IAAA0c,EAAA,CACA3P,EAAA2P,EAAAzjC,KAAA+U,IAAAya,EAAA9G,GACAqL,EAAA0P,EAAAzjC,KAAA6T,IAAA2b,EAAA9G,GACAsQ,EAAAyK,EAAAzjC,KAAA+U,IAAAme,EAAAxK,GACAyQ,EAAAsK,EAAAzjC,KAAA6T,IAAAqf,EAAAxK,EACA,IAAAy3B,GAAAngD,KAAA2B,IAAAuxB,EAAA1D,EAAA,EAAA9G,IAAAvV,GAAA,GACA,IAAAuV,GAAA6mB,GAAAzb,EAAAC,EAAAiF,EAAAG,KAAA,EAAAuW,EAAAyQ,EAAA,CACA,GAAAuf,IAAAxsC,EAAA1D,GAAA,CACAsE,GAAA2P,EAAAzjC,KAAA+U,IAAA2qD,GACA3rC,EAAA0P,EAAAzjC,KAAA6T,IAAA6rD,GACA1mC,EAAAG,EAAA,UAGArF,GAAAC,EAAA,CAEA,IAAA2V,EAAAnjB,KAAAkpB,EAAAzvC,KAAAoC,IAAApC,KAAA2B,IAAA+hC,EAAAD,GAAA,GAAAk8B,EAAA33D,MAAApB,KAAA5D,aAAA,MACA8pB,EAAA2W,EAAAC,EAAAgM,EAAA,GACA,IAAAkwB,GAAAnwB,EAAAowB,EAAApwB,CACA,IAAA/F,EAAAv2B,GAAA,CACA,GAAA2sD,GAAA,MAAA9mC,GAAAlF,EAAAC,GAAA,MAAApF,GAAA1H,EAAAF,GAAAgS,IAAA9R,EAAAF,IAAAiS,EAAAG,IAAAxK,EAAAC,IAAAkF,EAAAC,IAAAlF,EAAA5H,EAAA64C,EAAA,GAAAhxC,EAAA/H,EAAA+4C,EAAA,GAAA/wC,EAAAJ,EAAAmxC,EAAA,GAAA9wC,EAAAJ,EAAAkxC,EAAA,GAAAC,EAAA,EAAA//D,KAAA6T,IAAA7T,KAAAoT,MAAAyb,EAAAE,EAAAD,EAAAE,IAAAhvB,KAAAyV,KAAAoZ,IAAAC,KAAA9uB,KAAAyV,KAAAsZ,IAAAC,OAAA,GAAAgxC,EAAAhgE,KAAAyV,KAAAqqD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAD,GAAA7/D,KAAAoC,IAAAqtC,GAAAhM,EAAAu8B,IAAAD,EAAA,IACAH,EAAA5/D,KAAAoC,IAAAqtC,GAAA/L,EAAAs8B,IAAAD,EAAA,IAEA,SAAApxC,EAAA,CACA,GAAAsxC,GAAAzwB,GAAA,MAAAxW,GAAAlF,EAAAC,IAAAiF,EAAAG,IAAAlS,EAAAF,GAAA2c,EAAAk8B,EAAAlwB,GAAAwwB,EAAA1wB,IAAA7gB,EAAAC,IAAAkF,EAAAC,GAAA2P,EAAAk8B,EAAAlwB,EACAD,KAAAmwB,EACA9uB,EAAAruC,KAAA,IAAAw9D,EAAA,OAAAL,EAAA,IAAAA,EAAA,QAAA9yC,EAAA,IAAAmzC,EAAA,OAAAv8B,EAAA,IAAAA,EAAA,QAAAgM,EAAAH,GAAA0wB,EAAA,MAAAA,EAAA,MAAAC,EAAA,MAAAA,EAAA,WAAAxwB,EAAA,IAAAwwB,EAAA,OAAAN,EAAA,IAAAA,EAAA,QAAA9yC,EAAA,IAAAozC,EAAA,IAEApvB,EAAAruC,KAAA,IAAAw9D,EAAA,OAAAL,EAAA,IAAAA,EAAA,QAAA9yC,EAAA,IAAAozC,EAAA,QAGApvB,GAAAruC,KAAA,IAAAwkB,EAAA,IAAAF,EAEA,UAAAiS,EAAA,CACA,GAAAmnC,GAAA3wB,IAAAvoB,EAAAF,IAAAiS,EAAAG,GAAAsK,GAAAo8B,EAAAnwB,GAAA0wB,EAAA5wB,IAAA1b,EAAAC,GAAA,MAAApF,GAAA1H,EAAAF,IAAA4H,EAAAC,GAAA6U,GAAAo8B,EAAAnwB,EACAD,KAAAowB,EACA/uB,EAAAruC,KAAA,IAAA29D,EAAA,OAAAP,EAAA,IAAAA,EAAA,QAAA/yC,EAAA,IAAAszC,EAAA,OAAA38B,EAAA,IAAAA,EAAA,MAAAiM,EAAAH,GAAA6wB,EAAA,MAAAA,EAAA,MAAAD,EAAA,MAAAA,EAAA,aAAAzwB,EAAA,IAAAywB,EAAA,OAAAN,EAAA,IAAAA,EAAA,QAAA/yC,EAAA,IAAAqzC,EAAA,IAEArvB,EAAAruC,KAAA,IAAA29D,EAAA,OAAAP,EAAA,IAAAA,EAAA,QAAA/yC,EAAA,IAAAqzC,EAAA,QAGArvB,GAAAruC,KAAA,IAAAqxB,EAAA,IAAAC,OAGA+c,GAAAruC,KAAA,IAAAwkB,EAAA,IAAAF,GACA,MAAA4H,GAAAmiB,EAAAruC,KAAA,IAAAihC,EAAA,IAAAA,EAAA,MAAA0c,EAAA,IAAA1Q,EAAA,IAAA/gB,EAAA,IAAAC,GACAkiB,EAAAruC,KAAA,IAAAqxB,EAAA,IAAAC,GACA,MAAAiF,GAAA8X,EAAAruC,KAAA,IAAAghC,EAAA,IAAAA,EAAA,MAAA0c,EAAA,MAAAzQ,EAAA,IAAA1W,EAAA,IAAAG,EAGA,OADA2X,GAAAruC,KAAA,KACAquC,EAAA51B,KAAA,IAEA,QAAAkkD,GAAA17B,EAAAgM,GACA,YAAAhM,EAAA,IAAAA,EAAA,IAAAA,EAAA,QAAAgM,EAAA,OAAAhM,EAAA,IAAAA,EAAA,IAAAA,EAAA,QAAAgM,EAAA,MAAAhM,EAhFA,GAAAoL,GAAAD,GAAAG,EAAAD,GAAA4wB,EAAA/wB,GAAA2wB,EAAAC,GAAAtwB,EAAAD,GAAAG,EAAAD,GAAAG,EAAAD,EAyHA,OAvCA7iB,GAAAsiB,YAAA,SAAAjyC,GACA,MAAAmG,WAAAjG,QACA+xC,EAAAp4B,GAAA7Z,GACA2vB,GAFAsiB,GAIAtiB,EAAAwiB,YAAA,SAAAnyC,GACA,MAAAmG,WAAAjG,QACAiyC,EAAAt4B,GAAA7Z,GACA2vB,GAFAwiB,GAIAxiB,EAAAmzC,aAAA,SAAA9iE,GACA,MAAAmG,WAAAjG,QACA4iE,EAAAjpD,GAAA7Z,GACA2vB,GAFAmzC,GAIAnzC,EAAA+yC,UAAA,SAAA1iE,GACA,MAAAmG,WAAAjG,QACAwiE,EAAA1iE,GAAA2iE,MAAA9oD,GAAA7Z,GACA2vB,GAFA+yC,GAIA/yC,EAAA0iB,WAAA,SAAAryC,GACA,MAAAmG,WAAAjG,QACAmyC,EAAAx4B,GAAA7Z,GACA2vB,GAFA0iB,GAIA1iB,EAAA4iB,SAAA,SAAAvyC,GACA,MAAAmG,WAAAjG,QACAqyC,EAAA14B,GAAA7Z,GACA2vB,GAFA4iB,GAIA5iB,EAAA8iB,SAAA,SAAAzyC,GACA,MAAAmG,WAAAjG,QACAuyC,EAAA54B,GAAA7Z,GACA2vB,GAFA8iB,GAIA9iB,EAAAqkC,SAAA,WACA,GAAAh8C,KAAAi6B,EAAA9mC,MAAApB,KAAA5D,aAAAgsC,EAAAhnC,MAAApB,KAAA5D,YAAA,EAAAoC,IAAA8pC,EAAAlnC,MAAApB,KAAA5D,aAAAosC,EAAApnC,MAAApB,KAAA5D,YAAA,EAAAsQ,EACA,QAAAtT,KAAA+U,IAAA3P,GAAAyP,EAAA7U,KAAA6T,IAAAzO,GAAAyP,IAEA2X,EAEA,IAAAgzC,IAAA,MAqEAh7D,IAAA8M,IAAAqY,KAAA,WACA,MAAA2mB,IAAA3oC,GAEA,IAAAgpC,IAAAnsC,GAAAjE,KACAurC,OAAA2E,GACA4vB,gBAAAzvB,GACAh0B,KAAAi0B,GACAyvB,cAAAvvB,GACAwvB,aAAAvvB,GACAwvB,MAAA9uB,GACA+uB,aAAA3uB,GACA4uB,eAAA3uB,GACA6lB,OAAA5lB,GACA2uB,SAAAtvB,GACAuvB,gBAAA3vB,GACA4vB,kBAAAzvB,GACA0vB,SAAAxuB,IAEA3B,IAAArxC,QAAA,SAAAkH,EAAAjD,GACAA,EAAAiD,MACAjD,EAAA6gB,OAAA,WAAAxX,KAAApG,IA8IA,IAAAyrC,KAAA,aAAAC,IAAA,aAAAN,IAAA,cA0CAptC,IAAA8M,IAAAqY,KAAAo3C,OAAA,WACA,GAAAp3C,GAAA2mB,GAAAiC,GAGA,OAFA5oB,GAAAiD,OAAAjD,EAAA1oB,QAAA0oB,GAAA1oB,EACA0oB,EAAA2M,MAAA3M,EAAAzoB,QAAAyoB,GAAAzoB,EACAyoB,GAsFAonB,GAAA91B,QAAA+1B,GACAA,GAAA/1B,QAAA81B,GACAvsC,GAAA8M,IAAAmhC,KAAA,WACA,MAAAD,IAAA7qC,IAEAnD,GAAA8M,IAAAmhC,KAAAsuB,OAAA,WACA,GAAAtuB,GAAAD,GAAAD,GAOA,OANAE,GAAA7lB,OAAA6lB,EAAAxxC,QAAAwxC,GAAAxxC,EACAwxC,EAAA3D,YAAA2D,EAAAxrB,SAAAwrB,GAAAxrB,GACAwrB,EAAAzD,YAAAyD,EAAA9jB,SAAA8jB,GAAA9jB,GACA8jB,EAAAnc,MAAAmc,EAAAvxC,QAAAuxC,GAAAvxC,EACAuxC,EAAAvD,WAAAuD,EAAA1rB,SAAA0rB,GAAA1rB,GACA0rB,EAAArD,SAAAqD,EAAA7jB,SAAA6jB,GAAA7jB,GACA6jB,GAEAjuC,GAAA8M,IAAAwmD,MAAA,WAEA,QAAAA,GAAA5xD,EAAArD,GACA,GAAA8G,GAAAowC,EAAAnzC,KAAAkB,EAAA5B,EAAArD,GAAAmW,EAAA+gC,EAAAnzC,KAAAiB,EAAA3B,EAAArD,EACA,WAAA8G,EAAA+e,GAAA8D,EAAA7iB,EAAAkL,EAAAlL,EAAAgf,GAAAhf,EAAA6lB,GAAA7lB,EAAAupB,KAAA8tC,EAAAr3D,EAAAqP,GAAAioD,EAAAt3D,EAAAkL,EAAAlL,EAAAgf,GAAAhf,EAAAkL,EAAAlL,EAAA+e,IAAAu4C,EAAAt3D,EAAAkL,EAAAlL,EAAAgf,GAAA3P,EAAAnE,EAAAmE,EAAA0P,IAAA8D,EAAAxT,EAAAnE,EAAAmE,EAAA2P,GAAA3P,EAAAwW,GAAAxW,EAAAka,IAAA+tC,EAAAjoD,EAAAnE,EAAAmE,EAAA2P,GAAAhf,EAAAkL,EAAAlL,EAAA+e,KAAA,IAEA,QAAAqxB,GAAAmnB,EAAA9uD,EAAAlM,EAAArD,GACA,GAAAk3C,GAAA3nC,EAAArC,KAAAmxD,EAAAh7D,EAAArD,GAAAgS,EAAA+X,EAAA7c,KAAAmxD,EAAAnnB,EAAAl3C,GAAAqwB,EAAAgc,EAAAn/B,KAAAmxD,EAAAnnB,EAAAl3C,GAAAyQ,GAAAkc,EAAA4f,EAAAr/B,KAAAmxD,EAAAnnB,EAAAl3C,GAAAyQ,EACA,QACAuB,IACAqe,KACA1D,KACA9G,IAAA7T,EAAA7U,KAAA+U,IAAAme,GAAAre,EAAA7U,KAAA6T,IAAAqf,IACAvK,IAAA9T,EAAA7U,KAAA+U,IAAAya,GAAA3a,EAAA7U,KAAA6T,IAAA2b,KAGA,QAAAwxC,GAAA57D,EAAAC,GACA,MAAAD,GAAA8tB,IAAA7tB,EAAA6tB,IAAA9tB,EAAAoqB,IAAAnqB,EAAAmqB,GAEA,QAAAhD,GAAA3X,EAAAkF,EAAA3U,GACA,UAAAyP,EAAA,IAAAA,EAAA,SAAAzP,EAAA+N,IAAA,MAAA4G,EAEA,QAAAknD,GAAAx9B,EAAA/a,EAAAgb,EAAA/a,GACA,eAAAA,EAtBA,GAAA7gB,GAAA4uB,GAAA7uB,EAAA8uB,GAAA/J,EAAAqmB,GAAA/D,EAAAD,GAAAG,EAAAD,EAiDA,OAzBA2oB,GAAAlrC,OAAA,SAAA/vB,GACA,MAAAmG,WAAAjG,QACA6vB,EAAAlW,GAAA7Z,GACAi7D,GAFAlrC,GAIAkrC,EAAAhwD,OAAA,SAAAjL,GACA,MAAAmG,WAAAjG,QACA+K,EAAA4O,GAAA7Z,GACAi7D,GAFAhwD,GAIAgwD,EAAAjwD,OAAA,SAAAhL,GACA,MAAAmG,WAAAjG,QACA8K,EAAA6O,GAAA7Z,GACAi7D,GAFAjwD,GAIAiwD,EAAA5oB,WAAA,SAAAryC,GACA,MAAAmG,WAAAjG,QACAmyC,EAAAx4B,GAAA7Z,GACAi7D,GAFA5oB,GAIA4oB,EAAA1oB,SAAA,SAAAvyC,GACA,MAAAmG,WAAAjG,QACAqyC,EAAA14B,GAAA7Z,GACAi7D,GAFA1oB,GAIA0oB,GAKAtzD,GAAA8M,IAAA6vD,SAAA,WAEA,QAAAA,GAAAj7D,EAAArD,GACA,GAAA6lB,GAAA5gB,EAAAiI,KAAAnJ,KAAAV,EAAArD,GAAAu+D,EAAAv5D,EAAAkI,KAAAnJ,KAAAV,EAAArD,GAAAiM,GAAA4Z,EAAAxnB,EAAAkgE,EAAAlgE,GAAA,EAAA6Y,GAAA2O,GACAznB,EAAAynB,EAAAznB,EACAC,EAAA4N,IAEA7N,EAAAmgE,EAAAngE,EACAC,EAAA4N,GACOsyD,EAEP,OADArnD,KAAAxZ,IAAAi0B,GACA,IAAAza,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,GAVA,GAAAjS,GAAA4uB,GAAA7uB,EAAA8uB,GAAAnC,EAAA0e,EA2BA,OAfAiuB,GAAAr5D,OAAA,SAAA7G,GACA,MAAA+B,WAAAjG,QACA+K,EAAA4O,GAAAzV,GACAkgE,GAFAr5D,GAIAq5D,EAAAt5D,OAAA,SAAA5G,GACA,MAAA+B,WAAAjG,QACA8K,EAAA6O,GAAAzV,GACAkgE,GAFAt5D,GAIAs5D,EAAA3sC,WAAA,SAAAvzB,GACA,MAAA+B,WAAAjG,QACAy3B,EAAAvzB,EACAkgE,GAFA3sC,GAIA2sC,GAKA38D,GAAA8M,IAAA6vD,SAAAJ,OAAA,WACA,GAAAI,GAAA38D,GAAA8M,IAAA6vD,WAAA3sC,EAAA0e,GAAAmuB,EAAAF,EAAA3sC,UAIA,OAHA2sC,GAAA3sC,WAAA,SAAAvzB,GACA,MAAA+B,WAAAjG,OAAAskE,EAAAluB,GAAA3e,EAAAvzB,IAAAuzB,GAEA2sC,GAQA38D,GAAA8M,IAAA8I,OAAA,WAEA,QAAAA,GAAAlU,EAAArD,GACA,OAAAy+D,GAAAn4D,IAAA1K,EAAAsR,KAAAnJ,KAAAV,EAAArD,KAAAywC,IAAA9rC,EAAAuI,KAAAnJ,KAAAV,EAAArD,IAFA,GAAApE,GAAA40C,GAAA7rC,EAAA4rC,EAcA,OAVAh5B,GAAA3b,KAAA,SAAAwC,GACA,MAAA+B,WAAAjG,QACA0B,EAAAiY,GAAAzV,GACAmZ,GAFA3b,GAIA2b,EAAA5S,KAAA,SAAAvG,GACA,MAAA+B,WAAAjG,QACAyK,EAAAkP,GAAAzV,GACAmZ,GAFA5S,GAIA4S,EAYA,IAAAknD,IAAA98D,GAAAjE,KACAo5B,OAAA2Z,GACAiuB,MAAA,SAAA/5D,GACA,GAAAqN,GAAA7U,KAAAyV,KAAAjO,EAAA,IACA,cAAAqN,EAAA,KAAAA,EAAA,KAAAA,EAAA,OAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,MAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,OAAAA,EAAA,KAEA2sD,QAAA,SAAAh6D,GACA,GAAA+2B,GAAAv+B,KAAAyV,KAAAjO,GAAA,EAAAi6D,KAAAnjC,EAAAC,EAAAkjC,EACA,cAAAljC,EAAA,IAAAD,EAAA,QAAAC,EAAA,KAAAD,EAAA,OAEAojC,OAAA,SAAAl6D,GACA,GAAAqN,GAAA7U,KAAAyV,KAAAjO,GAAA,CACA,YAAAqN,EAAA,KAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAAAA,EAAA,IAAAA,EAAA,KAEA8sD,gBAAA,SAAAn6D,GACA,GAAA82B,GAAAt+B,KAAAyV,KAAAjO,EAAAo6D,IAAArjC,EAAAD,EAAAsjC,GAAA,CACA,aAAArjC,EAAA,IAAAD,EAAA,KAAAC,EAAA,KAAAD,EAAA,KAAAC,EAAA,KAEAsjC,cAAA,SAAAr6D,GACA,GAAA82B,GAAAt+B,KAAAyV,KAAAjO,EAAAo6D,IAAArjC,EAAAD,EAAAsjC,GAAA,CACA,cAAArjC,EAAA,IAAAD,EAAA,IAAAC,EAAA,KAAAD,EAAA,IAAAC,EAAA,MAGA/5B,IAAA8M,IAAAwwD,YAAAR,GAAAh6D,MACA,IAAAs6D,IAAA5hE,KAAAyV,KAAA,GAAAgsD,GAAAzhE,KAAAi4B,IAAA,GAAAjjB,GACA1K,IAAAjM,WAAA,SAAAjB,GAOA,OANA28C,GAAAv6C,EAAAs0C,EAAAoN,MAAA6gB,GAAAt2D,EAAA2oC,GAAAh3C,GAAA68C,KAAA57C,EAAA2jE,KACAx+D,KAAAsV,KAAApV,MACAmxC,KAAA7S,GACAppB,MAAA,EACAk8B,SAAA,KAEAjmC,GAAA,EAAAC,EAAAlI,KAAA7J,SAAqC8R,EAAAC,GAAS,CAC9CmrC,EAAAx3C,KAAAs3C,KACA,QAAAhrC,GAAAnI,KAAAiI,GAAAhM,GAAA,EAAAwF,EAAA0G,EAAAhS,SAAyD8F,EAAAwF,IACzD7I,EAAAuP,EAAAlM,KAAAwxC,GAAA70C,EAAAqD,EAAA4I,EAAAqoC,EAAAz1C,GACA07C,EAAAt3C,KAAAjD,GAGA,MAAAq0C,IAAAoG,EAAAxuC,EAAAqoC,IAEAxpC,GAAAspC,UAAA,SAAAx2C,GACA,MAAAwJ,MAAA6zC,KAAA,MAAAr9C,EAAAoiD,GAAAjM,GAAAa,GAAAh3C,KAEA,IAmBA8jD,IAAA8gB,GAnBAxiB,GAAAjM,GAAAa,MAmBAL,MAAAguB,GAAA,CACAhuB,IAAAhkC,KAAAzF,GAAAyF,KACAgkC,GAAA2E,MAAApuC,GAAAouC,MACA3E,GAAAv0C,KAAA8K,GAAA9K,KACAu0C,GAAAvsC,KAAA8C,GAAA9C,KACAhD,GAAAnG,WAAA,SAAAJ,EAAAb,GACA,MAAAa,MAAAI,WAAA6iD,GAAAjjD,EAAAI,WAAAjB,GAAAa,EAAAuG,GAAAvG,YAAAI,WAAAJ,IAEAuG,GAAAnG,WAAAoI,UAAAstC,GACAA,GAAAjjC,OAAA,SAAAtG,GACA,GAAAuvC,GAAAC,EAAAx6C,EAAAs0C,EAAAltC,KAAAktC,GAAAroC,EAAA7E,KAAA8G,UAAAusC,IACAzvC,GAAAD,EAAAC,EACA,QAAAqE,IAAA,EAAAC,EAAAlI,KAAA7J,SAAqC8R,EAAAC,GAAS,CAC9CmrC,EAAAx3C,KAAAs3C,KACA,QAAAhrC,GAAAnI,KAAAiI,GAAAhM,GAAA,EAAAwF,EAAA0G,EAAAhS,SAAyD8F,EAAAwF,IACzD7I,EAAAuP,EAAAlM,MAAAm3C,EAAAxvC,EAAAuF,KAAAvQ,IAAA8O,SAAAzL,EAAAgM,KACA,YAAArP,KAAAw6C,EAAA1rC,SAAA9O,EAAA8O,UACA+lC,GAAA2F,EAAAn3C,EAAA4I,EAAAqoC,EAAAt0C,EAAAiM,GAAAqoC,IACAiG,EAAAt3C,KAAAu3C,IAEAD,EAAAt3C,KAAA,MAIA,MAAAoxC,IAAAoG,EAAAxuC,EAAAqoC,IAEAC,GAAAmG,UAAA,SAAA1vC,GACA,GAAAuvC,GAAAkoB,EAAAziE,EAAAw6C,EAAA37C,EAAAy1C,EAAAltC,KAAAktC,GAAAroC,EAAA7E,KAAA8G,UAAAusC,IACAzvC,GAAAE,EAAAF,EACA,QAAAqE,IAAA,EAAAC,EAAAlI,KAAA7J,SAAqC8R,EAAAC,GACrC,OAAAC,GAAAnI,KAAAiI,GAAAhM,GAAA,EAAAwF,EAAA0G,EAAAhS,SAAyD8F,EAAAwF,GACzD,GAAA7I,EAAAuP,EAAAlM,GAAA,CACAxE,EAAAmB,EAAAiM,GAAAqoC,GACAmuB,EAAAz3D,EAAAuF,KAAAvQ,IAAA8O,SAAAzL,EAAAgM,GACAorC,EAAAx3C,KAAAs3C,KACA,QAAA3zC,IAAA,EAAAmK,EAAA0xD,EAAAllE,SAA+CqJ,EAAAmK,IAC/CypC,EAAAioB,EAAA77D,KAAAiuC,GAAA2F,EAAA5zC,EAAAqF,EAAAqoC,EAAAz1C,GACA07C,EAAAt3C,KAAAu3C,GAKA,MAAAnG,IAAAoG,EAAAxuC,EAAAqoC,IAEAC,GAAA3jC,OAAA,SAAAA,GACA,GAAA2pC,GAAAhrC,EAAAvP,EAAAy6C,IACA,mBAAA7pC,OAAA7B,EAAA6B,GACA,QAAAvB,GAAA,EAAAC,EAAAlI,KAAA7J,OAAoC8R,EAAAC,EAAOD,IAAA,CAC3CorC,EAAAx3C,KAAAs3C,KACA,QAAAhrC,GAAAnI,KAAAiI,GAAAhM,EAAA,EAAAwF,EAAA0G,EAAAhS,OAAwD8F,EAAAwF,EAAOxF,KAC/DrD,EAAAuP,EAAAlM,KAAAuN,EAAAL,KAAAvQ,IAAA8O,SAAAzL,EAAAgM,IACAkrC,EAAAt3C,KAAAjD,GAIA,MAAAq0C,IAAAoG,EAAArzC,KAAA8G,UAAA9G,KAAAktC,KAEAC,GAAAE,MAAA,SAAA72C,EAAA62C,GACA,GAAAH,GAAAltC,KAAAktC,GAAAroC,EAAA7E,KAAA8G,SACA,OAAA1K,WAAAjG,OAAA,EAAA6J,KAAApH,OAAAiM,GAAAqoC,GAAAG,MAAA9qC,IAAA/L,GACAuR,EAAA/H,KAAA,MAAAqtC,EAAA,SAAAz0C,GACAA,EAAAiM,GAAAqoC,GAAAG,MAAA3qC,OAAAlM,IACK,SAAAoC,GACLA,EAAAiM,GAAAqoC,GAAAG,MAAA1qC,IAAAnM,EAAA62C,MAWAF,GAAAn2C,KAAA,SAAAskE,EAAA3+D,GAMA,QAAAsH,KACAjE,KAAAkE,gBAAA1N,GAEA,QAAA2N,KACAnE,KAAAoE,kBAAA5N,EAAA6N,MAAA7N,EAAA8N,OAEA,QAAAi3D,GAAA98D,GACA,aAAAA,EAAAwF,GAAAxF,GAAA,cACA,GAAAxC,GAAAuC,EAAAwB,KAAA8F,aAAAtP,EACA,OAAAgI,KAAAC,IAAAxC,EAAAylB,EAAAljB,EAAAC,GAAA,SAAA2T,GACApS,KAAAwE,aAAAhO,EAAAyF,EAAAmW,QAIA,QAAAopD,GAAA/8D,GACA,aAAAA,EAAA0F,GAAA1F,GAAA,cACA,GAAAxC,GAAAuC,EAAAwB,KAAA4zC,eAAAp9C,EAAA6N,MAAA7N,EAAA8N,MACA,OAAA9F,KAAAC,IAAAxC,EAAAylB,EAAAljB,EAAAC,GAAA,SAAA2T,GACApS,KAAA0E,eAAAlO,EAAA6N,MAAA7N,EAAA8N,MAAArI,EAAAmW,QAvBA,GAAAhW,UAAAjG,OAAA,GACA,IAAAwG,IAAA2+D,GAAAt7D,KAAAhJ,KAAA2F,EAAA2+D,EAAA3+D,GACA,OAAAqD,MAEA,GAAA0hB,GAAA,aAAA45C,EAAAn9B,GAAAnE,GAAAxjC,EAAAoH,GAAAiH,GAAAC,QAAAw2D,EAuBA,OAAAluB,IAAAptC,KAAA,QAAAs7D,EAAA3+D,EAAAnG,EAAA8N,MAAAk3D,EAAAD,IAEApuB,GAAAouB,UAAA,SAAAD,EAAAjuB,GAEA,QAAAkuB,GAAAj8D,EAAArD,GACA,GAAAuP,GAAA6hC,EAAAlkC,KAAAnJ,KAAAV,EAAArD,EAAA+D,KAAA8F,aAAAtP,GACA,OAAAgV,IAAA,SAAA4G,GACApS,KAAAwE,aAAAhO,EAAAgV,EAAA4G,KAGA,QAAAopD,GAAAl8D,EAAArD,GACA,GAAAuP,GAAA6hC,EAAAlkC,KAAAnJ,KAAAV,EAAArD,EAAA+D,KAAA4zC,eAAAp9C,EAAA6N,MAAA7N,EAAA8N,OACA,OAAAkH,IAAA,SAAA4G,GACApS,KAAA0E,eAAAlO,EAAA6N,MAAA7N,EAAA8N,MAAAkH,EAAA4G,KAVA,GAAA5b,GAAAoH,GAAAiH,GAAAC,QAAAw2D,EAaA,OAAAt7D,MAAAqtC,MAAA,QAAAiuB,EAAA9kE,EAAA8N,MAAAk3D,EAAAD,IAEApuB,GAAA/mC,MAAA,SAAA5P,EAAAmG,EAAAuJ,GAUA,QAAAC,KACAnG,KAAAoG,MAAAC,eAAA7P,GAEA,QAAAilE,GAAAh9D,GACA,aAAAA,EAAA0H,GAAA1H,GAAA,cACA,GAAAxC,GAAAuC,EAAAH,EAAA2B,MAAAg0C,iBAAAh0C,KAAA,MAAAi0C,iBAAAz9C,EACA,OAAAgI,KAAAC,IAAAxC,EAAA+9B,GAAAx7B,EAAAC,GAAA,SAAA2T,GACApS,KAAAoG,MAAAG,YAAA/P,EAAAyF,EAAAmW,GAAAlM,OAhBA,GAAAzE,GAAArF,UAAAjG,MACA,IAAAsL,EAAA,GACA,mBAAAjL,GAAA,CACAiL,EAAA,IAAA9E,EAAA,GACA,KAAAuJ,IAAA1P,GAAAwJ,KAAAoG,MAAAF,EAAA1P,EAAA0P,GAAAvJ,EACA,OAAAqD,MAEAkG,EAAA,GAaA,MAAAknC,IAAAptC,KAAA,SAAAxJ,EAAAmG,EAAA8+D,IAEAtuB,GAAAuuB,WAAA,SAAAllE,EAAA62C,EAAAnnC,GAEA,QAAAw1D,GAAAp8D,EAAArD,GACA,GAAAuP,GAAA6hC,EAAAlkC,KAAAnJ,KAAAV,EAAArD,EAAAoC,EAAA2B,MAAAg0C,iBAAAh0C,KAAA,MAAAi0C,iBAAAz9C,GACA,OAAAgV,IAAA,SAAA4G,GACApS,KAAAoG,MAAAG,YAAA/P,EAAAgV,EAAA4G,GAAAlM,IAGA,MAPA9J,WAAAjG,OAAA,IAAA+P,EAAA,IAOAlG,KAAAqtC,MAAA,SAAA72C,EAAAklE,IAEAvuB,GAAA+G,KAAA,SAAAv3C,GACA,MAAAywC,IAAAptC,KAAA,OAAArD,EAAA2wC,KAQAH,GAAAzqC,OAAA,WACA,GAAAmC,GAAA7E,KAAA8G,SACA,OAAA9G,MAAA6zC,KAAA,4BACA,GAAA1gC,EACAnT,MAAA6E,GAAAkoC,MAAA,IAAA55B,EAAAnT,KAAAsH,aAAA6L,EAAA5L,YAAAvH,SAGAmtC,GAAAc,KAAA,SAAAtxC,GACA,GAAAuwC,GAAAltC,KAAAktC,GAAAroC,EAAA7E,KAAA8G,SACA,OAAA1K,WAAAjG,OAAA,EAAA6J,KAAApH,OAAAiM,GAAAqoC,GAAAe,MACA,kBAAAtxC,OAAAiB,GAAAqwC,KAAA7sC,MAAAxD,GAAAxB,YACA2L,EAAA/H,KAAA,SAAApH,GACAA,EAAAiM,GAAAqoC,GAAAe,KAAAtxC,MAGAwwC,GAAAn7B,MAAA,SAAArV,GACA,GAAAuwC,GAAAltC,KAAAktC,GAAAroC,EAAA7E,KAAA8G,SACA,OAAA1K,WAAAjG,OAAA,EAAA6J,KAAApH,OAAAiM,GAAAqoC,GAAAl7B,MACAjK,EAAA/H,KAAA,kBAAArD,GAAA,SAAA/D,EAAAqD,EAAAgM,GACArP,EAAAiM,GAAAqoC,GAAAl7B,OAAArV,EAAAwM,KAAAvQ,IAAA8O,SAAAzL,EAAAgM,KACKtL,KAAA,SAAA/D,GACLA,EAAAiM,GAAAqoC,GAAAl7B,MAAArV,MAGAwwC,GAAAe,SAAA,SAAAvxC,GACA,GAAAuwC,GAAAltC,KAAAktC,GAAAroC,EAAA7E,KAAA8G,SACA,OAAA1K,WAAAjG,OAAA,EAAA6J,KAAApH,OAAAiM,GAAAqoC,GAAAgB,SACAnmC,EAAA/H,KAAA,kBAAArD,GAAA,SAAA/D,EAAAqD,EAAAgM,GACArP,EAAAiM,GAAAqoC,GAAAgB,SAAA90C,KAAAC,IAAA,EAAAsD,EAAAwM,KAAAvQ,IAAA8O,SAAAzL,EAAAgM,MACKtL,EAAAvD,KAAAC,IAAA,EAAAsD,GAAA,SAAA/D,GACLA,EAAAiM,GAAAqoC,GAAAgB,SAAAvxC,MAGAwwC,GAAA0G,KAAA,SAAAh8C,EAAAyK,GACA,GAAA4qC,GAAAltC,KAAAktC,GAAAroC,EAAA7E,KAAA8G,SACA,IAAA1K,UAAAjG,OAAA,GACA,GAAAu3C,GAAA0tB,GAAAO,EAAArhB,EACA,KACAA,GAAApN,EACAnlC,EAAA/H,KAAA,SAAApH,EAAAqD,EAAAgM,GACAmzD,GAAAxiE,EAAAiM,GAAAqoC,GACAr1C,EAAAsR,KAAAvQ,IAAA8O,SAAAzL,EAAAgM,KAEO,QACPmzD,GAAA1tB,EACA4M,GAAAqhB,OAGA5zD,GAAA/H,KAAA,SAAApH,GACA,GAAAnB,GAAAmB,EAAAiM,GAAAqoC,IACAz1C,EAAAuK,QAAAvK,EAAAuK,MAAApE,GAAAmE,SAAA,6BAAAK,GAAAvK,EAAAyK,IAGA,OAAAtC,OAEAmtC,GAAA11C,WAAA,WAEA,OADA07C,GAAAhrC,EAAAvP,EAAAnB,EAAAmkE,EAAA57D,KAAAktC,GAAA2uB,IAAAV,GAAAt2D,EAAA7E,KAAA8G,UAAAusC,KACAprC,EAAA,EAAAC,EAAAlI,KAAA7J,OAAoC8R,EAAAC,EAAOD,IAAA,CAC3CorC,EAAAx3C,KAAAs3C,KACA,QAAAhrC,GAAAnI,KAAAiI,GAAAhM,EAAA,EAAAwF,EAAA0G,EAAAhS,OAAwD8F,EAAAwF,EAAOxF,KAC/DrD,EAAAuP,EAAAlM,MACAxE,EAAAmB,EAAAiM,GAAA+2D,GACAnuB,GAAA70C,EAAAqD,EAAA4I,EAAAg3D,GACAj/D,KAAAnF,EAAAmF,KACAqxC,KAAAx2C,EAAAw2C,KACAj8B,MAAAva,EAAAua,MAAAva,EAAAy2C,SACAA,SAAAz2C,EAAAy2C,YAGAiF,EAAAt3C,KAAAjD,GAGA,MAAAq0C,IAAAoG,EAAAxuC,EAAAg3D,IAgFAj+D,GAAA8M,IAAAoxD,KAAA,WAEA,QAAAA,GAAA9lE,GACAA,EAAA69C,KAAA,WACA,GAEAkoB,GAFA/lE,EAAA4H,GAAAsM,OAAAlK,MACA84C,EAAA94C,KAAAm4C,WAAA5kC,EAAAmmC,EAAA15C,KAAAm4C,UAAA5kC,EAAAoyB,OACAL,EAAA,MAAA02B,EAAAtiB,EAAApU,MAAAoU,EAAApU,MAAAlkC,MAAAs4C,EAAAuiB,GAAAviB,EAAAxV,SAAA83B,EAAAx2B,EAAA,MAAA02B,EAAAxiB,EAAAlU,WAAAkU,EAAAlU,WAAApkC,MAAAs4C,EAAAuiB,GAAAl7D,EAAAm7D,EAAAnuB,EAAA/3C,EAAAs9C,UAAA,SAAA7rC,KAAA69B,EAAAoU,GAAAyiB,EAAApuB,EAAAxlC,QAAAssB,OAAA,eAAA79B,KAAA,gBAAAoP,MAAA,UAAAuZ,IAAAy8C,EAAAx+D,GAAAnG,WAAAs2C,EAAAgH,QAAA3uC,MAAA,UAAAuZ,IAAAjd,SAAA25D,EAAAz+D,GAAAnG,WAAAs2C,EAAAzyC,SAAA8K,MAAA,aAAAk2D,EAAAljE,KAAAC,IAAAkjE,EAAA,GAAAC,EACAthE,EAAAkpC,GAAAsV,GAAAxP,EAAAl0C,EAAAs9C,UAAA,WAAA7rC,MAAA,IAAAg1D,GAAAvyB,EAAA3hC,QAAAyC,OAAA,QAAAhU,KAAA,kBACA4G,GAAAnG,WAAAyyC,GACAiyB,GAAAnxD,OAAA,QACAmxD,EAAAnxD,OAAA,OACA,IAAA+c,GAAAmF,EAAAlF,EAAAmF,EAAAuvC,EAAAP,EAAAjyD,OAAA,QAAAyyD,EAAAN,EAAAnyD,OAAA,QAAAgqC,EAAAnG,EAAA7jC,OAAA,QAAAgqC,KAAA1O,GAAAo3B,EAAAT,EAAAjyD,OAAA,QAAA2yD,EAAAR,EAAAnyD,OAAA,QAAAyK,EAAA,QAAAmoD,GAAA,SAAAA,GAAA,GAcA,IAbA,WAAAA,GAAA,QAAAA,GACAf,EAAA5tB,GAAApmB,EAAA,IAAAC,EAAA,IAAAkF,EAAA,KAAAC,EAAA,KACA+mB,EAAAl9C,KAAA,KAAA2d,EAAA,iBAAAvO,MAAA,wBACAq2D,EAAAzlE,KAAA,QAAAkE,EAAA,OAAAyZ,EAAAooD,EAAA,MAAA7hE,EAAA,OAAAyZ,EAAAooD,KAEAhB,EAAA3tB,GAAArmB,EAAA,IAAAC,EAAA,IAAAkF,EAAA,KAAAC,EAAA,KACA+mB,EAAAl9C,KAAA,cAAAoP,MAAA,cAAAuO,EAAA,iBACA8nD,EAAAzlE,KAAA,QAAA2d,EAAAooD,EAAA,IAAA7hE,EAAA,SAAAA,EAAA,OAAAyZ,EAAAooD,IAEAL,EAAA1lE,KAAAm2B,EAAAxY,EAAA4nD,GACAK,EAAA5lE,KAAAgxB,EAAArT,EAAA2nD,GACAK,EAAA3lE,KAAAk2B,EAAA,GAAAl2B,KAAAm2B,EAAAxY,EAAA4nD,GACAM,EAAA7lE,KAAA+wB,EAAA,GAAA/wB,KAAAgxB,EAAArT,EAAA2nD,GACA5iB,EAAA1S,UAAA,CACA,GAAA3sC,GAAAq/C,EAAAn/C,EAAAF,EAAA2sC,YAAA,CACA8R,GAAAY,EAAA,SAAAp6C,GACA,MAAAjF,GAAAiF,GAAA/E,OAESu+C,GAAA9R,UACT8R,EAAAY,EAEA0iB,EAAAjzD,KAAA4yD,EAAAriB,EAAAZ,EAEAqjB,GAAAhzD,KAAA4yD,EAAAjjB,EAAAY,GACA2iB,EAAAlzD,KAAA4yD,EAAAriB,OAnCA,GAAAwiB,GAAA3oD,EAAA3V,GAAA2V,MAAA2xB,SAAA43B,EAAAE,GAAAT,EAAA,EAAAQ,EAAA,EAAAP,EAAA,EAAAP,GAAA,IAAAD,EAAA,IAwFA,OAlDAF,GAAAvoD,MAAA,SAAAlZ,GACA,MAAA+B,WAAAjG,QACAod,EAAAlZ,EACAyhE,GAFAvoD,GAIAuoD,EAAAgB,OAAA,SAAAziE,GACA,MAAA+B,WAAAjG,QACA2mE,EAAAziE,IAAA4iE,IAAA5iE,EAAA,GAAA2iE,GACAlB,GAFAgB,GAIAhB,EAAAx2B,MAAA,WACA,MAAAlpC,WAAAjG,QACA8lE,EAAA/yD,GAAA9M,WACA0/D,GAFAG,GAIAH,EAAAE,WAAA,SAAA3hE,GACA,MAAA+B,WAAAjG,QACA6lE,EAAA3hE,EACAyhE,GAFAE,GAIAF,EAAAt2B,WAAA,SAAAnrC,GACA,MAAA+B,WAAAjG,QACA+lE,EAAA7hE,EACAyhE,GAFAI,GAIAJ,EAAAoB,SAAA,SAAA7iE,GACA,GAAAoH,GAAArF,UAAAjG,MACA,OAAAsL,IACA86D,GAAAliE,EACA0iE,GAAA3gE,UAAAqF,EAAA,GACAq6D,GAHAS,GAKAT,EAAAS,cAAA,SAAAliE,GACA,MAAA+B,WAAAjG,QACAomE,GAAAliE,EACAyhE,GAFAS,GAIAT,EAAAiB,cAAA,SAAA1iE,GACA,MAAA+B,WAAAjG,QACA4mE,GAAA1iE,EACAyhE,GAFAiB,GAIAjB,EAAAU,YAAA,SAAAniE,GACA,MAAA+B,WAAAjG,QACAqmE,GAAAniE,EACAyhE,GAFAU,GAIAV,EAAAqB,cAAA,WACA,MAAA/gE,WAAAjG,QAAA2lE,GAEAA,EAEA,IAAAkB,IAAA,SAAAC,IACA/xD,IAAA,EACA9L,MAAA,EACA80D,OAAA,EACAl1D,KAAA,EAcApB,IAAA8M,IAAA0yD,MAAA,WAEA,QAAAA,GAAApnE,GACAA,EAAA69C,KAAA,WACA,GAAA79C,GAAA4H,GAAAsM,OAAAlK,MAAAoG,MAAA,wBAAAA,MAAA,+CAAAhE,GAAA,kBAAAi7D,GAAAj7D,GAAA,mBAAAi7D,GACAC,EAAAtnE,EAAAs9C,UAAA,eAAA7rC,MAAA,GACA61D,GAAA/0D,QAAAyC,OAAA,QAAAhU,KAAA,sBAAAoP,MAAA,uBAAAA,MAAA,sBACApQ,EAAAs9C,UAAA,WAAA7rC,MAAA,IAAAc,QAAAyC,OAAA,QAAAhU,KAAA,kBAAAoP,MAAA,gBACA,IAAAm3D,GAAAvnE,EAAAs9C,UAAA,WAAA7rC,KAAA+1D,EAAAz8D,EACAw8D,GAAAxoB,OAAAryC,SACA66D,EAAAh1D,QAAAyC,OAAA,KAAAhU,KAAA,iBAAAsI,GACA,gBAAAA,IACS8G,MAAA,kBAAA9G,GACT,MAAAm+D,IAAAn+D,KACS0L,OAAA,QAAAhU,KAAA,aAAAsI,GACT,cAAA0G,KAAA1G,IAAA,SACStI,KAAA,aAAAsI,GACT,cAAA0G,KAAA1G,IAAA,SACStI,KAAA,WAAAA,KAAA,YAAAoP,MAAA,uBACTm3D,EAAAn3D,MAAA,UAAAg3D,EAAAtrB,QAAA,YACA,IAAA52C,GAAAwiE,EAAA9/D,GAAAnG,WAAAzB,GAAA2nE,EAAA//D,GAAAnG,WAAA6lE,EACAjjE,KACAa,EAAAkpC,GAAA/pC,GACAsjE,EAAA3mE,KAAA,IAAAkE,EAAA,IAAAlE,KAAA,QAAAkE,EAAA,GAAAA,EAAA,IACA0iE,EAAAF,IAEApjE,IACAY,EAAAkpC,GAAA9pC,GACAqjE,EAAA3mE,KAAA,IAAAkE,EAAA,IAAAlE,KAAA,SAAAkE,EAAA,GAAAA,EAAA,IACA2iE,EAAAH,IAEAI,EAAAJ,KAyDA,QAAAI,GAAA9nE,GACAA,EAAAs9C,UAAA,WAAAt8C,KAAA,qBAAAsI,GACA,mBAAAy+D,GAAA,KAAA/3D,KAAA1G,IAAA,IAAA0+D,GAAA,KAAAh4D,KAAA1G,IAAA,MAGA,QAAAs+D,GAAA5nE,GACAA,EAAAkU,OAAA,WAAAlT,KAAA,IAAA+mE,EAAA,IACA/nE,EAAAs9C,UAAA,2BAAAt8C,KAAA,QAAA+mE,EAAA,GAAAA,EAAA,IAEA,QAAAF,GAAA7nE,GACAA,EAAAkU,OAAA,WAAAlT,KAAA,IAAAgnE,EAAA,IACAhoE,EAAAs9C,UAAA,2BAAAt8C,KAAA,SAAAgnE,EAAA,GAAAA,EAAA,IAEA,QAAAX,KAwBA,QAAAY,KACA,IAAArgE,GAAAoE,MAAAk8D,UACAC,IACAhwC,EAAA,KACAyoB,EAAA,IAAAmnB,EAAA,GACAnnB,EAAA,IAAAonB,EAAA,GACAG,EAAA,GAEAv7D,KAGA,QAAAw7D,KACA,IAAAxgE,GAAAoE,MAAAk8D,SAAA,GAAAC,IACAvnB,EAAA,IAAAmnB,EAAA,GACAnnB,EAAA,IAAAonB,EAAA,GACAG,EAAA,EACAv7D,KAGA,QAAAy7D,KACA,GAAAjkE,GAAAwD,GAAA03C,MAAAr0C,GAAA+0C,GAAA,CACAr6C,KACAvB,EAAA,IAAAuB,EAAA,GACAvB,EAAA,IAAAuB,EAAA,IAEAwiE,IACAvgE,GAAAoE,MAAAs8D,QACAnwC,QAAA4vC,EAAA,GAAAA,EAAA,OAAAC,EAAA,GAAAA,EAAA,QACApnB,EAAA,GAAAmnB,IAAA3jE,EAAA,GAAA+zB,EAAA,KACAyoB,EAAA,GAAAonB,IAAA5jE,EAAA,GAAA+zB,EAAA,MACWA,EAAA,MAEXowC,GAAAC,EAAApkE,EAAAC,EAAA,KACAujE,EAAA5nE,GACAggD,GAAA,GAEAyoB,GAAAD,EAAApkE,EAAAE,EAAA,KACAujE,EAAA7nE,GACAggD,GAAA,GAEAA,IACA8nB,EAAA9nE,GACA0oE,GACA7mE,KAAA,QACAi/D,KAAAqH,EAAA,mBAIA,QAAAK,GAAApkE,EAAAmZ,EAAAtX,GACA,GAAAT,GAAAnC,EAAA6B,EAAAkpC,GAAA7wB,GAAAspB,EAAA3hC,EAAA,GAAA4hC,EAAA5hC,EAAA,GAAA+P,EAAA2rC,EAAA36C,GAAA25B,EAAA35B,EAAA+hE,EAAAD,EAAAn9D,EAAAg1B,EAAA,GAAAA,EAAA,EAiBA,IAhBAuoC,IACAthC,GAAA5xB,EACA6xB,GAAAl8B,EAAAqK,GAEAzP,GAAAS,EAAA0iE,EAAAC,GAAAxlE,KAAAC,IAAAwjC,EAAAzjC,KAAAoC,IAAAshC,EAAA1iC,EAAA6B,KAAA7B,EAAA6B,GACAkiE,EACA9kE,GAAAmC,GAAAyP,GAAArK,GAEAutB,IAAAljB,EAAA7R,KAAAC,IAAAwjC,EAAAzjC,KAAAoC,IAAAshC,EAAA,EAAA3O,EAAAlyB,GAAAT,KACAyP,EAAAzP,GACAnC,EAAAmC,EACAA,EAAAyP,GAEA5R,EAAA4R,GAGA2qB,EAAA,IAAAp6B,GAAAo6B,EAAA,IAAAv8B,EAIA,MAHA4C,GAAA4iE,EAAA,KAAsCC,EAAA,KACtClpC,EAAA,GAAAp6B,EACAo6B,EAAA,GAAAv8B,GACA,EAGA,QAAA0lE,KACAV,IACAroE,EAAAoQ,MAAA,wBAAAktC,UAAA,WAAAltC,MAAA,UAAAg3D,EAAAtrB,QAAA,aACAl0C,GAAAsM,OAAA,QAAA9D,MAAA,eACA7P,EAAA6L,GAAA,wBAAAA,GAAA,sBAAAA,GAAA,wBAAAA,GAAA,uBAAAA,GAAA,sBAAAA,GAAA,oBACAq0C,IACAioB,GACA7mE,KAAA,aAvGA,GAAAs2B,GAAAxyB,EAAAsF,EAAAjB,KAAAg/D,EAAAphE,GAAAsM,OAAAtM,GAAAoE,MAAAf,QAAAy9D,EAAA18D,EAAAkB,GAAAjC,EAAA7E,WAAApG,EAAA4H,GAAAsM,OAAAjJ,GAAAg+D,EAAAD,EAAAhqB,QAAAupB,GAAA,UAAAv4D,KAAAi5D,IAAA5kE,EAAAokE,GAAA,UAAAz4D,KAAAi5D,IAAA3kE,EAAA6jE,EAAAa,EAAAlrB,QAAA,UAAA2C,EAAA1sC,GAAA9I,GAAA21C,EAAAh5C,GAAA03C,MAAAr0C,GACA1K,EAAAqH,GAAAsM,OAAA7L,EAAA4C,IAAAmB,GAAA,gBAAA67D,GAAA77D,GAAA,cAAAg8D,EAOA,IANAxgE,GAAAoE,MAAAyI,eACAlU,EAAA6L,GAAA,kBAAAi8D,GAAAj8D,GAAA,iBAAA28D,GAEAxoE,EAAA6L,GAAA,kBAAAi8D,GAAAj8D,GAAA,gBAAA28D,GAEA/oE,EAAAg3C,YAAAsG,UAAA,KAAAtG,YACAmxB,EACAvnB,EAAA,GAAAmnB,EAAA,GAAAnnB,EAAA,GACAA,EAAA,GAAAonB,EAAA,GAAApnB,EAAA,OACO,IAAAqoB,EAAA,CACP,GAAAC,IAAA,KAAAl5D,KAAAi5D,GAAAE,GAAA,KAAAn5D,KAAAi5D,EACAtjE,IAAAoiE,EAAA,EAAAmB,GAAAtoB,EAAA,GAAAonB,EAAA,EAAAmB,GAAAvoB,EAAA,IACAA,EAAA,GAAAmnB,EAAAmB,GACAtoB,EAAA,GAAAonB,EAAAmB,OACOvhE,IAAAoE,MAAAs8D,SAAAnwC,EAAAyoB,EAAAt2C,QACPtK,GAAAoQ,MAAA,yBAAAktC,UAAA,WAAAltC,MAAA,gBACAxI,GAAAsM,OAAA,QAAA9D,MAAA,SAAA44D,EAAA54D,MAAA,WACAs4D,GACA7mE,KAAA,eAEAwmE,IA3HA,GAAAS,GAAAD,EAAA78D,EAAAiB,EAAAm6D,EAAA,iCAAA/iE,EAAA,KAAAC,EAAA,KAAAyjE,GAAA,KAAAC,GAAA,KAAAY,GAAA,EAAAD,GAAA,EAAAnB,EAAA4B,GAAA,EAoRA,OAnPAhC,GAAAp7D,MAAA,SAAAhM,GACAA,EAAA69C,KAAA,WACA,GAAA6qB,GAAA18D,EAAAkB,GAAAlD,KAAA5D,WAAAijE,GACAhlE,EAAA0jE,EACAzjE,EAAA0jE,EACA/hE,EAAA6iE,EACA72D,EAAA42D,GACSS,EAAAt/D,KAAAm4C,WAAAknB,CACTr/D,MAAAm4C,UAAAknB,EACA/kB,GACA18C,GAAAsM,OAAAlK,MAAAvI,aAAAo8C,KAAA,yBACAirB,EAAAQ,EAAArjE,EACA4iE,EAAAS,EAAAr3D,EACA81D,EAAAuB,EAAAjlE,EACA2jE,EAAAsB,EAAAhlE,EACAokE,GACA7mE,KAAA,iBAEWw1C,MAAA,yBACX,GAAApG,GAAAtM,GAAAojC,EAAAsB,EAAAhlE,GAAAklE,EAAA5kC,GAAAqjC,EAAAqB,EAAA/kE,EAEA,OADAwkE,GAAAD,EAAA,KACA,SAAAzsD,GACA2rD,EAAAsB,EAAAhlE,EAAA4sC,EAAA70B,GACA4rD,EAAAqB,EAAA/kE,EAAAilE,EAAAntD,GACAssD,GACA7mE,KAAA,QACAi/D,KAAA,cAGWjjB,KAAA,uBACXirB,EAAAO,EAAApjE,EACA4iE,EAAAQ,EAAAp3D,EACAy2D,GACA7mE,KAAA,QACAi/D,KAAA,WAEA4H,GACA7mE,KAAA,gBAIA6mE,GACA7mE,KAAA,eAEA6mE,GACA7mE,KAAA,QACAi/D,KAAA,WAEA4H,GACA7mE,KAAA,iBA8HAulE,EAAA/iE,EAAA,SAAA6H,GACA,MAAA9F,WAAAjG,QACAkE,EAAA6H,EACAs7D,EAAA4B,IAAA/kE,GAAA,GAAAC,GACA8iE,GAHA/iE,GAKA+iE,EAAA9iE,EAAA,SAAA4H,GACA,MAAA9F,WAAAjG,QACAmE,EAAA4H,EACAs7D,EAAA4B,IAAA/kE,GAAA,GAAAC,GACA8iE,GAHA9iE,GAKA8iE,EAAAp4B,MAAA,SAAA9iC,GACA,MAAA9F,WAAAjG,QACAkE,GAAAC,GAAAskE,IAAA18D,EAAA,GAAAy8D,IAAAz8D,EAAA,IAAmD7H,EAAAukE,IAAA18D,EAA0B5H,IAAAqkE,IAAAz8D,GAC7Ek7D,GAFA/iE,GAAAC,GAAAskE,EAAAD,GAAAtkE,EAAAukE,EAAAtkE,EAAAqkE,EAAA,MAIAvB,EAAAxnC,OAAA,SAAA1zB,GACA,GAAAme,GAAA0H,EAAA5H,EAAA6H,EAAA5V,CACA,OAAAhW,WAAAjG,QAqBAkE,IACAgmB,EAAAne,EAAA,GAAA6lB,EAAA7lB,EAAA,GACA5H,IAAA+lB,IAAA,GAAA0H,IAAA,IACA+2C,GAAAz+C,EAAA0H,GACA1tB,EAAAgnB,SAAAhB,EAAAhmB,EAAAgmB,GAAA0H,EAAA1tB,EAAA0tB,IACAA,EAAA1H,IAAAjO,EAAAiO,IAAA0H,IAAA3V,GACAiO,GAAA09C,EAAA,IAAAh2C,GAAAg2C,EAAA,KAAAA,GAAA19C,EAAA0H,KAEAztB,IACA6lB,EAAAje,EAAA,GAAA8lB,EAAA9lB,EAAA,GACA7H,IAAA8lB,IAAA,GAAA6H,IAAA,IACA62C,GAAA1+C,EAAA6H,GACA1tB,EAAA+mB,SAAAlB,EAAA7lB,EAAA6lB,GAAA6H,EAAA1tB,EAAA0tB,IACAA,EAAA7H,IAAA/N,EAAA+N,IAAA6H,IAAA5V,GACA+N,GAAA69C,EAAA,IAAAh2C,GAAAg2C,EAAA,KAAAA,GAAA79C,EAAA6H,KAEAo1C,IApCA/iE,IACAykE,GACAz+C,EAAAy+C,EAAA,GAAA/2C,EAAA+2C,EAAA,KAEAz+C,EAAA09C,EAAA,GAAAh2C,EAAAg2C,EAAA,GACA1jE,EAAAgnB,SAAAhB,EAAAhmB,EAAAgnB,OAAAhB,GAAA0H,EAAA1tB,EAAAgnB,OAAA0G,IACAA,EAAA1H,IAAAjO,EAAAiO,IAAA0H,IAAA3V,KAGA9X,IACAukE,GACA1+C,EAAA0+C,EAAA,GAAA72C,EAAA62C,EAAA,KAEA1+C,EAAA69C,EAAA,GAAAh2C,EAAAg2C,EAAA,GACA1jE,EAAA+mB,SAAAlB,EAAA7lB,EAAA+mB,OAAAlB,GAAA6H,EAAA1tB,EAAA+mB,OAAA2G,IACAA,EAAA7H,IAAA/N,EAAA+N,IAAA6H,IAAA5V,KAGA/X,GAAAC,IAAA+lB,EAAAF,IAAA4H,EAAAC,IAAA3tB,GAAAgmB,EAAA0H,GAAAztB,IAAA6lB,EAAA6H,KAoBAo1C,EAAAoC,MAAA,WAKA,MAJApC,GAAAtrB,UACAisB,GAAA,KAAAC,GAAA,KACAc,EAAAD,EAAA,MAEAzB,GAEAA,EAAAtrB,MAAA,WACA,QAAAz3C,GAAA0jE,EAAA,IAAAA,EAAA,MAAAzjE,GAAA0jE,EAAA,IAAAA,EAAA,IAEApgE,GAAAgU,OAAAwrD,EAAAp7D,EAAA,MAEA,IAAAy7D,KACAh8D,EAAA,YACApL,EAAA,YACA0M,EAAA,YACAxM,EAAA,YACAkpE,GAAA,cACAC,GAAA,cACAC,GAAA,cACAC,GAAA,eAEAR,KAAA,6DACAvoD,GAAA+D,GAAAxL,OAAA64C,GAAAD,WACA6X,GAAAhpD,GAAAJ,IACAqpD,GAAAD,GAAA,wBACAhpD,IAAAkpD,IAAA7tD,KAAArS,UAAAyuC,cAAA,GAAAp8B,MAAA,4BAAAm8B,GAAAyxB,GAIAzxB,GAAAl3B,MAAA,SAAAJ,GACA,GAAAb,GAAA,GAAAhE,MAAA6E,EACA,OAAAlY,OAAAqX,GAAA,KAAAA,GAEAm4B,GAAAl/B,SAAA2wD,GAAA3wD,SACAyL,GAAAolD,OAAAjqD,GAAA,SAAAG,GACA,UAAAG,IAAA,IAAAjd,KAAAsd,MAAAR,EAAA,OACG,SAAAA,EAAAva,GACHua,EAAAoxC,QAAApxC,EAAAmwC,UAAA,IAAAjtD,KAAAsd,MAAA/a,KACG,SAAAua,GACH,MAAAA,GAAA8E,eAEAJ,GAAAqlD,QAAArlD,GAAAolD,OAAA9kE,MACA0f,GAAAqlD,QAAAxpD,IAAAmE,GAAAolD,OAAAvpD,IAAAvb,MACA0f,GAAAslD,OAAAnqD,GAAA,SAAAG,GACA,UAAAG,IAAA,IAAAjd,KAAAsd,MAAAR,EAAA,OACG,SAAAA,EAAAva,GACHua,EAAAoxC,QAAApxC,EAAAmwC,UAAA,IAAAjtD,KAAAsd,MAAA/a,KACG,SAAAua,GACH,MAAAA,GAAA6E,eAEAH,GAAAulD,QAAAvlD,GAAAslD,OAAAhlE,MACA0f,GAAAulD,QAAA1pD,IAAAmE,GAAAslD,OAAAzpD,IAAAvb,MACA0f,GAAAwlD,KAAArqD,GAAA,SAAAG,GACA,GAAAmqD,GAAAnqD,EAAAsG,oBAAA,EACA,WAAAnG,IAAA,MAAAjd,KAAAsd,MAAAR,EAAA,KAAAmqD,QACG,SAAAnqD,EAAAva,GACHua,EAAAoxC,QAAApxC,EAAAmwC,UAAA,KAAAjtD,KAAAsd,MAAA/a,KACG,SAAAua,GACH,MAAAA,GAAAwE,aAEAE,GAAA0lD,MAAA1lD,GAAAwlD,KAAAllE,MACA0f,GAAA0lD,MAAA7pD,IAAAmE,GAAAwlD,KAAA3pD,IAAAvb,MACA0f,GAAA2lD,MAAAxqD,GAAA,SAAAG,GAGA,MAFAA,GAAA0E,GAAA2sC,IAAArxC,GACAA,EAAAqwC,QAAA,GACArwC,GACG,SAAAA,EAAAva,GACHua,EAAAgxC,SAAAhxC,EAAAoE,WAAA3e,IACG,SAAAua,GACH,MAAAA,GAAAoE,aAEAM,GAAAd,OAAAc,GAAA2lD,MAAArlE,MACA0f,GAAAd,OAAArD,IAAAmE,GAAA2lD,MAAA9pD,IAAAvb,KAsDA,IAAAwzC,KAAA,oGACA8xB,KAAA5lD,GAAAolD,OAAA,IAAAplD,GAAAolD,OAAA,IAAAplD,GAAAolD,OAAA,KAAAplD,GAAAolD,OAAA,KAAAplD,GAAAslD,OAAA,IAAAtlD,GAAAslD,OAAA,IAAAtlD,GAAAslD,OAAA,KAAAtlD,GAAAslD,OAAA,KAAAtlD,GAAAwlD,KAAA,IAAAxlD,GAAAwlD,KAAA,IAAAxlD,GAAAwlD,KAAA,IAAAxlD,GAAAwlD,KAAA,KAAAxlD,GAAA2sC,IAAA,IAAA3sC,GAAA2sC,IAAA,IAAA3sC,GAAA6sC,KAAA,IAAA7sC,GAAA2lD,MAAA,IAAA3lD,GAAA2lD,MAAA,IAAA3lD,GAAA+zB,KAAA,IACA8xB,GAAA5pD,GAAAoD,QAAA,eAAA3a,GACA,MAAAA,GAAAwb,qBACG,eAAAxb,GACH,MAAAA,GAAA0b,gBACG,iBAAA1b,GACH,MAAAA,GAAAyb,gBACG,iBAAAzb,GACH,MAAAA,GAAAob,cACG,iBAAApb,GACH,MAAAA,GAAAuY,UAAA,GAAAvY,EAAAmb,aACG,iBAAAnb,GACH,UAAAA,EAAAmb,aACG,cAAAnb,GACH,MAAAA,GAAAgb,cACG,KAAAgH,MACHstB,IACA1zC,MAAA,SAAA2B,EAAAsnC,EAAAnuB,GACA,MAAApY,IAAA1C,MAAA9B,KAAAga,KAAAvW,EAAAmZ,MAAAmuB,EAAAnuB,GAAArc,IAAAk1C,KAEAn4B,MAAA3V,EACAqS,KAAArS,EAEAy/D,IAAA7xB,KAAA/zB,GAAA+zB,KACA/zB,GAAArH,MAAA,WACA,MAAAg7B,IAAA3wC,GAAA2V,MAAA2xB,SAAAs7B,GAAAC,IAEA,IAAAC,IAAAF,GAAA7mE,IAAA,SAAAuO,GACA,OAAAA,EAAA,GAAAuO,IAAAvO,EAAA,MAEAy4D,GAAAd,GAAA5lD,QAAA,eAAA3a,GACA,MAAAA,GAAA2mD,wBACG,eAAA3mD,GACH,MAAAA,GAAA8mD,mBACG,iBAAA9mD,GACH,MAAAA,GAAA4mD,mBACG,iBAAA5mD,GACH,MAAAA,GAAA0mD,iBACG,iBAAA1mD,GACH,MAAAA,GAAAwmD,aAAA,GAAAxmD,EAAAumD,gBACG,iBAAAvmD,GACH,UAAAA,EAAAumD,gBACG,cAAAvmD,GACH,MAAAA,GAAA6mD,iBACG,KAAA7kC,KACHo/C,IAAA/xB,KAAA/zB,GAAA+zB,KAAAl4B,IACAmE,GAAArH,MAAAkD,IAAA,WACA,MAAA83B,IAAA3wC,GAAA2V,MAAA2xB,SAAAw7B,GAAAC,KAEA/iE,GAAAs2C,KAAAnkC,GAAA,SAAAO,GACA,MAAAA,GAAAwB,eAEAlU,GAAAH,KAAA,SAAAwS,EAAAjI,GACA,MAAAmI,IAAAF,EAAA,mBAAAg/B,GAAAjnC,IAKApK,GAAAu2C,KAAA,SAAAlkC,EAAAjI,GACA,MAAAmI,IAAAF,EAAA,YAAAk/B,GAAAnnC,IAOApK,GAAA81C,IAAA3jC,GAAA,SAAAO,GACA,MAAAA,GAAAswD,cAEA5gE,KAAApC,MAAAG,EAAA,OAAA8iE,MAAA7iE,EAAA,kBAAAD,KAAAoL,KAAAxT,EAAAC,EAAAD,EAAAD,GAAAqI,KAAArI,EAAAC,QAAAqI,OPubM8iE,IACA,SAAUprE,EAAQC,EAASC,GAEjC,YQvuTA,SAAAmrE,GAAA/qE,GAGA,QAAAgrE,GAAA/qE,GACA,GAAAiD,GAAAlD,EAAA4C,KAAA3C,EACA,IAAA8B,EAAAC,QAAAyD,IAAAwlE,EAAAhrE,GACA,MAAAiD,GAAAkC,IAEA6lE,GAAAhrE,IAAA,CAEA,IAAAmF,GAAArD,EAAAC,QAAAwD,IAAAzD,EAAAC,QAAA2B,IAAA3D,EAAA6D,SAAA5D,GAAA,SAAAI,GACA,MAAA2qE,GAAA3qE,EAAAE,GAAAP,EAAA+C,KAAA1C,GAAA4C,SAUA,OAPAmC,KAAAgqC,OAAA87B,uBACAL,KAAAzlE,GACA,OAAAA,IAEAA,EAAA,GAGAlC,EAAAkC,OApBA,GAAA6lE,KAuBAlpE,GAAAC,QAAAU,QAAA1C,EAAAmrE,UAAAH,GAOA,QAAAI,GAAAprE,EAAAK,GACA,MAAAL,GAAA4C,KAAAvC,EAAAE,GAAA6E,KAAApF,EAAA4C,KAAAvC,EAAAJ,GAAAmF,KAAApF,EAAA+C,KAAA1C,GAAA4C,OAjEAiE,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAEAhH,EAAAorE,cACAprE,EAAAyrE,OAEA,IAAAhkE,GAAAxH,EAAA,GAEAmC,EAEA,SAAAsF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAF7ED,IRy0TMikE,IACA,SAAU3rE,EAAQC,EAASC,GAEjC,YS1zTA,SAAA4C,GAAA8oE,GACAthE,KAAAuhE,aAAAxpE,EAAAC,QAAAyD,IAAA6lE,EAAA,aAAAA,EAAAE,SACAxhE,KAAAyhE,gBAAA1pE,EAAAC,QAAAyD,IAAA6lE,EAAA,eAAAA,EAAA/nE,WACAyG,KAAA0hE,cAAA3pE,EAAAC,QAAAyD,IAAA6lE,EAAA,aAAAA,EAAAK,SAGA3hE,KAAA4hE,WAAAf,GAGA7gE,KAAA6hE,oBAAA9pE,EAAAC,QAAA8pE,aAAAjB,IAGA7gE,KAAA+hE,oBAAAhqE,EAAAC,QAAA8pE,aAAAjB,IAGA7gE,KAAAgiE,UAEAhiE,KAAA0hE,cAEA1hE,KAAAiiE,WAGAjiE,KAAAkiE,aACAliE,KAAAkiE,UAAAC,OAIAniE,KAAAoiE,OAGApiE,KAAAqiE,UAGAriE,KAAAsiE,QAGAtiE,KAAAuiE,SAGAviE,KAAAwiE,aAGAxiE,KAAAyiE,eA0ZA,QAAAC,GAAA/oE,EAAA6F,GACA7F,EAAA6F,GACA7F,EAAA6F,KAEA7F,EAAA6F,GAAA,EAIA,QAAAmjE,GAAAhpE,EAAA6F,KACA7F,EAAA6F,UACA7F,GAAA6F,GAIA,QAAAojE,GAAAC,EAAA95C,EAAA+5C,EAAAtsE,GACA,GAAAP,GAAA,GAAA8yB,EACAxyB,EAAA,GAAAusE,CACA,KAAAD,GAAA5sE,EAAAM,EAAA,CACA,GAAAwsE,GAAA9sE,CACAA,GAAAM,EACAA,EAAAwsE,EAEA,MAAA9sE,GAAA+sE,EAAAzsE,EAAAysE,GAAAjrE,EAAAC,QAAAqD,YAAA7E,GAAAysE,EAAAzsE,GAGA,QAAA0sE,GAAAL,EAAA95C,EAAA+5C,EAAAtsE,GACA,GAAAP,GAAA,GAAA8yB,EACAxyB,EAAA,GAAAusE,CACA,KAAAD,GAAA5sE,EAAAM,EAAA,CACA,GAAAwsE,GAAA9sE,CACAA,GAAAM,EACAA,EAAAwsE,EAEA,GAAAI,IAAiBltE,IAAAM,IAIjB,OAHAC,KACA2sE,EAAA3sE,QAEA2sE,EAGA,QAAAC,GAAAP,EAAAM,GACA,MAAAP,GAAAC,EAAAM,EAAAltE,EAAAktE,EAAA5sE,EAAA4sE,EAAA3sE,MAvgBA0G,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,GAGA,IAAA0mE,GAAA,kBAAAC,SAAA,gBAAAA,QAAAC,SAAA,SAAAlmE,GAAoG,aAAAA,IAAqB,SAAAA,GAAmB,MAAAA,IAAA,kBAAAimE,SAAAjmE,EAAAmmE,cAAAF,QAAAjmE,IAAAimE,OAAAzjE,UAAA,eAAAxC,IAE5ID,EAAAxH,EAAA,GAEAmC,EAEA,SAAAsF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAF7ED,GAIA6lE,EAAA,KACAd,EAAA,KACAa,EAAA,GA0DAxqE,GAAAqH,UAAA4jE,WAAA,EAGAjrE,EAAAqH,UAAA6jE,WAAA,EAIAlrE,EAAAqH,UAAAgjE,WAAA,WACA,MAAA7iE,MAAAuhE,aAGA/oE,EAAAqH,UAAArG,aAAA,WACA,MAAAwG,MAAAyhE,eAGAjpE,EAAAqH,UAAA8jE,WAAA,WACA,MAAA3jE,MAAA0hE,aAGAlpE,EAAAqH,UAAApH,SAAA,SAAAS,GAEA,MADA8G,MAAA4hE,OAAA1oE,EACA8G,MAGAxH,EAAAqH,UAAAvI,MAAA,WACA,MAAA0I,MAAA4hE,QAKAppE,EAAAqH,UAAA+jE,oBAAA,SAAAC,GAKA,MAJA9rE,GAAAC,QAAAN,WAAAmsE,KACAA,EAAA9rE,EAAAC,QAAA8pE,SAAA+B,IAEA7jE,KAAA6hE,oBAAAgC,EACA7jE,MAGAxH,EAAAqH,UAAAikE,UAAA,WACA,MAAA9jE,MAAAyjE,YAGAjrE,EAAAqH,UAAAlH,MAAA,WACA,MAAAZ,GAAAC,QAAA0I,KAAAV,KAAAgiE,SAGAxpE,EAAAqH,UAAAshE,QAAA,WACA,MAAAppE,GAAAC,QAAAwR,OAAAxJ,KAAArH,QAAAZ,EAAAC,QAAAu8C,KAAA,SAAAt+C,GACA,MAAA8B,GAAAC,QAAA+rE,QAAA/jE,KAAAoiE,IAAAnsE,KACG+J,QAGHxH,EAAAqH,UAAAmkE,MAAA,WACA,MAAAjsE,GAAAC,QAAAwR,OAAAxJ,KAAArH,QAAAZ,EAAAC,QAAAu8C,KAAA,SAAAt+C,GACA,MAAA8B,GAAAC,QAAA+rE,QAAA/jE,KAAAsiE,KAAArsE,KACG+J,QAGHxH,EAAAqH,UAAAokE,SAAA,SAAAjoE,EAAAW,GACA,GAAAu4C,GAAA94C,SAQA,OAPArE,GAAAC,QAAA67C,KAAA73C,EAAAjE,EAAAC,QAAAu8C,KAAA,SAAAt+C,GACAi/C,EAAA/+C,OAAA,EACA6J,KAAA5H,QAAAnC,EAAA0G,GAEAqD,KAAA5H,QAAAnC,IAEG+J,OACHA,MAGAxH,EAAAqH,UAAAzH,QAAA,SAAAnC,EAAA0G,GACA,MAAA5E,GAAAC,QAAAyD,IAAAuE,KAAAgiE,OAAA/rE,IACAmG,UAAAjG,OAAA,IACA6J,KAAAgiE,OAAA/rE,GAAA0G,GAEAqD,OAGAA,KAAAgiE,OAAA/rE,GAAAmG,UAAAjG,OAAA,EAAAwG,EAAAqD,KAAA6hE,oBAAA5rE,GACA+J,KAAA0hE,cACA1hE,KAAAiiE,QAAAhsE,GAAAksE,EACAniE,KAAAkiE,UAAAjsE,MACA+J,KAAAkiE,UAAAC,GAAAlsE,IAAA,GAEA+J,KAAAoiE,IAAAnsE,MACA+J,KAAAqiE,OAAApsE,MACA+J,KAAAsiE,KAAArsE,MACA+J,KAAAuiE,MAAAtsE,QACA+J,KAAAyjE,WACAzjE,OAGAxH,EAAAqH,UAAAjH,KAAA,SAAA3C,GACA,MAAA+J,MAAAgiE,OAAA/rE,IAGAuC,EAAAqH,UAAA3H,QAAA,SAAAjC,GACA,MAAA8B,GAAAC,QAAAyD,IAAAuE,KAAAgiE,OAAA/rE,IAGAuC,EAAAqH,UAAAqkE,WAAA,SAAAjuE,GACA,GAAAqkE,GAAAt6D,IACA,IAAAjI,EAAAC,QAAAyD,IAAAuE,KAAAgiE,OAAA/rE,GAAA,CACA,GAAAkuE,GAAA,SAAA9tE,GACAikE,EAAA6J,WAAA7J,EAAAkI,UAAAnsE,WAEA2J,MAAAgiE,OAAA/rE,GACA+J,KAAA0hE,cACA1hE,KAAAokE,4BAAAnuE,SACA+J,MAAAiiE,QAAAhsE,GACA8B,EAAAC,QAAA67C,KAAA7zC,KAAA9J,SAAAD,GAAA8B,EAAAC,QAAAu8C,KAAA,SAAA7T,GACA1gC,KAAAqkE,UAAA3jC,IACO1gC,aACPA,MAAAkiE,UAAAjsE,IAEA8B,EAAAC,QAAA67C,KAAA97C,EAAAC,QAAA0I,KAAAV,KAAAoiE,IAAAnsE,IAAAkuE,SACAnkE,MAAAoiE,IAAAnsE,SACA+J,MAAAqiE,OAAApsE,GACA8B,EAAAC,QAAA67C,KAAA97C,EAAAC,QAAA0I,KAAAV,KAAAsiE,KAAArsE,IAAAkuE,SACAnkE,MAAAsiE,KAAArsE,SACA+J,MAAAuiE,MAAAtsE,KACA+J,KAAAyjE,WAEA,MAAAzjE,OAGAxH,EAAAqH,UAAAwkE,UAAA,SAAApuE,EAAAoR,GACA,IAAArH,KAAA0hE,YACA,SAAA9mE,OAAA,4CAGA,IAAA7C,EAAAC,QAAAqD,YAAAgM,GACAA,EAAA86D,MACG,CAEH96D,GAAA,EACA,QAAAq8B,GAAAr8B,GAA+BtP,EAAAC,QAAAqD,YAAAqoC,GAAyCA,EAAA1jC,KAAAqH,OAAAq8B,GACxE,GAAAA,IAAAztC,EACA,SAAA2E,OAAA,WAAAyM,EAAA,iBAAApR,EAAA,+BAIA+J,MAAA5H,QAAAiP,GAOA,MAJArH,MAAA5H,QAAAnC,GACA+J,KAAAokE,4BAAAnuE,GACA+J,KAAAiiE,QAAAhsE,GAAAoR,EACArH,KAAAkiE,UAAA76D,GAAApR,IAAA,EACA+J,MAGAxH,EAAAqH,UAAAukE,4BAAA,SAAAnuE,SACA+J,MAAAkiE,UAAAliE,KAAAiiE,QAAAhsE,QAGAuC,EAAAqH,UAAAwH,OAAA,SAAApR,GACA,GAAA+J,KAAA0hE,YAAA,CACA,GAAAr6D,GAAArH,KAAAiiE,QAAAhsE,EACA,IAAAoR,IAAA86D,EACA,MAAA96D,KAKA7O,EAAAqH,UAAA3J,SAAA,SAAAD,GAKA,GAJA8B,EAAAC,QAAAqD,YAAApF,KACAA,EAAAksE,GAGAniE,KAAA0hE,YAAA,CACA,GAAAxrE,GAAA8J,KAAAkiE,UAAAjsE,EACA,IAAAC,EACA,MAAA6B,GAAAC,QAAA0I,KAAAxK,OAEG,IAAAD,IAAAksE,EACH,MAAAniE,MAAArH,OACG,IAAAqH,KAAA9H,QAAAjC,GACH,WAIAuC,EAAAqH,UAAAykE,aAAA,SAAAruE,GACA,GAAAsuE,GAAAvkE,KAAAqiE,OAAApsE,EACA,IAAAsuE,EACA,MAAAxsE,GAAAC,QAAA0I,KAAA6jE,IAIA/rE,EAAAqH,UAAA2kE,WAAA,SAAAvuE,GACA,GAAAwuE,GAAAzkE,KAAAuiE,MAAAtsE,EACA,IAAAwuE,EACA,MAAA1sE,GAAAC,QAAA0I,KAAA+jE,IAIAjsE,EAAAqH,UAAAszD,UAAA,SAAAl9D,GACA,GAAA+D,GAAAgG,KAAAskE,aAAAruE,EACA,IAAA+D,EACA,MAAAjC,GAAAC,QAAA0sE,MAAA1qE,EAAAgG,KAAAwkE,WAAAvuE,KAIAuC,EAAAqH,UAAA8kE,YAAA,SAAAn7D,GAuBA,QAAAo7D,GAAA3uE,GACA,GAAAoR,GAAAizD,EAAAjzD,OAAApR,EACA,YAAA4qE,KAAAx5D,GAAAs+B,EAAAztC,QAAAmP,IACAw9D,EAAA5uE,GAAAoR,EACAA,GACKA,IAAAw9D,GACLA,EAAAx9D,GAEAu9D,EAAAv9D,GA9BA,GAAAs+B,GAAA,GAAA3lC,MAAAwjE,aACAhC,SAAAxhE,KAAAuhE,YACAhoE,WAAAyG,KAAAyhE,cACAE,SAAA3hE,KAAA0hE,aAGA/7B,GAAAltC,SAAAuH,KAAA1I,SAEAS,EAAAC,QAAA67C,KAAA7zC,KAAAgiE,OAAAjqE,EAAAC,QAAAu8C,KAAA,SAAA53C,EAAA1G,GACAuT,EAAAvT,IACA0vC,EAAAvtC,QAAAnC,EAAA0G,IAEGqD,OAEHjI,EAAAC,QAAA67C,KAAA7zC,KAAAwiE,UAAAzqE,EAAAC,QAAAu8C,KAAA,SAAAl+C,GACAsvC,EAAAztC,QAAA7B,EAAAJ,IAAA0vC,EAAAztC,QAAA7B,EAAAE,IACAovC,EAAAxsC,QAAA9C,EAAA2J,KAAAjH,KAAA1C,KAEG2J,MAEH,IAAAs6D,GAAAt6D,KACA6kE,IAmBA,OANA7kE,MAAA0hE,aACA3pE,EAAAC,QAAA67C,KAAAlO,EAAAhtC,QAAA,SAAA1C,GACA0vC,EAAA0+B,UAAApuE,EAAA2uE,EAAA3uE,MAIA0vC,GAKAntC,EAAAqH,UAAAilE,oBAAA,SAAAjB,GAKA,MAJA9rE,GAAAC,QAAAN,WAAAmsE,KACAA,EAAA9rE,EAAAC,QAAA8pE,SAAA+B,IAEA7jE,KAAA+hE,oBAAA8B,EACA7jE,MAGAxH,EAAAqH,UAAAklE,UAAA,WACA,MAAA/kE,MAAA0jE,YAGAlrE,EAAAqH,UAAAhH,MAAA,WACA,MAAAd,GAAAC,QAAAqpC,OAAArhC,KAAAwiE,YAGAhqE,EAAAqH,UAAAmlE,QAAA,SAAAhpE,EAAAW,GACA,GAAA29D,GAAAt6D,KACAk1C,EAAA94C,SASA,OARArE,GAAAC,QAAAkpC,OAAAllC,EAAA,SAAA/F,EAAAM,GAMA,MALA2+C,GAAA/+C,OAAA,EACAmkE,EAAAnhE,QAAAlD,EAAAM,EAAAoG,GAEA29D,EAAAnhE,QAAAlD,EAAAM,GAEAA,IAEAyJ,MAOAxH,EAAAqH,UAAA1G,QAAA,WACA,GAAAlD,GAAAM,EAAAC,EAAAmG,EACAsoE,GAAA,EACAC,EAAA9oE,UAAA,EAEA,sBAAA8oE,EAAA,YAAA7B,EAAA6B,KAAA,OAAAA,GAAA,KAAAA,IACAjvE,EAAAivE,EAAAjvE,EACAM,EAAA2uE,EAAA3uE,EACAC,EAAA0uE,EAAA1uE,KACA,IAAA4F,UAAAjG,SACAwG,EAAAP,UAAA,GACA6oE,GAAA,KAGAhvE,EAAAivE,EACA3uE,EAAA6F,UAAA,GACA5F,EAAA4F,UAAA,GACAA,UAAAjG,OAAA,IACAwG,EAAAP,UAAA,GACA6oE,GAAA,IAIAhvE,EAAA,GAAAA,EACAM,EAAA,GAAAA,EACAwB,EAAAC,QAAAqD,YAAA7E,KACAA,EAAA,GAAAA,EAGA,IAAAH,GAAAusE,EAAA5iE,KAAAuhE,YAAAtrE,EAAAM,EAAAC,EACA,IAAAuB,EAAAC,QAAAyD,IAAAuE,KAAAyiE,YAAApsE,GAIA,MAHA4uE,KACAjlE,KAAAyiE,YAAApsE,GAAAsG,GAEAqD,IAGA,KAAAjI,EAAAC,QAAAqD,YAAA7E,KAAAwJ,KAAAyhE,cACA,SAAA7mE,OAAA,oDAKAoF,MAAA5H,QAAAnC,GACA+J,KAAA5H,QAAA7B,GAEAyJ,KAAAyiE,YAAApsE,GAAA4uE,EAAAtoE,EAAAqD,KAAA+hE,oBAAA9rE,EAAAM,EAAAC,EAEA,IAAA2sE,GAAAD,EAAAljE,KAAAuhE,YAAAtrE,EAAAM,EAAAC,EAYA,OAVAP,GAAAktE,EAAAltE,EACAM,EAAA4sE,EAAA5sE,EAEA2G,OAAAioE,OAAAhC,GACAnjE,KAAAwiE,UAAAnsE,GAAA8sE,EACAT,EAAA1iE,KAAAqiE,OAAA9rE,GAAAN,GACAysE,EAAA1iE,KAAAuiE,MAAAtsE,GAAAM,GACAyJ,KAAAoiE,IAAA7rE,GAAAF,GAAA8sE,EACAnjE,KAAAsiE,KAAArsE,GAAAI,GAAA8sE,EACAnjE,KAAA0jE,aACA1jE,MAGAxH,EAAAqH,UAAA9G,KAAA,SAAA9C,EAAAM,EAAAC,GACA,GAAAH,GAAA,IAAA+F,UAAAjG,OAAAitE,EAAApjE,KAAAuhE,YAAAnlE,UAAA,IAAAwmE,EAAA5iE,KAAAuhE,YAAAtrE,EAAAM,EAAAC,EACA,OAAAwJ,MAAAyiE,YAAApsE,IAGAmC,EAAAqH,UAAAulE,QAAA,SAAAnvE,EAAAM,EAAAC,GACA,GAAAH,GAAA,IAAA+F,UAAAjG,OAAAitE,EAAApjE,KAAAuhE,YAAAnlE,UAAA,IAAAwmE,EAAA5iE,KAAAuhE,YAAAtrE,EAAAM,EAAAC,EACA,OAAAuB,GAAAC,QAAAyD,IAAAuE,KAAAyiE,YAAApsE,IAGAmC,EAAAqH,UAAAskE,WAAA,SAAAluE,EAAAM,EAAAC,GACA,GAAAH,GAAA,IAAA+F,UAAAjG,OAAAitE,EAAApjE,KAAAuhE,YAAAnlE,UAAA,IAAAwmE,EAAA5iE,KAAAuhE,YAAAtrE,EAAAM,EAAAC,GACAuC,EAAAiH,KAAAwiE,UAAAnsE,EAYA,OAXA0C,KACA9C,EAAA8C,EAAA9C,EACAM,EAAAwC,EAAAxC,QACAyJ,MAAAyiE,YAAApsE,SACA2J,MAAAwiE,UAAAnsE,GACAssE,EAAA3iE,KAAAqiE,OAAA9rE,GAAAN,GACA0sE,EAAA3iE,KAAAuiE,MAAAtsE,GAAAM,SACAyJ,MAAAoiE,IAAA7rE,GAAAF,SACA2J,MAAAsiE,KAAArsE,GAAAI,GACA2J,KAAA0jE,cAEA1jE,MAGAxH,EAAAqH,UAAA5F,QAAA,SAAAhE,EAAAyoB,GACA,GAAA2mD,GAAArlE,KAAAoiE,IAAAnsE,EACA,IAAAovE,EAAA,CACA,GAAAxsE,GAAAd,EAAAC,QAAAqpC,OAAAgkC,EACA,OAAA3mD,GAGA3mB,EAAAC,QAAAwR,OAAA3Q,EAAA,SAAAE,GACA,MAAAA,GAAA9C,IAAAyoB,IAHA7lB,IAQAL,EAAAqH,UAAAhG,SAAA,SAAA5D,EAAAM,GACA,GAAA+uE,GAAAtlE,KAAAsiE,KAAArsE,EACA,IAAAqvE,EAAA,CACA,GAAAzsE,GAAAd,EAAAC,QAAAqpC,OAAAikC,EACA,OAAA/uE,GAGAwB,EAAAC,QAAAwR,OAAA3Q,EAAA,SAAAE,GACA,MAAAA,GAAAxC,QAHAsC,IAQAL,EAAAqH,UAAA0lE,UAAA,SAAAtvE,EAAAM,GACA,GAAA0D,GAAA+F,KAAA/F,QAAAhE,EAAAM,EACA,IAAA0D,EACA,MAAAA,GAAAwI,OAAAzC,KAAAnG,SAAA5D,EAAAM,KAgDAZ,EAAAqC,QAAAQ,EACA9C,EAAAC,UAAA,ST21TM6vE,IACA,SAAU9vE,EAAQC,EAASC,GAEjC,YUv2UA,SAAA6vE,GAAA7sE,EAAA8+B,EAAAC,EAAAv9B,GAGA,GAAAymB,GAAAjoB,EAAAyB,EACAymB,EAAAloB,EAAA0B,EAEAglC,EAAAze,EAAAzmB,EAAAC,EACAklC,EAAAze,EAAA1mB,EAAAE,EAEAorE,EAAAtsE,KAAAyV,KAAA6oB,IAAA6H,IAAA5H,IAAA2H,KAEA/kC,EAAAnB,KAAA2B,IAAA28B,EAAAC,EAAA2H,EAAAomC,EACAtrE,GAAAC,EAAAwmB,IACAtmB,KAEA,IAAAC,GAAApB,KAAA2B,IAAA28B,EAAAC,EAAA4H,EAAAmmC,EAKA,OAJAtrE,GAAAE,EAAAwmB,IACAtmB,OAGUH,EAAAwmB,EAAAtmB,EAAAD,EAAAwmB,EAAAtmB,GAtBV9E,EAAAC,QAAA8vE,GVu4UME,IACA,SAAUjwE,EAAQC,EAASC,GAEjC,YWp4UA,SAAAgwE,GAAA5sC,EAAApgC,EAAAi/C,GACA,GAAA3+C,GAAAN,EAAAM,MACA2sE,EAAA7sC,EAAAhuB,OAAA,IAII,SAAApS,EAAAktE,UACJC,EAAAF,EAAAjtE,GACG,gBAAAM,IAAA,SAAAN,EAAAktE,UACHE,EAAAH,EAAAjtE,GAEAqtE,EAAAJ,EAAAjtE,EAGA,IACA0B,GADA4rE,EAAAL,EAAAjtE,OAAAutE,SAEA,QAAAtuB,GACA,UACAv9C,GAAA1B,EAAA+B,OAAA,CACA,MACA,cACAL,EAAA1B,EAAA+B,OAAA,EAAAurE,EAAAvrE,MACA,MACA,SACAL,GAAA4rE,EAAAvrE,OAAA,EAIA,MAFAkrE,GAAA7uE,KAAA,0BAAAkvE,EAAAzrE,MAAA,MAAAH,EAAA,KAEAurE,EAlCA,GAAAI,GAAArwE,EAAA,KACAowE,EAAApwE,EAAA,KACAmwE,EAAAnwE,EAAA,IAEAF,GAAAC,QAAAiwE,GXg7UMQ,IACA,SAAU1wE,EAAQC,EAASC,GAEjC,YYp6UA,SAAAywE,GAAAj0D,EAAApc,GACA,QAAAgrE,GAAA/qE,GACA8B,EAAAC,QAAAU,QAAA1C,EAAAuvE,UAAAtvE,GAAA,SAAAI,GACA,GAAAiwE,GAAAjwE,EAAAJ,EACAM,EAAAN,IAAAqwE,EAAAjwE,EAAAE,EAAA+vE,CACAl0D,GAAAla,QAAA3B,KAAA,EAAAgwE,EAAAnF,OAAAprE,EAAAK,KACA+b,EAAAha,QAAA7B,MACA6b,EAAAjZ,QAAAlD,EAAAM,MACAyqE,EAAAzqE,MAMA,MADAwB,GAAAC,QAAAU,QAAA0Z,EAAAzZ,QAAAqoE,GACA5uD,EAAA0xD,YAOA,QAAA0C,GAAAp0D,EAAApc,GACA,MAAA+B,GAAAC,QAAAyuE,MAAAzwE,EAAA6C,QAAA,SAAAxC,GACA,GAAA+b,EAAAla,QAAA7B,EAAAJ,KAAAmc,EAAAla,QAAA7B,EAAAE,GACA,SAAAgwE,EAAAnF,OAAAprE,EAAAK,KAKA,QAAAqwE,GAAAt0D,EAAApc,EAAA8F,GACA/D,EAAAC,QAAAU,QAAA0Z,EAAAzZ,QAAA,SAAA1C,GACAD,EAAA4C,KAAA3C,GAAAmF,MAAAU,IA6BA,QAAA6qE,GAAA3wE,GACA,GAAAoc,GAAA,GAAA7Z,GAAAC,OAAoCgpE,UAAA,IAGpC3kE,EAAA7G,EAAA2C,QAAA,GACAiI,EAAA5K,EAAA8tE,WACA1xD,GAAAha,QAAAyE,KAGA,KADA,GAAA9D,GAAA+C,EACAuqE,EAAAj0D,EAAApc,GAAA4K,GACA7H,EAAAytE,EAAAp0D,EAAApc,GACA8F,EAAAsW,EAAAla,QAAAa,EAAA9C,IAAA,EAAAswE,EAAAnF,OAAAprE,EAAA+C,KAAA,EAAAwtE,EAAAnF,OAAAprE,EAAA+C,GACA2tE,EAAAt0D,EAAApc,EAAA8F,EAGA,OAAAsW,GA9FAlV,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAEAhH,EAAAqC,QAAA2uE,CAEA,IAAAvpE,GAAAxH,EAAA,GAEAmC,EAMA,SAAAsF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAN7ED,GAEA7E,EAAA3C,EAAA,KAEA2wE,EAAA3wE,EAAA,IAqFAF,GAAAC,UAAA,SZ87UMixE,IACA,SAAUlxE,EAAQC,EAASC,GAEjC,YapgVA,SAAAixE,GAAA7wE,EAAAC,EAAA6wE,EAAA7F,EAAA8F,EAAAC,GACAjvE,EAAAC,QAAAyD,IAAAwlE,EAAAhrE,KACAgrE,EAAAhrE,IAAA,EAEA6wE,GACAE,EAAAnrE,KAAA5F,GAEA8B,EAAAC,QAAA67C,KAAAkzB,EAAA9wE,GAAA,SAAAM,GACAswE,EAAA7wE,EAAAO,EAAAuwE,EAAA7F,EAAA8F,EAAAC,KAEAF,GACAE,EAAAnrE,KAAA5F,IAxCAiH,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAGAhH,EAAAqC,QAAA,SAAAhC,EAAAgG,EAAAV,GACAvD,EAAAC,QAAA65C,QAAA71C,KACAA,MAGA,IAAA+qE,IAAA/wE,EAAA6sE,aAAA7sE,EAAAwuE,WAAAxuE,EAAAm9D,WAAA5e,KAAAv+C,GAEAgxE,KACA/F,IAQA,OAPAlpE,GAAAC,QAAA67C,KAAA73C,EAAA,SAAA/F,GACA,IAAAD,EAAAkC,QAAAjC,GACA,SAAA2E,OAAA,6BAAA3E,EAGA4wE,GAAA7wE,EAAAC,EAAA,SAAAqF,EAAA2lE,EAAA8F,EAAAC,KAEAA,EAGA,IAAA5pE,GAAAxH,EAAA,GAEAmC,EAEA,SAAAsF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAF7ED,EA4BA1H,GAAAC,UAAA,SbwiVMsxE,IACA,SAAUvxE,EAAQC,EAASC,GAEjC,Yc5kVA,SAAAsxE,GAAA7pE,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,GAI7E,QAAA8pE,GAAAnxE,EAAAkL,EAAAkmE,EAAAC,GACA,GAEApxE,GAAAqxE,EAFAC,KACAC,EAAA,GAAAC,GAAAzvE,QAGA0vE,EAAA,SAAA3uE,GACA,GAAAxC,GAAAwC,EAAA9C,MAAA8C,EAAA9C,EAAA8C,EAAAxC,EACAoxE,EAAAJ,EAAAhxE,GACAyC,EAAAouE,EAAAruE,GACA03B,EAAA62C,EAAA72C,SAAAz3B,CAEA,IAAAA,EAAA,EACA,SAAA4B,OAAA,4DAAA7B,EAAA,YAAAC,EAGAy3B,GAAAk3C,EAAAl3C,WACAk3C,EAAAl3C,WACAk3C,EAAAC,YAAA3xE,EACAuxE,EAAAK,SAAAtxE,EAAAk6B,IAUA,KANAz6B,EAAA2C,QAAAD,QAAA,SAAAzC,GACA,GAAAw6B,GAAAx6B,IAAAiL,EAAA,EAAAkkC,OAAA87B,iBACAqG,GAAAtxE,IAAkBw6B,YAClB+2C,EAAA3hE,IAAA5P,EAAAw6B,KAGA+2C,EAAA5mE,OAAA,IACA3K,EAAAuxE,EAAAM,YACAR,EAAAC,EAAAtxE,GACAqxE,EAAA72C,WAAA2U,OAAA87B,oBAIAmG,EAAApxE,GAAAyC,QAAAgvE,EAGA,OAAAH,GA9DArqE,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAGAhH,EAAAqC,QAAA,SAAAhC,EAAAkL,EAAAkmE,EAAAC,GAKA,MAJAD,MAAAW,EACAV,KAAA,SAAApxE,GACA,MAAAD,GAAA6D,SAAA5D,IAEAkxE,EAAAnxE,EAAAU,OAAAwK,GAAAkmE,EAAAC,GAGA,IAAAjqE,GAAAxH,EAAA,GAEAmC,EAAAmvE,EAAA9pE,GAEA4qE,EAAApyE,EAAA,KAEA6xE,EAAAP,EAAAc,GAIAD,EAAAhwE,EAAAC,QAAA8pE,SAAA,EA2CApsE,GAAAC,UAAA,SdumVMsyE,IACA,SAAUvyE,EAAQC,EAASC,GAEjC,Ye3qVAsH,QAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAGAhH,EAAAqC,QAAA,SAAAhC,GAMA,QAAAgrE,GAAA/qE,GACA,GAAAksB,GAAA8+C,EAAAhrE,IACAiyE,SAAA,EACAC,QAAA1tC,EACAA,UAaA,IAXA44B,EAAAx3D,KAAA5F,GAEAD,EAAAwuE,WAAAvuE,GAAAyC,QAAA,SAAAnC,GACAwB,EAAAC,QAAAyD,IAAAwlE,EAAA1qE,GAGO0qE,EAAA1qE,GAAA2xE,UACP/lD,EAAAgmD,QAAA/uE,KAAAoC,IAAA2mB,EAAAgmD,QAAAlH,EAAA1qE,GAAAkkC,SAHAumC,EAAAzqE,GACA4rB,EAAAgmD,QAAA/uE,KAAAoC,IAAA2mB,EAAAgmD,QAAAlH,EAAA1qE,GAAA4xE,YAMAhmD,EAAAgmD,UAAAhmD,EAAAsY,MAAA,CACA,GACAlkC,GADA6xE,IAEA,IACA7xE,EAAA88D,EAAA7vC,MACAy9C,EAAA1qE,GAAA2xE,SAAA,EACAE,EAAAvsE,KAAAtF,SACON,IAAAM,EACPgxE,GAAA1rE,KAAAusE,IA9BA,GAAA3tC,GAAA,EACA44B,KACA4N,KACAsG,IAqCA,OANAvxE,GAAA2C,QAAAD,QAAA,SAAAzC,GACA8B,EAAAC,QAAAyD,IAAAwlE,EAAAhrE,IACA+qE,EAAA/qE,KAIAsxE,EAGA,IAAAnqE,GAAAxH,EAAA,GAEAmC,EAEA,SAAAsF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAF7ED,EAIA1H,GAAAC,UAAA,SfkrVM0yE,IACA,SAAU3yE,EAAQC,EAASC,GAEjC,YgBjuVA,SAAA0yE,MAEA,QAAAC,GAAAvyE,GAKA,QAAAq5D,GAAAz2D,GACA,GAAAb,EAAAC,QAAAyD,IAAA43D,EAAAz6D,GACA,SAAA0vE,EAGAvwE,GAAAC,QAAAyD,IAAAwlE,EAAAroE,KACAy6D,EAAAz6D,IAAA,EACAqoE,EAAAroE,IAAA,EACAb,EAAAC,QAAA67C,KAAA79C,EAAAsuE,aAAA1rE,GAAAy2D,SACAgE,GAAAz6D,GACA2uE,EAAA1rE,KAAAjD,IAdA,GAAAqoE,MACA5N,KACAkU,IAkBA,IAFAxvE,EAAAC,QAAA67C,KAAA79C,EAAAguE,QAAA3U,GAEAt3D,EAAAC,QAAA4I,KAAAqgE,KAAAjrE,EAAA8tE,YACA,SAAAwE,EAGA,OAAAf,GArCArqE,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,GAGA,IAAAS,GAAAxH,EAAA,GAEAmC,EAEA,SAAAsF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAF7ED,EAkCAmrE,GAAAD,iBAEA3yE,EAAAqC,QAAAuwE,EACA7yE,EAAAC,UAAA,ShBkvVM6yE,IACA,SAAU9yE,EAAQC,EAASC,GAEjC,YiB/wVA,SAAA6yE,KACAzoE,KAAA0oE,QACA1oE,KAAA2oE,eAnBAzrE,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,GAGA,IAAAS,GAAAxH,EAAA,GAEAmC,EAEA,SAAAsF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAF7ED,EAmBAqrE,GAAA5oE,UAAAe,KAAA,WACA,MAAAZ,MAAA0oE,KAAAvyE,QAMAsyE,EAAA5oE,UAAAa,KAAA,WACA,MAAAV,MAAA0oE,KAAA/uE,IAAA,SAAAU,GACA,MAAAA,GAAAuF,OAOA6oE,EAAA5oE,UAAApE,IAAA,SAAAmE,GACA,MAAA7H,GAAAC,QAAAyD,IAAAuE,KAAA2oE,YAAA/oE,IASA6oE,EAAA5oE,UAAAqG,SAAA,SAAAtG,GACA,GAAA66B,GAAAz6B,KAAA2oE,YAAA/oE,EACA,QAAAihE,KAAApmC,EACA,MAAAz6B,MAAA0oE,KAAAjuC,GAAAv0B,UAQAuiE,EAAA5oE,UAAArE,IAAA,WACA,OAAAwE,KAAAY,OACA,SAAAhG,OAAA,kBAEA,OAAAoF,MAAA0oE,KAAA,GAAA9oE,KAWA6oE,EAAA5oE,UAAAgG,IAAA,SAAAjG,EAAAsG,GACA,GAAA0iE,GAAA5oE,KAAA2oE,WAEA,IADA/oE,EAAAlJ,OAAAkJ,IACA7H,EAAAC,QAAAyD,IAAAmtE,EAAAhpE,GAAA,CACA,GAAAipE,GAAA7oE,KAAA0oE,KACAjuC,EAAAouC,EAAA1yE,MAIA,OAHAyyE,GAAAhpE,GAAA66B,EACAouC,EAAAhtE,MAAc+D,MAAAsG,aACdlG,KAAA8oE,UAAAruC,IACA,EAEA,UAMAguC,EAAA5oE,UAAAioE,UAAA,WACA9nE,KAAA+oE,MAAA,EAAA/oE,KAAA0oE,KAAAvyE,OAAA,EACA,IAAAqF,GAAAwE,KAAA0oE,KAAAllD,KAGA,cAFAxjB,MAAA2oE,YAAAntE,EAAAoE,KACAI,KAAAgpE,SAAA,GACAxtE,EAAAoE,KAUA6oE,EAAA5oE,UAAAgoE,SAAA,SAAAjoE,EAAAsG,GACA,GAAAu0B,GAAAz6B,KAAA2oE,YAAA/oE,EACA,IAAAsG,EAAAlG,KAAA0oE,KAAAjuC,GAAAv0B,SACA,SAAAtL,OAAA,uDAAAgF,EAAA,SAAAI,KAAA0oE,KAAAjuC,GAAAv0B,SAAA,SAAAA,EAEAlG,MAAA0oE,KAAAjuC,GAAAv0B,WACAlG,KAAA8oE,UAAAruC,IAGAguC,EAAA5oE,UAAAmpE,SAAA,SAAA/sE,GACA,GAAA4sE,GAAA7oE,KAAA0oE,KACAzmE,EAAA,EAAAhG,EACAgS,EAAAhM,EAAA,EACAgnE,EAAAhtE,CACAgG,GAAA4mE,EAAA1yE,SACA8yE,EAAAJ,EAAA5mE,GAAAiE,SAAA2iE,EAAAI,GAAA/iE,SAAAjE,EAAAgnE,EACAh7D,EAAA46D,EAAA1yE,SACA8yE,EAAAJ,EAAA56D,GAAA/H,SAAA2iE,EAAAI,GAAA/iE,SAAA+H,EAAAg7D,GAEAA,IAAAhtE,IACA+D,KAAA+oE,MAAA9sE,EAAAgtE,GACAjpE,KAAAgpE,SAAAC,MAKAR,EAAA5oE,UAAAipE,UAAA,SAAAruC,GAIA,IAHA,GAEApzB,GAFAwhE,EAAA7oE,KAAA0oE,KACAxiE,EAAA2iE,EAAApuC,GAAAv0B,SAEA,IAAAu0B,IACApzB,EAAAozB,GAAA,IACAouC,EAAAxhE,GAAAnB,cAGAlG,KAAA+oE,MAAAtuC,EAAApzB,GACAozB,EAAApzB,GAIAohE,EAAA5oE,UAAAkpE,MAAA,SAAA9sE,EAAAgM,GACA,GAAA4gE,GAAA7oE,KAAA0oE,KACAE,EAAA5oE,KAAA2oE,YACAO,EAAAL,EAAA5sE,GACAktE,EAAAN,EAAA5gE,EACA4gE,GAAA5sE,GAAAktE,EACAN,EAAA5gE,GAAAihE,EACAN,EAAAO,EAAAvpE,KAAA3D,EACA2sE,EAAAM,EAAAtpE,KAAAqI,GAGAtS,EAAAqC,QAAAywE,EACA/yE,EAAAC,UAAA,SjBuyVMyzE,IACA,SAAU1zE,EAAQC,EAASC,GAEjC,YkB38VAF,GAAAC,QAAAC,EAAA,MAAA+H,OAAA0rE,OlBk9VMC,IACA,SAAU5zE,EAAQC,EAASC,GAEjC,YmBj9VA,SAAA2zE,GAAA3wE,EAAA8+B,EAAAt9B,GACA,MAAAqrE,GAAA7sE,EAAA8+B,IAAAt9B,GALA,GAAAqrE,GAAA7vE,EAAA,IAEAF,GAAAC,QAAA4zE,GnBg+VMC,IACA,SAAU9zE,EAAQC,EAASC,GAEjC,YoBn+VA,SAAA6zE,GAAA7wE,EAAAwB,GACA,MAAAxB,GAAA8tB,UAAAtsB,GAHA1E,EAAAC,QAAA8zE,GpBg/VMC,IACA,SAAUh0E,EAAQC,EAASC,GAEjC,YqB3+VA,SAAA+zE,GAAA/wE,EAAAgxE,EAAAxvE,GACA,GAAA2tB,GAAAnvB,EAAAyB,EACA2tB,EAAApvB,EAAA0B,EAEAuvE,KAEAC,EAAA1kC,OAAA87B,kBACA6I,EAAA3kC,OAAA87B,iBACA0I,GAAAlxE,QAAA,SAAAypB,GACA2nD,EAAA1wE,KAAAoC,IAAAsuE,EAAA3nD,EAAA9nB,GACA0vE,EAAA3wE,KAAAoC,IAAAuuE,EAAA5nD,EAAA7nB,IAMA,QAHA0E,GAAA+oB,EAAAnvB,EAAA6B,MAAA,EAAAqvE,EACA5+D,EAAA8c,EAAApvB,EAAA+B,OAAA,EAAAovE,EAEA9tE,EAAA,EAAiBA,EAAA2tE,EAAAzzE,OAAuB8F,IAAA,CACxC,GAAA8lB,GAAA6nD,EAAA3tE,GACA4uC,EAAA++B,EAAA3tE,EAAA2tE,EAAAzzE,OAAA,EAAA8F,EAAA,KACAyqB,EAAAsjD,EAAApxE,EAAAwB,GAAgDC,EAAA2E,EAAA+iB,EAAA1nB,EAAAC,EAAA4Q,EAAA6W,EAAAznB,IAAmCD,EAAA2E,EAAA6rC,EAAAxwC,EAAAC,EAAA4Q,EAAA2/B,EAAAvwC,GACnFosB,IACAmjD,EAAAhuE,KAAA6qB,GAIA,MAAAmjD,GAAA1zE,QAKA0zE,EAAA1zE,OAAA,GAEA0zE,EAAA5nD,KAAA,SAAA9O,EAAAsU,GACA,GAAAwiD,GAAA92D,EAAA9Y,EAAAD,EAAAC,EACA6vE,EAAA/2D,EAAA7Y,EAAAF,EAAAE,EACA6vE,EAAA/wE,KAAAyV,KAAAo7D,IAAAC,KAEAE,EAAA3iD,EAAAptB,EAAAD,EAAAC,EACAgwE,EAAA5iD,EAAAntB,EAAAF,EAAAE,EACAgwE,EAAAlxE,KAAAyV,KAAAu7D,IAAAC,IAEA,OAAAF,GAAAG,GAAA,EAAAH,IAAAG,EAAA,MAGAT,EAAA,KAlBA9sE,QAAAC,IAAA,4CAAApE,GACAA,GAnCA,GAAAoxE,GAAAp0E,EAAA,IAEAF,GAAAC,QAAAg0E,GrB6iWMY,IACA,SAAU70E,EAAQC,EAASC,GAEjC,YsBhjWA,SAAAsE,GAAAtB,EAAAwB,GACA,GAUAS,GAAAC,EAVAT,EAAAzB,EAAAyB,EACAC,EAAA1B,EAAA0B,EAIAC,EAAAH,EAAAC,IACAG,EAAAJ,EAAAE,IACA/D,EAAAqC,EAAA6B,MAAA,EACAC,EAAA9B,EAAA+B,OAAA,CAmBA,OAhBAvB,MAAA2B,IAAAP,GAAAjE,EAAA6C,KAAA2B,IAAAR,GAAAG,GAEAF,EAAA,IACAE,MAEAG,EAAA,IAAAL,EAAA,EAAAE,EAAAH,EAAAC,EACAM,EAAAJ,IAGAH,EAAA,IACAhE,MAEAsE,EAAAtE,EACAuE,EAAA,IAAAP,EAAA,EAAAhE,EAAAiE,EAAAD,IAGUF,IAAAQ,EAAAP,IAAAQ,GA9BVpF,EAAAC,QAAAuE,GtBwlWMswE,IACA,SAAU90E,EAAQ+0E,EAAqB70E,GAE7C,YACAsH,QAAOC,eAAestE,EAAqB,cAAgB9tE,OAAO,GAC7C,IAAI+tE,GAAmE90E,EAAoB,KACvF+0E,EAA2E/0E,EAAoB6L,EAAEipE,GACjGE,EAAyCh1E,EAAoB,KAE7Di1E,GADiDj1E,EAAoB6L,EAAEmpE,GACpCh1E,EAAoB,KACZA,GAAoB6L,EAAEopE,EuBnlW1FJ,GAAA,SvB2lWEj0E,KuBzlWF,kBvB0lWEs0E,UACEnxE,IAAK,WAGH,MAFAqG,MuBxlWN+qE,YvBylWM/qE,KAAKgrE,OAAOC,QuBxlWlBC,YvBylWalrE,KAAKgrE,OAAOC,QuBxlWzBtxE,KvB0lWIwxE,QAAS,WAEP,MADAnrE,MuBvlWN+qE,YvBwlWa/qE,KAAKgrE,OAAOI,MAAMC,OAAOhC,MuBvlWtC8B,SvBylWIG,QAAS,WAEP,MADAtrE,MuBtlWN+qE,YvBulWa/qE,KAAKgrE,OAAOI,MAAMC,OAAOhC,MuBtlWtCiC,SvBwlWIC,QAAS,WAEP,MADAvrE,MuBrlWN+qE,YvBslWa/qE,KAAKgrE,OAAOI,MAAMC,OAAOhC,MuBrlWtCkC,UvBwlWEC,OACE7xE,IAAK,aACLwxE,QAAS,aACTG,QAAS,aACTC,QAAS,cAEXE,QAAS,WACPzrE,KuB/kWJ+qE,avBilWEv8B,SACEk9B,QAAS,SAAiB9yE,EAAM5C,EAAG21E,GACjC,GAAIC,IACF9F,UuB/kWR,OvBglWQ+F,MAAOjzE,EuB/kWff,KvBglWQi0E,cuB/kWR,EvBglWQC,WuB/kWR,EvBglWQC,YuB/kWR,EvBglWQC,auB9kWR,EvBulWM,IAPAL,EAAe1yE,MuB/kWrB,2BvBglWUN,EAAKszE,aACPN,EAAe1yE,OAAS,OAASN,EAAKszE,WuB/kW9C,UvBilWUtzE,EAAKuzE,WAA4B,cAAdvzE,EAAKf,MAAsC,aAAde,EAAKf,OACvD+zE,EAAe1yE,OAAS,MAAQN,EAAKuzE,UuB/kW7C,QvBilWUvzE,EAAKwzE,KAAM,CuB/kWrB,GAAAC,IAAA,EvBilWYC,GAAoB,EACpBC,MAAiB1L,EAErB,KACE,IAAK,GAAuG2L,GAAnGC,EAAY9B,IAA2E/xE,EAAKwzE,QAAgBC,GAA6BG,EAAQC,EAAU/4C,QAAQg5C,MAAOL,GAA4B,EAAM,CuBplW/N,GAAAM,GAAAH,EAAA7vE,KvBulWYivE,GAAeC,OuBtlW3B,IvBulWYD,EAAeC,OAAS7rE,KAAKgrE,OAAOC,QAAQ2B,eAAeD,GuBtlWvEE,UvBwlWU,MAAO9mC,GACPumC,GAAoB,EACpBC,EAAiBxmC,EACjB,QACA,KACOsmC,GAA6BI,EAAUK,QAC1CL,EAAUK,SAEZ,QACA,GAAIR,EACF,KAAMC,KAed,GAVAX,EAAe1yE,OuBnmWrB,SvBqmWwB,UAAdN,EAAKf,OACP+zE,EAAemB,gBuBpmWvB,MvBqmWQnB,EAAeC,OAAS,UAAYjzE,EuBpmW5Co0E,OvBsmWMh3E,EAAEoC,QAAQQ,EAAKs0C,GuBpmWrB0+B,GvBqmWUD,GACF31E,EAAEquE,UAAUzrE,EAAKs0C,GAAIy+B,EuBpmW7Bz+B,IvBsmWwB,UAAdt0C,EAAKf,KAAkB,CuBpmWjC,GAAAo1E,IAAA,EvBsmWYC,GAAqB,EACrBC,MAAkBtM,EAEtB,KACE,IAAK,GAAyGuM,GAArGC,EAAa1C,IAA2E/xE,EAAKD,SAAkBs0E,GAA8BG,EAASC,EAAW35C,QAAQg5C,MAAOO,GAA6B,EAAM,CuBzmWtO,GAAAvsC,GAAA0sC,EAAAzwE,KvB4mWYqD,MAAK0rE,QAAQhrC,EAAO1qC,EuB3mWhC4C,IvB6mWU,MAAOmtC,GACPmnC,GAAqB,EACrBC,EAAkBpnC,EAClB,QACA,KACOknC,GAA8BI,EAAWP,QAC5CO,EAAWP,SAEb,QACA,GAAII,EACF,KAAMC,OAMhBpC,UAAW,WACT,GAAIpxE,GAAMqG,KAAKgrE,OAAOC,QuBvnW5BtxE,GvBynWM,IAAKqG,KAAKstE,MAAM5iE,KAAQ/Q,GAAQA,EAAIhB,OAAUgB,EAAId,MAAlD,CAIA,GAAI7C,GAAI,GAAI40E,GAAiD,SAAEpyE,OAAQmpE,UuBvnW7E,IAAAlpE,UvBwnWQ80E,QAASvtE,KAAKgrE,OAAOI,MAAMC,OAAOhC,MuBtnW1C8B,QvBunWQI,QAASvrE,KAAKgrE,OAAOI,MAAMC,OAAOhC,MuBtnW1CkC,QvBunWQD,QAAStrE,KAAKgrE,OAAOI,MAAMC,OAAOhC,MuBtnW1CiC,QvBunWQkC,QuBtnWR,GvBunWQC,QuBrnWR,KANA3I,oBAAA,WvB6nWQ,WuBtoWR4I,GAAA,EvB0oWUC,GAAqB,EACrBC,MAAkB/M,EAEtB,KACE,IAAK,GAAwGgN,GAApGC,EAAanD,IAA2EhxE,EAAIhB,SAAkB+0E,GAA8BG,EAASC,EAAWp6C,QAAQg5C,MAAOgB,GAA6B,EAAM,CuB5nWnO,GAAA90E,GAAAi1E,EAAAlxE,KvB+nWUqD,MAAK0rE,QAAQ9yE,EuB9nWvB5C,IvBgoWQ,MAAO+vC,GACP4nC,GAAqB,EACrBC,EAAkB7nC,EAClB,QACA,KACO2nC,GAA8BI,EAAWhB,QAC5CgB,EAAWhB,SAEb,QACA,GAAIa,EACF,KAAMC,IAKZ,GAAIG,IAA6B,EAC7BC,GAAqB,EACrBC,MAAkBpN,EAEtB,KACE,IAAK,GAAwGqN,GAApGC,EAAaxD,IAA2EhxE,EAAId,SAAkBk1E,GAA8BG,EAASC,EAAWz6C,QAAQg5C,MAAOqB,GAA6B,EAAM,CuBjpWnO,GAAAh1E,GAAAm1E,EAAAvxE,KvBopWU3G,GAAEmD,QAAQJ,EAAKisB,KAAKkoB,GAAIn0C,EAAKksB,GAAGioB,IAAM2+B,MAAO9yE,EuBnpWvDlB,QvBqpWQ,MAAOkuC,GACPioC,GAAqB,EACrBC,EAAkBloC,EAClB,QACA,KACOgoC,GAA8BI,EAAWrB,QAC5CqB,EAAWrB,SAEb,QACA,GAAIkB,EACF,KAAMC,IAKZ,GAAIt1E,GAAQ3C,EuBhqWlB2C,QvBkqWUy1E,GAA6B,EAC7BC,GAAqB,EACrBC,MAAkBzN,EAEtB,KACE,IAAK,GAAoG0N,GAAhGC,EAAa7D,IAA2EhyE,KAAkBy1E,GAA8BG,EAASC,EAAW96C,QAAQg5C,MAAO0B,GAA6B,EAAM,CuBtqW/N,GAAAn4E,GAAAs4E,EAAA5xE,MvByqWc8xE,EAAQz4E,EAAE4C,KuBvqWxB3C,EvByqWUw4E,GAAM/2C,GAAK+2C,EAAM92C,GuBxqW3B,GvB0qWQ,MAAOoO,GACPsoC,GAAqB,EACrBC,EAAkBvoC,EAClB,QACA,KACOqoC,GAA8BI,EAAW1B,QAC5C0B,EAAW1B,SAEb,QACA,GAAIuB,EACF,KAAMC,IAKZ,GAAII,GAAS,GAAI9D,GAA+C,OAC5DlgE,EAAMmgE,EAAyC,OAAE7qE,KAAKstE,MuBjrWhE5iE,IvBkrWMA,GAAI4oC,UAAU,KuBhrWpB5wC,SvBkrWMgI,EAAIM,OuBjrWV,IvBkrWM,IAAI2jE,GAAWjkE,EAAIR,OuB9qWzB,KvBirWUqtC,EAAOszB,EAA2C,SAAEtzB,OAAOn1C,GAAG,OAAQ,WACxEusE,EAAS33E,KAAK,YAAa,aAAe6zE,EAAwC,MAAEh8C,UAAY,UAAiBg8C,EAAwC,MAAEt3D,MuBhrWnK,MvBkrWM7I,GAAIvB,KuB9qWVouC,GvBgrWMm3B,EAAOC,EuB7qWb34E,EAMAuhD,GAAA1oB,YvB0qWwB,WAEhB,MADmBnkB,GAAI9R,OuB9qW/BmT,wBACAtR,SAHA,IAKAzE,EAAAsB,QAAAmD,OAAA,EACA,KAAA8Y,MANA,KAOAvR,MACA0I,GvB4qWMikE,EAAS33E,KAAK,SuBprWpB,IvBorW8BhB,EAAEsB,QAAQqD,OuB3qWxC,SvBkrWMi0E,IACA,SAAUl5E,EAAQC,EAASC,GwBv1WjCF,EAAAC,SAAkBqC,QAAApC,EAAA,KAAA0H,YAAA,IxB61WZuxE,IACA,SAAUn5E,EAAQ+0E,EAAqB70E,GAE7C,YACAsH,QAAOC,eAAestE,EAAqB,cAAgB9tE,OAAO,IACnC/G,EAAoB0J,EAAEmrE,EAAqB,QAAS,WAAa,MAAOqE,KACxEl5E,EAAoB0J,EAAEmrE,EAAqB,OAAQ,WAAa,MAAOsE,IACjF,IAAIC,GAA2Cp5E,EAAoB,KAE/Dq5E,GADmDr5E,EAAoB6L,EAAEutE,GAC7Bp5E,EAAoB,MAChEs5E,EAAoDt5E,EAAoB6L,EAAEwtE,EAClDr5E,GAAoB0J,EAAEmrE,EAAqB,SAAU,WAAa,MAAOyE,GAAkD1wE,GyBx2W5K,IAAA2wE,GAAAv5E,EAAA,KAwBAk5E,GAxBAl5E,EAAA6L,EAAA0tE,IAyBAC,cAAAJ,EAAA,gBAsBAD,GACA7yE,cAAAizE,EAAA,cACAv3E,aAAAu3E,EAAA,aACA71E,mBAAA61E,EAAA,mBACAn0E,iBAAAm0E,EAAA,iBACAj1E,cAAAi1E,EAAA,cACAh0E,QAAAg0E,EAAA,QACA5zE,eAAA4zE,EAAA,eACAlyE,OAAAkyE,EAAA,OACA9yE,UAAA8yE,EAAA,UACAp1E,mBAAAo1E,EAAA,mBACAzzE,iBAAAyzE,EAAA,iBACA92E,SAAA82E,EAAA,SACA11E,iBAAA01E,EAAA,iBACAvyE,KAAAuyE,EAAA,OzBk2WME,IACA,SAAU35E,EAAQC,EAASC,GAEjC,Y0Bl5WA,SAAAsxE,GAAA7pE,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,GAE7E,QAAAiyE,GAAAt5E,GAKA,QAAAgrE,GAAA/qE,GACA8B,EAAAC,QAAAyD,IAAAwlE,EAAAhrE,KAGAgrE,EAAAhrE,IAAA,EACAo9D,EAAAp9D,IAAA,EACA8B,EAAAC,QAAAU,QAAA1C,EAAA6D,SAAA5D,GAAA,SAAAI,GACA0B,EAAAC,QAAAyD,IAAA43D,EAAAh9D,EAAAE,GACAg5E,EAAA1zE,KAAAxF,GAEA2qE,EAAA3qE,EAAAE,WAGA88D,GAAAp9D,IAjBA,GAAAs5E,MACAlc,KACA4N,IAmBA,OADAlpE,GAAAC,QAAAU,QAAA1C,EAAA2C,QAAAqoE,GACAuO,EAGA,QAAAC,GAAAx5E,GACA+B,EAAAC,QAAAU,QAAA1C,EAAA6C,QAAA,SAAAxC,GACA,GAAA6C,GAAAlD,EAAA+C,KAAA1C,EACA,IAAA6C,EAAAu2E,SAAA,CACAz5E,EAAAmuE,WAAA9tE,EAEA,IAAAq5E,GAAAx2E,EAAAw2E,kBACAx2E,GAAAu2E,eACAv2E,GAAAw2E,YACA15E,EAAAmD,QAAA9C,EAAAE,EAAAF,EAAAJ,EAAAiD,EAAAw2E,MAKA,QAAAC,GAAA35E,GACA,GAAAu5E,GAAA,WAAAv5E,EAAAsB,QAAAs4E,WAAA,EAAAC,EAAA73E,SAAAhC,EASA,SAAAA,GACA,gBAAAK,GACA,MAAAL,GAAA+C,KAAA1C,GAAA2C,SAXAhD,IAAAs5E,EAAAt5E,EACA+B,GAAAC,QAAAU,QAAA62E,EAAA,SAAAl5E,GACA,GAAA6C,GAAAlD,EAAA+C,KAAA1C,EACAL,GAAAmuE,WAAA9tE,GACA6C,EAAAw2E,YAAAr5E,EAAAG,KACA0C,EAAAu2E,UAAA,EACAz5E,EAAAmD,QAAA9C,EAAAE,EAAAF,EAAAJ,EAAAiD,EAAAnB,EAAAC,QAAAC,SAAA,UA9DAiF,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAEAhH,EAAA65E,OACA75E,EAAAg6E,KAEA,IAAAvyE,GAAAxH,EAAA,GAEAmC,EAAAmvE,EAAA9pE,GAEA0yE,EAAAl6E,EAAA,KAEAi6E,EAAA3I,EAAA4I,I1Bi+WMC,IACA,SAAUr6E,EAAQC,EAASC,GAEjC,Y2B/8WA,SAAAsG,GAAAlG,EAAAg6E,EAAA7zE,EAAA8zE,EAAAC,EAAA90E,GACA,GAAAlC,IAAeuB,MAAA,EAAAE,OAAA,EAAAS,OAAA+0E,WAAAH,GACfI,EAAAF,EAAAF,GAAA50E,EAAA,GACAi1E,GAAA,EAAA9J,EAAA3uE,cAAA5B,EAAA,SAAAkD,EAAAiD,EACA+zE,GAAAF,GAAA50E,GAAAi1E,EACAr6E,EAAAquE,UAAAgM,EAAAJ,GACAG,GACAp6E,EAAAmD,QAAAi3E,EAAAC,GAA2Br3E,OAAA,IAxC3BkE,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAGAhH,EAAAqC,QAAA,SAAAhC,GACA,QAAAgrE,GAAA/qE,GACA,GAAAC,GAAAF,EAAAE,SAAAD,GACA2C,EAAA5C,EAAA4C,KAAA3C,EAKA,IAJAC,EAAAC,QACA4B,EAAAC,QAAAU,QAAAxC,EAAA8qE,GAGAjpE,EAAAC,QAAAyD,IAAA7C,EAAA,YACAA,EAAA03E,cACA13E,EAAA23E,cACA,QAAAn1E,GAAAxC,EAAA43E,QAAAr1E,EAAAvC,EAAAuC,QAAA,EAA+DC,EAAAD,IAAgBC,EAC/Ec,EAAAlG,EAAA,mBAAAC,EAAA2C,EAAAwC,GACAc,EAAAlG,EAAA,oBAAAC,EAAA2C,EAAAwC,IAKArD,EAAAC,QAAAU,QAAA1C,EAAAE,WAAA8qE,GAGA,IAAA5jE,GAAAxH,EAAA,GAEAmC,EAIA,SAAAsF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAJ7ED,GAEAmpE,EAAA3wE,EAAA,IAeAF,GAAAC,UAAA,S3Bu/WM86E,IACA,SAAU/6E,EAAQC,EAASC,GAEjC,Y4B1hXA,SAAA86E,GAAA16E,GACA+B,EAAAC,QAAAU,QAAA1C,EAAA2C,QAAA,SAAA1C,GACA06E,EAAA36E,EAAA4C,KAAA3C,MAEA8B,EAAAC,QAAAU,QAAA1C,EAAA6C,QAAA,SAAAxC,GACAs6E,EAAA36E,EAAA+C,KAAA1C,MAIA,QAAAs6E,GAAA74E,GACA,GAAAvB,GAAAuB,EAAA2C,KACA3C,GAAA2C,MAAA3C,EAAA6C,OACA7C,EAAA6C,OAAApE,EAGA,QAAAq6E,GAAA56E,GACA+B,EAAAC,QAAAU,QAAA1C,EAAA2C,QAAA,SAAA1C,GACA46E,EAAA76E,EAAA4C,KAAA3C,MAGA8B,EAAAC,QAAAU,QAAA1C,EAAA6C,QAAA,SAAAxC,GACA,GAAA0C,GAAA/C,EAAA+C,KAAA1C,EACA0B,GAAAC,QAAAU,QAAAK,EAAAqpB,OAAAyuD,GACA94E,EAAAC,QAAAyD,IAAA1C,EAAA,MACA83E,EAAA93E,KAKA,QAAA83E,GAAA/4E,GACAA,EAAAwC,GAAAxC,EAAAwC,EAGA,QAAAw2E,GAAA96E,GACA+B,EAAAC,QAAAU,QAAA1C,EAAA2C,QAAA,SAAA1C,GACA86E,EAAA/6E,EAAA4C,KAAA3C,MAGA8B,EAAAC,QAAAU,QAAA1C,EAAA6C,QAAA,SAAAxC,GACA,GAAA0C,GAAA/C,EAAA+C,KAAA1C,EACA0B,GAAAC,QAAAU,QAAAK,EAAAqpB,OAAA2uD,GACAh5E,EAAAC,QAAAyD,IAAA1C,EAAA,MACAg4E,EAAAh4E,KAKA,QAAAg4E,GAAAj5E,GACA,GAAAuC,GAAAvC,EAAAuC,CACAvC,GAAAuC,EAAAvC,EAAAwC,EACAxC,EAAAwC,EAAAD,EAGA,QAAA22E,GAAAh7E,GACA,GAAAm1E,GAAAn1E,EAAAsB,QAAAi2E,QAAA/9D,aACA,QAAA27D,GAAA,OAAAA,GACAuF,EAAA16E,GAIA,QAAAw5E,GAAAx5E,GACA,GAAAm1E,GAAAn1E,EAAAsB,QAAAi2E,QAAA/9D,aACA,QAAA27D,GAAA,OAAAA,GACAyF,EAAA56E,GAGA,OAAAm1E,GAAA,OAAAA,IACA2F,EAAA96E,GACA06E,EAAA16E,IAhFAkH,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAEAhH,EAAAq7E,SACAr7E,EAAA65E,MAEA,IAAApyE,GAAAxH,EAAA,GAEAmC,EAEA,SAAAsF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAF7ED,I5BunXM6zE,IACA,SAAUv7E,EAAQC,EAASC,GAEjC,Y6B1nXA,SAAAs7E,KACA,GAAAC,KACAA,GAAAC,MAAAD,EAAAE,MAAAF,EACAnxE,KAAAsxE,UAAAH,EAkCA,QAAAI,GAAApvD,GACAA,EAAAkvD,MAAAD,MAAAjvD,EAAAivD,MACAjvD,EAAAivD,MAAAC,MAAAlvD,EAAAkvD,YACAlvD,GAAAivD,YACAjvD,GAAAkvD,MAGA,QAAAG,GAAAhyE,EAAAvJ,GACA,aAAAuJ,GAAA,UAAAA,EACA,MAAAvJ,GAtDAiH,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAaAu0E,EAAArxE,UAAA4xE,QAAA,WACA,GAAAN,GAAAnxE,KAAAsxE,UACAnvD,EAAAgvD,EAAAE,KACA,IAAAlvD,IAAAgvD,EAEA,MADAI,GAAApvD,GACAA,GAIA+uD,EAAArxE,UAAA6xE,QAAA,SAAAvvD,GACA,GAAAgvD,GAAAnxE,KAAAsxE,SACAnvD,GAAAkvD,OAAAlvD,EAAAivD,OACAG,EAAApvD,GAEAA,EAAAivD,MAAAD,EAAAC,MACAD,EAAAC,MAAAC,MAAAlvD,EACAgvD,EAAAC,MAAAjvD,EACAA,EAAAkvD,MAAAF,GAGAD,EAAArxE,UAAAsP,SAAA,WAIA,IAHA,GAAAwiE,MACAR,EAAAnxE,KAAAsxE,UACAjB,EAAAc,EAAAE,MACAhB,IAAAc,GACAQ,EAAA91E,KAAAqzC,KAAAyV,UAAA0rB,EAAAmB,IACAnB,IAAAgB,KAEA,WAAAM,EAAAr9D,KAAA,WAgBA3e,EAAAqC,QAAAk5E,EACAx7E,EAAAC,UAAA,S7ByoXMi8E,IACA,SAAUl8E,EAAQC,EAASC,GAEjC,Y8BxrXA,SAAAw5E,GAAAp5E,GACA,GAAA67E,IAAA,EAAAtL,EAAAvrE,kBAAAhF,GAEA0E,EAAA,GAAAnC,GAAAC,OAAoCmpE,UAAA,EAAApoE,YAAA,IAAmCd,YAoBvE,OAlBAV,GAAAC,QAAAU,QAAA1C,EAAA2C,QAAA,SAAA1C,GACAyE,EAAAtC,QAAAnC,GAAkBiD,MAAAjD,IAClByE,EAAA2pE,UAAApuE,EAAA,QAAAD,EAAA4C,KAAA3C,GAAAmF,QAGArD,EAAAC,QAAAU,QAAA1C,EAAA6C,QAAA,SAAAxC,GACAqE,EAAAvB,QAAA9C,EAAAJ,EAAAI,EAAAE,KAA0BF,EAAAG,QAG1BuB,EAAAC,QAAAU,QAAAm5E,EAAA,SAAAC,EAAA71E,GACA,GAAA81E,GAAA,QAAA91E,CACAvB,GAAAtC,QAAA25E,GAAuB32E,KAAA,SACvBrD,EAAAC,QAAAkpC,OAAA4wC,EAAA,SAAApzD,EAAAzoB,GAEA,MADAyE,GAAAvB,QAAAulB,EAAAzoB,GAAuBmQ,MAAA,UACvBnQ,MAIAyE,EAtCAwC,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAEAhH,EAAAy5E,eAEA,IAAAhyE,GAAAxH,EAAA,GAEAmC,EAMA,SAAAsF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAN7ED,GAEAmpE,EAAA3wE,EAAA,KAEA2C,EAAA3C,EAAA,M9B0uXMo8E,IACA,SAAUt8E,EAAQC,EAASC,GAEjC,Y+B7tXA,SAAAsxE,GAAA7pE,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,GAI7E,QAAA40E,GAAAj8E,EAAAk8E,EAAAC,GAMA,IALA,GAIAhwD,GAJAolD,KACApG,EAAA+Q,IAAA/7E,OAAA,GACA6tE,EAAAkO,EAAA,GAGAl8E,EAAA8tE,aAAA,CACA,KAAA3hD,EAAA6hD,EAAAyN,WACAvN,EAAAluE,EAAAk8E,EAAAC,EAAAhwD,EAEA,MAAAA,EAAAg/C,EAAAsQ,WACAvN,EAAAluE,EAAAk8E,EAAAC,EAAAhwD,EAEA,IAAAnsB,EAAA8tE,YACA,OAAA7nE,GAAAi2E,EAAA/7E,OAAA,EAAsC8F,EAAA,IAAOA,EAE7C,GADAkmB,EAAA+vD,EAAAj2E,GAAAw1E,UACA,CACAlK,IAAA9kE,OAAAyhE,EAAAluE,EAAAk8E,EAAAC,EAAAhwD,GAAA,GACA,QAMA,MAAAolD,GAGA,QAAArD,GAAAluE,EAAAk8E,EAAAC,EAAAhwD,EAAAiwD,GACA,GAAA7K,GAAA6K,SAAAvR,EAwBA,OAtBA9oE,GAAAC,QAAAU,QAAA1C,EAAAiE,QAAAkoB,EAAAlsB,GAAA,SAAA8C,GACA,GAAAC,GAAAhD,EAAA+C,QACAs5E,EAAAr8E,EAAA4C,KAAAG,EAAA9C,EAEAm8E,IACA7K,EAAA1rE,MAAoB5F,EAAA8C,EAAA9C,EAAAM,EAAAwC,EAAAxC,IAGpB87E,EAAAjiB,KAAAp3D,EACAs5E,EAAAJ,EAAAC,EAAAE,KAGAt6E,EAAAC,QAAAU,QAAA1C,EAAA6D,SAAAsoB,EAAAlsB,GAAA,SAAA8C,GACA,GAAAC,GAAAhD,EAAA+C,QACAxC,EAAAwC,EAAAxC,EACAoxE,EAAA3xE,EAAA4C,KAAArC,EACAoxE,GAAA,IAAA3uE,EACAs5E,EAAAJ,EAAAC,EAAAxK,KAGA3xE,EAAAkuE,WAAA/hD,EAAAlsB,GAEAsxE,EAGA,QAAAgL,GAAAv8E,EAAAoxE,GACA,GAAAoL,GAAA,GAAAj6E,GAAAC,MACAi6E,EAAA,EACAC,EAAA,CAEA36E,GAAAC,QAAAU,QAAA1C,EAAA2C,QAAA,SAAA1C,GACAu8E,EAAAp6E,QAAAnC,GAAyBA,IAAAk6D,GAAA,EAAAC,IAAA,MAKzBr4D,EAAAC,QAAAU,QAAA1C,EAAA6C,QAAA,SAAAxC,GACA,GAAAs8E,GAAAH,EAAAz5E,KAAA1C,EAAAJ,EAAAI,EAAAE,IAAA,EACAyC,EAAAouE,EAAA/wE,GACAu8E,EAAAD,EAAA35E,CACAw5E,GAAAr5E,QAAA9C,EAAAJ,EAAAI,EAAAE,EAAAq8E,GACAF,EAAAt5E,KAAAC,IAAAq5E,EAAAF,EAAA55E,KAAAvC,EAAAJ,GAAAm6D,KAAAp3D,GACAy5E,EAAAr5E,KAAAC,IAAAo5E,EAAAD,EAAA55E,KAAAvC,EAAAE,GAAA,IAAAyC,IAGA,IAAAk5E,GAAAn6E,EAAAC,QAAAkD,MAAAw3E,EAAAD,EAAA,GAAA94E,IAAA,WACA,UAAAk5E,GAAA76E,UAEAm6E,EAAAM,EAAA,CAMA,OAJA16E,GAAAC,QAAAU,QAAA85E,EAAA75E,QAAA,SAAA1C,GACAq8E,EAAAJ,EAAAC,EAAAK,EAAA55E,KAAA3C,OAGUqB,MAAAk7E,EAAAN,UAAAC,WAGV,QAAAG,GAAAJ,EAAAC,EAAAhwD,GACAA,EAAAiuC,IAEGjuC,EAAA,GAGH+vD,EAAA/vD,EAAAiuC,IAAAjuC,EAAA,GAAAgwD,GAAAT,QAAAvvD,GAFA+vD,IAAA/7E,OAAA,GAAAu7E,QAAAvvD,GAFA+vD,EAAA,GAAAR,QAAAvvD,GAxHAjlB,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAGAhH,EAAAqC,QAAA,SAAAhC,EAAAoxE,GACA,GAAApxE,EAAA8tE,aAAA,EACA,QAEA,IAAAsH,GAAAmH,EAAAv8E,EAAAoxE,GAAA0L,GACAvL,EAAA0K,EAAA7G,EAAA9zE,MAAA8zE,EAAA8G,QAAA9G,EAAA+G,QAGA,OAAAp6E,GAAAC,QAAA+6E,QAAAh7E,EAAAC,QAAA2B,IAAA4tE,EAAA,SAAAlxE,GACA,MAAAL,GAAA6D,SAAAxD,EAAAJ,EAAAI,EAAAE,MACG,GAGH,IAAA6G,GAAAxH,EAAA,GAEAmC,EAAAmvE,EAAA9pE,GAEA7E,EAAA3C,EAAA,KAEAo9E,EAAAp9E,EAAA,KAEAi9E,EAAA3L,EAAA8L,GAIAF,EAAA/6E,EAAAC,QAAA8pE,SAAA,EA0GApsE,GAAAC,UAAA,S/B+vXMs9E,IACA,SAAUv9E,EAAQC,EAASC,GAEjC,YgCh2XA,SAAAsxE,GAAA7pE,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,GAE7E,QAAA61E,GAAAl9E,EAAA4G,GACAA,EAAA,wCACAu2E,EAAAn9E,KAEA4G,EAAA,iCACAw2E,EAAAp9E,KAEA4G,EAAA,0BACA,EAAAy2E,EAAA1D,KAAA35E,KAEA4G,EAAA,mCACA,EAAA02E,EAAA3D,KAAA35E,KAEA4G,EAAA,uBACA,EAAA22E,EAAAv7E,UAAA,EAAAuuE,EAAAjtE,oBAAAtD,MAEA4G,EAAA,wCACA42E,EAAAx9E,KAEA4G,EAAA,mCACA,EAAA2pE,EAAA7qE,kBAAA1F,KAEA4G,EAAA,uCACA,EAAA02E,EAAAG,SAAAz9E,KAEA4G,EAAA,iCACA,EAAA2pE,EAAAhrE,gBAAAvF,KAEA4G,EAAA,kCACA82E,EAAA19E,KAEA4G,EAAA,wCACA+2E,EAAA39E,KAEA4G,EAAA,gCACA,EAAAg3E,EAAAjE,KAAA35E,KAEA4G,EAAA,oCACA,EAAAi3E,EAAA77E,SAAAhC,KAEA4G,EAAA,oCACA,EAAAk3E,EAAA97E,SAAAhC,KAEA4G,EAAA,wBACA,EAAAm3E,EAAA/7E,SAAAhC,KAEA4G,EAAA,iCACAo3E,EAAAh+E,KAEA4G,EAAA,yCACA,EAAAq3E,EAAAjD,QAAAh7E,KAEA4G,EAAA,2BACA,EAAAs3E,EAAAl8E,SAAAhC,KAEA4G,EAAA,mCACAu3E,EAAAn+E,KAEA4G,EAAA,mCACAw3E,EAAAp+E,KAEA4G,EAAA,iCACA,EAAAg3E,EAAApE,MAAAx5E,KAEA4G,EAAA,sCACAy3E,EAAAr+E,KAEA4G,EAAA,uCACA,EAAAq3E,EAAAzE,MAAAx5E,KAEA4G,EAAA,gCACA03E,EAAAt+E,KAEA4G,EAAA,sCACA23E,EAAAv+E,KAEA4G,EAAA,+BACA43E,EAAAx+E,KAEA4G,EAAA,+BACA,EAAAy2E,EAAA7D,MAAAx5E,KAUA,QAAAy+E,GAAAC,EAAAC,GACA58E,EAAAC,QAAAU,QAAAg8E,EAAA/7E,QAAA,SAAA1C,GACA,GAAA2+E,GAAAF,EAAA97E,KAAA3C,GACA4+E,EAAAF,EAAA/7E,KAAA3C,EAEA2+E,KACAA,EAAAv6E,EAAAw6E,EAAAx6E,EACAu6E,EAAAt6E,EAAAu6E,EAAAv6E,EAEAq6E,EAAAz+E,SAAAD,GAAAE,SACAy+E,EAAAn6E,MAAAo6E,EAAAp6E,MACAm6E,EAAAj6E,OAAAk6E,EAAAl6E,WAKA5C,EAAAC,QAAAU,QAAAg8E,EAAA77E,QAAA,SAAAxC,GACA,GAAAu+E,GAAAF,EAAA37E,KAAA1C,GACAw+E,EAAAF,EAAA57E,KAAA1C,EAEAu+E,GAAAxyD,OAAAyyD,EAAAzyD,OACArqB,EAAAC,QAAAyD,IAAAo5E,EAAA,OACAD,EAAAv6E,EAAAw6E,EAAAx6E,EACAu6E,EAAAt6E,EAAAu6E,EAAAv6E,KAIAo6E,EAAAp9E,QAAAmD,MAAAk6E,EAAAr9E,QAAAmD,MACAi6E,EAAAp9E,QAAAqD,OAAAg6E,EAAAr9E,QAAAqD,OAyBA,QAAAm6E,GAAAJ,GACA,GAAA1+E,GAAA,GAAAuC,GAAAC,OAAoCe,YAAA,EAAAooE,UAAA,IACpCrqE,EAAAy9E,EAAAL,EAAAp9E,QAeA,OAbAtB,GAAAyC,SAAAV,EAAAC,QAAA8rB,SAAsCkxD,EAAAC,EAAA39E,EAAA49E,GAAAn9E,EAAAC,QAAAm9E,KAAA79E,EAAA89E,KAEtCr9E,EAAAC,QAAAU,QAAAg8E,EAAA/7E,QAAA,SAAA1C,GACA,GAAA2C,GAAAm8E,EAAAL,EAAA97E,KAAA3C,GACAD,GAAAoC,QAAAnC,EAAA8B,EAAAC,QAAAq9E,SAAAJ,EAAAr8E,EAAA08E,GAAAC,IACAv/E,EAAAquE,UAAApuE,EAAAy+E,EAAArtE,OAAApR,MAGA8B,EAAAC,QAAAU,QAAAg8E,EAAA77E,QAAA,SAAAxC,GACA,GAAA0C,GAAAg8E,EAAAL,EAAA37E,KAAA1C,GACAL,GAAAmD,QAAA9C,EAAA0B,EAAAC,QAAA8rB,SAA0C0xD,EAAAP,EAAAl8E,EAAA08E,GAAA19E,EAAAC,QAAAm9E,KAAAp8E,EAAA28E,OAG1C1/E,EAWA,QAAAm9E,GAAAn9E,GACA,GAAAsB,GAAAtB,EAAAsB,OACAA,GAAAq+E,SAAA,EACA59E,EAAAC,QAAAU,QAAA1C,EAAA6C,QAAA,SAAAxC,GACA,GAAA0C,GAAA/C,EAAA+C,KAAA1C,EACA0C,GAAAE,QAAA,EACA,MAAAF,EAAA68E,SAAApmE,gBACA,OAAAlY,EAAAi2E,SAAA,OAAAj2E,EAAAi2E,QACAx0E,EAAA0B,OAAA1B,EAAA88E,YAEA98E,EAAA4B,QAAA5B,EAAA88E,eAYA,QAAArC,GAAAx9E,GACA+B,EAAAC,QAAAU,QAAA1C,EAAA6C,QAAA,SAAAxC,GACA,GAAA0C,GAAA/C,EAAA+C,KAAA1C,EACA,IAAA0C,EAAA0B,OAAA1B,EAAA4B,OAAA,CACA,GAAA1E,GAAAD,EAAA4C,KAAAvC,EAAAJ,GACAM,EAAAP,EAAA4C,KAAAvC,EAAAE,GACA2C,GAAmBkC,MAAA7E,EAAA6E,KAAAnF,EAAAmF,MAAA,EAAAnF,EAAAmF,KAAA/E,MACnB,EAAAkwE,EAAA3uE,cAAA5B,EAAA,aAAAkD,EAAA,UAKA,QAAAw6E,GAAA19E,GACA,GAAAmF,GAAA,CACApD,GAAAC,QAAAU,QAAA1C,EAAA2C,QAAA,SAAA1C,GACA,GAAA2C,GAAA5C,EAAA4C,KAAA3C,EACA2C,GAAAk9E,YACAl9E,EAAA43E,QAAAx6E,EAAA4C,OAAAk9E,WAAA16E,KACAxC,EAAAuC,QAAAnF,EAAA4C,OAAAm9E,cAAA36E,KACAD,EAAApD,EAAAC,QAAAqB,IAAA8B,EAAAvC,EAAAuC,YAGAnF,EAAAsB,QAAA6D,UAGA,QAAAw4E,GAAA39E,GACA+B,EAAAC,QAAAU,QAAA1C,EAAA2C,QAAA,SAAA1C,GACA,GAAA2C,GAAA5C,EAAA4C,KAAA3C,EACA,gBAAA2C,EAAAT,QACAnC,EAAA+C,KAAAH,EAAAvC,GAAA2/E,UAAAp9E,EAAAwC,KACApF,EAAAkuE,WAAAjuE,MAKA,QAAAq+E,GAAAt+E,GASA,QAAAigF,GAAAn+E,GACA,GAAAuC,GAAAvC,EAAAuC,EACAC,EAAAxC,EAAAwC,EACA/D,EAAAuB,EAAA2C,MACAC,EAAA5C,EAAA6C,MACAmvE,GAAA1wE,KAAAoC,IAAAsuE,EAAAzvE,EAAA9D,EAAA,GACA2/E,EAAA98E,KAAAC,IAAA68E,EAAA77E,EAAA9D,EAAA,GACAwzE,EAAA3wE,KAAAoC,IAAAuuE,EAAAzvE,EAAAI,EAAA,GACAy7E,EAAA/8E,KAAAC,IAAA88E,EAAA77E,EAAAI,EAAA,GAhBA,GAAAovE,GAAA1kC,OAAA87B,kBACAgV,EAAA,EACAnM,EAAA3kC,OAAA87B,kBACAiV,EAAA,EACAC,EAAApgF,EAAAsB,QACA++E,EAAAD,EAAA5I,SAAA,EACA8I,EAAAF,EAAA3I,SAAA,CAaA11E,GAAAC,QAAAU,QAAA1C,EAAA2C,QAAA,SAAA1C,GACAggF,EAAAjgF,EAAA4C,KAAA3C,MAEA8B,EAAAC,QAAAU,QAAA1C,EAAA6C,QAAA,SAAAxC,GACA,GAAA0C,GAAA/C,EAAA+C,KAAA1C,EACA0B,GAAAC,QAAAyD,IAAA1C,EAAA,MACAk9E,EAAAl9E,KAIA+wE,GAAAuM,EACAtM,GAAAuM,EAEAv+E,EAAAC,QAAAU,QAAA1C,EAAA2C,QAAA,SAAA1C,GACA,GAAA2C,GAAA5C,EAAA4C,KAAA3C,EACA2C,GAAAyB,GAAAyvE,EACAlxE,EAAA0B,GAAAyvE,IAGAhyE,EAAAC,QAAAU,QAAA1C,EAAA6C,QAAA,SAAAxC,GACA,GAAA0C,GAAA/C,EAAA+C,KAAA1C,EACA0B,GAAAC,QAAAU,QAAAK,EAAAqpB,OAAA,SAAAjP,GACAA,EAAA9Y,GAAAyvE,EACA32D,EAAA7Y,GAAAyvE,IAEAhyE,EAAAC,QAAAyD,IAAA1C,EAAA,OACAA,EAAAsB,GAAAyvE,GAEA/xE,EAAAC,QAAAyD,IAAA1C,EAAA,OACAA,EAAAuB,GAAAyvE,KAIAqM,EAAA37E,MAAAy7E,EAAApM,EAAAuM,EACAD,EAAAz7E,OAAAw7E,EAAApM,EAAAuM,EAGA,QAAA/B,GAAAv+E,GACA+B,EAAAC,QAAAU,QAAA1C,EAAA6C,QAAA,SAAAxC,GACA,GAGA0rB,GACA8oB,EAJA9xC,EAAA/C,EAAA+C,KAAA1C,GACAkgF,EAAAvgF,EAAA4C,KAAAvC,EAAAJ,GACAugF,EAAAxgF,EAAA4C,KAAAvC,EAAAE,EAGAwC,GAAAqpB,QAKAL,EAAAhpB,EAAAqpB,OAAA,GACAyoB,EAAA9xC,EAAAqpB,OAAArpB,EAAAqpB,OAAAjsB,OAAA,KALA4C,EAAAqpB,UACAL,EAAAy0D,EACA3rC,EAAA0rC,GAKAx9E,EAAAqpB,OAAA0R,SAAA,EAAAyyC,EAAArsE,eAAAq8E,EAAAx0D,IACAhpB,EAAAqpB,OAAAvmB,MAAA,EAAA0qE,EAAArsE,eAAAs8E,EAAA3rC,MAIA,QAAAwpC,GAAAr+E,GACA+B,EAAAC,QAAAU,QAAA1C,EAAA6C,QAAA,SAAAxC,GACA,GAAA0C,GAAA/C,EAAA+C,KAAA1C,EACA,IAAA0B,EAAAC,QAAAyD,IAAA1C,EAAA,KAIA,OAHA,MAAAA,EAAA68E,UAAA,MAAA78E,EAAA68E,WACA78E,EAAA0B,OAAA1B,EAAA88E,aAEA98E,EAAA68E,UACA,QACA78E,EAAAsB,GAAAtB,EAAA0B,MAAA,EAAA1B,EAAA88E,WAAsD,MACtD,SACA98E,EAAAsB,GAAAtB,EAAA0B,MAAA,EAAA1B,EAAA88E,eAMA,QAAArB,GAAAx+E,GACA+B,EAAAC,QAAAU,QAAA1C,EAAA6C,QAAA,SAAAxC,GACA,GAAA0C,GAAA/C,EAAA+C,KAAA1C,EACA0C,GAAA02E,UACA12E,EAAAqpB,OAAA/N,YAKA,QAAA+/D,GAAAp+E,GACA+B,EAAAC,QAAAU,QAAA1C,EAAA2C,QAAA,SAAA1C,GACA,GAAAD,EAAAE,SAAAD,GAAAE,OAAA,CACA,GAAAyC,GAAA5C,EAAA4C,KAAA3C,GACAmc,EAAApc,EAAA4C,OAAAk9E,WACAr3E,EAAAzI,EAAA4C,OAAAm9E,cACA9zE,EAAAjM,EAAA4C,KAAAb,EAAAC,QAAAy+E,KAAA79E,EAAA03E,aACAriE,EAAAjY,EAAA4C,KAAAb,EAAAC,QAAAy+E,KAAA79E,EAAA23E,aAEA33E,GAAA6B,MAAArB,KAAA2B,IAAAkT,EAAA5T,EAAA4H,EAAA5H,GACAzB,EAAA+B,OAAAvB,KAAA2B,IAAA0D,EAAAnE,EAAA8X,EAAA9X,GACA1B,EAAAyB,EAAA4H,EAAA5H,EAAAzB,EAAA6B,MAAA,EACA7B,EAAA0B,EAAA8X,EAAA9X,EAAA1B,EAAA+B,OAAA,KAIA5C,EAAAC,QAAAU,QAAA1C,EAAA2C,QAAA,SAAA1C,GACA,WAAAD,EAAA4C,KAAA3C,GAAAkC,OACAnC,EAAAkuE,WAAAjuE,KAKA,QAAAm9E,GAAAp9E,GACA+B,EAAAC,QAAAU,QAAA1C,EAAA6C,QAAA,SAAAxC,GACA,GAAAA,EAAAJ,IAAAI,EAAAE,EAAA,CACA,GAAAqC,GAAA5C,EAAA4C,KAAAvC,EAAAJ,EACA2C,GAAA89E,YACA99E,EAAA89E,cAEA99E,EAAA89E,UAAA76E,MAA2BxF,IAAA6C,MAAAlD,EAAA+C,KAAA1C,KAC3BL,EAAAmuE,WAAA9tE,MAKA,QAAA29E,GAAAh+E,GACA,GAAA4F,IAAA,EAAA2qE,EAAAvrE,kBAAAhF,EACA+B,GAAAC,QAAAU,QAAAkD,EAAA,SAAAk2E,GACA,GAAA6E,GAAA,CACA5+E,GAAAC,QAAAU,QAAAo5E,EAAA,SAAA77E,EAAAgG,GACA,GAAArD,GAAA5C,EAAA4C,KAAA3C,EACA2C,GAAA0C,MAAAW,EAAA06E,EACA5+E,EAAAC,QAAAU,QAAAE,EAAA89E,UAAA,SAAAE,IACA,EAAArQ,EAAA3uE,cAAA5B,EAAA,YACAyE,MAAAm8E,EAAA19E,MAAAuB,MACAE,OAAAi8E,EAAA19E,MAAAyB,OACAS,KAAAxC,EAAAwC,KACAE,MAAAW,KAAA06E,EACAtgF,EAAAugF,EAAAvgF,EACA6C,MAAA09E,EAAA19E,OACS,eAETN,GAAA89E,cAKA,QAAAvC,GAAAn+E,GACA+B,EAAAC,QAAAU,QAAA1C,EAAA2C,QAAA,SAAA1C,GACA,GAAA2C,GAAA5C,EAAA4C,KAAA3C,EACA,iBAAA2C,EAAAT,MAAA,CACA,GAAA0+E,GAAA7gF,EAAA4C,OAAAvC,EAAAJ,GACAoE,EAAAw8E,EAAAx8E,EAAAw8E,EAAAp8E,MAAA,EACAH,EAAAu8E,EAAAv8E,EACAC,EAAA3B,EAAAyB,IACAG,EAAAq8E,EAAAl8E,OAAA,CACA3E,GAAAmD,QAAAP,EAAAvC,EAAAuC,EAAAM,OACAlD,EAAAkuE,WAAAjuE,GACA2C,EAAAM,MAAAkpB,SAA4B/nB,IAAA,EAAAE,EAAA,EAAAD,IAAAE,IAAkCH,IAAA,EAAAE,EAAA,EAAAD,IAAAE,IAAkCH,IAAAE,EAAAD,MAAqBD,IAAA,EAAAE,EAAA,EAAAD,IAAAE,IAAkCH,IAAA,EAAAE,EAAA,EAAAD,IAAAE,IACvJ5B,EAAAM,MAAAmB,EAAAzB,EAAAyB,EACAzB,EAAAM,MAAAoB,EAAA1B,EAAA0B,KAKA,QAAA26E,GAAA53E,EAAAvF,GACA,MAAAC,GAAAC,QAAA8+E,UAAA/+E,EAAAC,QAAAm9E,KAAA93E,EAAAvF,GAAAstC,QAGA,QAAA2vC,GAAAj9E,GACA,GAAAi/E,KAIA,OAHAh/E,GAAAC,QAAAU,QAAAZ,EAAA,SAAA7B,EAAAuJ,GACAu3E,EAAAv3E,EAAAgQ,eAAAvZ,IAEA8gF,EAGA,QAAAhmB,GAAA/6D,EAAAsrE,GACA,GAAA0V,GAAA1V,KAAA2V,YAAA1Q,EAAA3pE,KAAA2pE,EAAAtpE,MACA+5E,GAAA,oBACA,GAAArC,GAAAqC,EAAA,gCACA,MAAAlC,GAAA9+E,IAEAghF,GAAA,yBACA9D,EAAAyB,EAAAqC,KAEAA,EAAA,gCACAvC,EAAAz+E,EAAA2+E,OAxdAz3E,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAEAhH,EAAAqC,QAAA+4D,CAEA,IAAA3zD,GAAAxH,EAAA,GAEAmC,EAAAmvE,EAAA9pE,GAEAi2E,EAAAz9E,EAAA,KAEAg+E,EAAAh+E,EAAA,KAEAshF,EAAAthF,EAAA,KAEA29E,EAAArM,EAAAgQ,GAEA3Q,EAAA3wE,EAAA,KAEAuhF,EAAAvhF,EAAA,KAEAi+E,EAAA3M,EAAAiQ,GAEA7D,EAAA19E,EAAA,KAEAwhF,EAAAxhF,EAAA,KAEAk+E,EAAA5M,EAAAkQ,GAEAnD,EAAAr+E,EAAA,KAEAyhF,EAAAzhF,EAAA,KAEAm+E,EAAA7M,EAAAmQ,GAEAC,EAAA1hF,EAAA,KAEAs+E,EAAAhN,EAAAoQ,GAEA/+E,EAAA3C,EAAA,KA6HAs/E,GAAA,mDACAF,GAAqBW,QAAA,GAAA4B,QAAA,GAAAC,QAAA,GAAAjK,QAAA,MACrB6H,GAAA,wCACAE,GAAA,kBACAC,GAAoB96E,MAAA,EAAAE,OAAA,GACpB86E,GAAA,kDACAD,GACAv8E,OAAA,EACAD,OAAA,EACAyB,MAAA,EACAE,OAAA,EACAk7E,YAAA,GACAD,SAAA,KAEAF,GAAA,WA0SAhgF,GAAAC,UAAA,ShCg5XM8hF,IACA,SAAU/hF,EAAQC,EAASC,GAEjC,YiCj2YA,SAAAorE,GAAAhrE,EAAAgjC,EAAAsyC,EAAAtyE,EAAA2B,EAAA+8E,EAAAzhF,GACA,GAAAC,GAAAF,EAAAE,SAAAD,EACA,KAAAC,EAAAC,OAIA,YAHAF,IAAA+iC,GACAhjC,EAAAmD,QAAA6/B,EAAA/iC,GAA0B+C,OAAA,EAAAC,OAAAqyE,IAK1B,IAAApgE,IAAA,EAAAq7D,EAAArqE,eAAAlG,EAAA,OACAk+D,GAAA,EAAAqS,EAAArqE,eAAAlG,EAAA,OACAkD,EAAAlD,EAAA4C,KAAA3C,EAEAD,GAAAquE,UAAAn5D,EAAAjV,GACAiD,EAAA48E,UAAA5qE,EACAlV,EAAAquE,UAAAnQ,EAAAj+D,GACAiD,EAAA68E,aAAA7hB,EAEAn8D,EAAAC,QAAAU,QAAAxC,EAAA,SAAAwqC,GACAsgC,EAAAhrE,EAAAgjC,EAAAsyC,EAAAtyE,EAAA2B,EAAA+8E,EAAAh3C,EAEA,IAAAi3C,GAAA3hF,EAAA4C,KAAA8nC,GACAk3C,EAAAD,EAAA7B,UAAA6B,EAAA7B,UAAAp1C,EACAm3C,EAAAF,EAAA5B,aAAA4B,EAAA5B,aAAAr1C,EACAo3C,EAAAH,EAAA7B,UAAA98E,EAAA,EAAAA,EACAC,EAAA2+E,IAAAC,EAAA,EAAAl9E,EAAA+8E,EAAAzhF,GAAA,CAEAD,GAAAmD,QAAA+R,EAAA0sE,GACA5+E,OAAA8+E,EACA7+E,SACA8+E,aAAA,IAGA/hF,EAAAmD,QAAA0+E,EAAA3jB,GACAl7D,OAAA8+E,EACA7+E,SACA8+E,aAAA,MAIA/hF,EAAAqR,OAAApR,IACAD,EAAAmD,QAAA6/B,EAAA9tB,GAA0BlS,OAAA,EAAAC,OAAA0B,EAAA+8E,EAAAzhF,KAI1B,QAAA+hF,GAAAhiF,GACA,MAAA+B,GAAAC,QAAAkpC,OAAAlrC,EAAA6C,QAAA,SAAAmuE,EAAA3wE,GACA,MAAA2wE,GAAAhxE,EAAA+C,KAAA1C,GAAA2C,QACG,GAGH,QAAAi/E,GAAAjiF,GAEA,QAAAgrE,GAAA/qE,EAAA42B,GACA,GAAA32B,GAAAF,EAAAE,SAAAD,EACAC,MAAAC,QACA4B,EAAAC,QAAAU,QAAAxC,EAAA,SAAAwqC,GACAsgC,EAAAtgC,EAAA7T,EAAA,KAGA6qD,EAAAzhF,GAAA42B,EARA,GAAA6qD,KAaA,OAHA3/E,GAAAC,QAAAU,QAAA1C,EAAAE,WAAA,SAAAD,GACA+qE,EAAA/qE,EAAA,KAEAyhF,EAGA,QAAAjE,GAAAz9E,GACA,GAAAogF,GAAApgF,EAAAsB,OACAtB,GAAAkuE,WAAAkS,EAAA8B,mBACA9B,GAAA8B,YACAngF,EAAAC,QAAAU,QAAA1C,EAAA6C,QAAA,SAAAxC,GACAL,EAAA+C,KAAA1C,GACA0hF,aACA/hF,EAAAmuE,WAAA9tE,KA4BA,QAAAs5E,GAAA35E,GACA,GAAAgjC,IAAA,EAAAutC,EAAA3uE,cAAA5B,EAAA,UAAkD,SAClD0hF,EAAAO,EAAAjiF,GACA2E,EAAA5C,EAAAC,QAAAqB,IAAAtB,EAAAC,QAAAqpC,OAAAq2C,IAAA,EACApM,EAAA,EAAA3wE,EAAA,CAEA3E,GAAAsB,QAAA4gF,YAAAl/C,EAGAjhC,EAAAC,QAAAU,QAAA1C,EAAA6C,QAAA,SAAAxC,GACAL,EAAA+C,KAAA1C,GAAA4C,QAAAqyE,GAIA,IAAAtyE,GAAAg/E,EAAAhiF,GAAA,CAGA+B,GAAAC,QAAAU,QAAA1C,EAAAE,WAAA,SAAAwqC,GACAsgC,EAAAhrE,EAAAgjC,EAAAsyC,EAAAtyE,EAAA2B,EAAA+8E,EAAAh3C,KAKA1qC,EAAAsB,QAAAyE,eAAAuvE,EA5IApuE,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAEAhH,EAAA89E,UACA99E,EAAAg6E,KAEA,IAAAvyE,GAAAxH,EAAA,GAEAmC,EAIA,SAAAsF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAJ7ED,GAEAmpE,EAAA3wE,EAAA,MjCy/YMuiF,IACA,SAAUziF,EAAQC,EAASC,GAEjC,YkCx/YA,SAAAwiF,GAAApiF,EAAAK,GACA,GAAAJ,GAAAI,EAAAJ,EACAoiF,EAAAriF,EAAA4C,KAAA3C,GAAAmF,KACA7E,EAAAF,EAAAE,EACA+hF,EAAAtiF,EAAA4C,KAAArC,GAAA6E,KACA5E,EAAAH,EAAAG,KACA+hF,EAAAviF,EAAA+C,KAAA1C,GACA2/E,EAAAuC,EAAAvC,SAEA,IAAAsC,IAAAD,EAAA,GAEAriF,EAAAmuE,WAAA9tE,EAEA,IAAA8B,GAAAL,EAAAmE,CACA,KAAAA,EAAA,IAAAo8E,EAAsBA,EAAAC,IAAer8E,IAAAo8E,EACrCE,EAAAn2D,UACAtqB,GACA2C,MAAA,EACAE,OAAA,EACA49E,YACApV,QAAA9sE,EACA+E,KAAAi9E,GAEAlgF,GAAA,EAAAouE,EAAA3uE,cAAA5B,EAAA,OAAA8B,EAAA,MACAugF,IAAArC,IACAl+E,EAAA2C,MAAA89E,EAAA99E,MACA3C,EAAA6C,OAAA49E,EAAA59E,OACA7C,EAAAK,MAAA,aACAL,EAAA89E,SAAA2C,EAAA3C,UAEA5/E,EAAAmD,QAAAlD,EAAAkC,GAAyBa,OAAAu/E,EAAAv/E,QAA2BxC,GACpD,IAAAyF,GACAjG,EAAAsB,QAAAkhF,YAAA38E,KAAA1D,GAEAlC,EAAAkC,CAGAnC,GAAAmD,QAAAlD,EAAAM,GAAmByC,OAAAu/E,EAAAv/E,QAA2BxC,IAmB9C,QAAAm5E,GAAA35E,GACAA,EAAAsB,QAAAkhF,eACAzgF,EAAAC,QAAAU,QAAA1C,EAAA6C,QAAA,SAAAE,GACAq/E,EAAApiF,EAAA+C,KAIA,QAAAy2E,GAAAx5E,GACA+B,EAAAC,QAAAU,QAAA1C,EAAAsB,QAAAkhF,YAAA,SAAAviF,GACA,GAEAM,GAFAqC,EAAA5C,EAAA4C,KAAA3C,GACAwiF,EAAA7/E,EAAA2/E,SAGA,KADAviF,EAAAmD,QAAAP,EAAAuqE,QAAAsV,GACA7/E,EAAAT,OACA5B,EAAAP,EAAAwuE,WAAAvuE,GAAA,GACAD,EAAAkuE,WAAAjuE,GACAwiF,EAAAr2D,OAAAvmB,MAA6BxB,EAAAzB,EAAAyB,EAAAC,EAAA1B,EAAA0B,IAC7B,eAAA1B,EAAAT,QACAsgF,EAAAp+E,EAAAzB,EAAAyB,EACAo+E,EAAAn+E,EAAA1B,EAAA0B,EACAm+E,EAAAh+E,MAAA7B,EAAA6B,MACAg+E,EAAA99E,OAAA/B,EAAA+B,QAEA1E,EAAAM,EACAqC,EAAA5C,EAAA4C,KAAA3C,KA9FAiH,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAEAhH,EAAAg6E,MACAh6E,EAAA65E,MAEA,IAAApyE,GAAAxH,EAAA,GAEAmC,EAIA,SAAAsF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAJ7ED,GAEAmpE,EAAA3wE,EAAA,MlComZM8iF,IACA,SAAUhjF,EAAQC,EAASC,GAEjC,YmCtmZA,SAAA+iF,GAAA3iF,EAAA4iF,EAAA58E,GACA,GACA68E,GADAzI,IAGAr4E,GAAAC,QAAAU,QAAAsD,EAAA,SAAA/F,GAIA,IAHA,GACAoR,GACAyxE,EAFAp4C,EAAA1qC,EAAAqR,OAAApR,GAGAyqC,GAAA,CASA,GARAr5B,EAAArR,EAAAqR,OAAAq5B,GACAr5B,GACAyxE,EAAA1I,EAAA/oE,GACA+oE,EAAA/oE,GAAAq5B,IAEAo4C,EAAAD,EACAA,EAAAn4C,GAEAo4C,OAAAp4C,EAEA,WADAk4C,GAAAz/E,QAAA2/E,EAAAp4C,EAGAA,GAAAr5B,KAhCAnK,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAEAhH,EAAAqC,QAAA2gF,CAEA,IAAAv7E,GAAAxH,EAAA,GAEAmC,EAEA,SAAAsF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAF7ED,EAqDA1H,GAAAC,UAAA,SnCwnZMojF,IACA,SAAUrjF,EAAQC,EAASC,GAEjC,YoC5qZA,SAAAojF,GAAAhjF,EAAAijF,GACA,MAAAlhF,GAAAC,QAAA2B,IAAAs/E,EAAA,SAAAhjF,GACA,GAAAovE,GAAArvE,EAAAiE,QAAAhE,EACA,IAAAovE,EAAAlvE,OAEK,CACL,GAAAqG,GAAAzE,EAAAC,QAAAkpC,OAAAmkC,EAAA,SAAA2B,EAAA3wE,GACA,GAAA0C,GAAA/C,EAAA+C,KAAA1C,GACA6iF,EAAAljF,EAAA4C,KAAAvC,EAAAJ,EACA,QACAs6C,IAAAy2B,EAAAz2B,IAAAx3C,EAAAC,OAAAkgF,EAAA59E,MACAtC,OAAAguE,EAAAhuE,OAAAD,EAAAC,UAEUu3C,IAAA,EAAAv3C,OAAA,GAEV,QACA/C,IACA+iF,WAAAx8E,EAAA+zC,IAAA/zC,EAAAxD,OACAA,OAAAwD,EAAAxD,QAdA,OAAc/C,OAfdiH,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAEAhH,EAAAqC,QAAAghF,CAEA,IAAA57E,GAAAxH,EAAA,GAEAmC,EAEA,SAAAsF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAF7ED,EA2BA1H,GAAAC,UAAA,SpC8rZMwjF,IACA,SAAUzjF,EAAQC,EAASC,GAEjC,YqCttZA,SAAAwjF,GAAApjF,GAEA,IADA,GAAAC,GACAD,EAAAkC,QAAAjC,EAAA8B,EAAAC,QAAAC,SAAA,YACA,MAAAhC,GAiCA,QAAAojF,GAAArjF,EAAAoF,EAAAk+E,GACA,GAAAtgD,GAAAogD,EAAApjF,GACAwG,EAAA,GAAAjE,GAAAC,OAAyCmpE,UAAA,IAAiBlpE,UAAYugC,SAAa4qC,oBAAA,SAAA3tE,GACnF,MAAAD,GAAA4C,KAAA3C,IA4BA,OAzBA8B,GAAAC,QAAAU,QAAA1C,EAAA2C,QAAA,SAAA1C,GACA,GAAA2C,GAAA5C,EAAA4C,KAAA3C,GACAoR,EAAArR,EAAAqR,OAAApR,IAEA2C,EAAAwC,UAAAxC,EAAA43E,SAAAp1E,MAAAxC,EAAAuC,WACAqB,EAAApE,QAAAnC,GACAuG,EAAA6nE,UAAApuE,EAAAoR,GAAA2xB,GAGAjhC,EAAAC,QAAAU,QAAA1C,EAAAsjF,GAAArjF,GAAA,SAAAI,GACA,GAAAqoB,GAAAroB,EAAAJ,MAAAI,EAAAE,EAAAF,EAAAJ,EACA8C,EAAAyD,EAAAzD,KAAA2lB,EAAAzoB,GACA+C,EAAAjB,EAAAC,QAAAqD,YAAAtC,GAAA,EAAAA,EAAAC,MACAwD,GAAArD,QAAAulB,EAAAzoB,GAA8B+C,OAAAhD,EAAA+C,KAAA1C,GAAA2C,aAG9BjB,EAAAC,QAAAyD,IAAA7C,EAAA,YACA4D,EAAApE,QAAAnC,GACAq6E,WAAA13E,EAAA03E,WAAAl1E,GACAm1E,YAAA33E,EAAA23E,YAAAn1E,QAMAoB,EAhFAU,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAEAhH,EAAAqC,QAAAqhF,CAEA,IAAAj8E,GAAAxH,EAAA,GAEAmC,EAIA,SAAAsF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAJ7ED,GAEA7E,EAAA3C,EAAA,IAyEAF,GAAAC,UAAA,SrC0uZM4jF,IACA,SAAU7jF,EAAQC,EAASC,GAEjC,YsCpzZA,SAAA4jF,GAAAxjF,EAAAyjF,EAAAC,GAeA,IAXA,GAAAC,GAAA5hF,EAAAC,QAAA8B,UAAA4/E,EAAA3hF,EAAAC,QAAA2B,IAAA+/E,EAAA,SAAAzjF,EAAAgG,GACA,MAAAA,MAEA29E,EAAA7hF,EAAAC,QAAA+6E,QAAAh7E,EAAAC,QAAA2B,IAAA8/E,EAAA,SAAAxjF,GACA,MAAA8B,GAAAC,QAAA6hF,MAAA7jF,EAAA6D,SAAA5D,IAAA0D,IAAA,SAAAtD,GACA,OAAcyjF,IAAAH,EAAAtjF,EAAAE,GAAAyC,OAAAhD,EAAA+C,KAAA1C,GAAA2C,UACT+gF,OAAA,OAAAp9E,WACF,GAGHq9E,EAAA,EACAA,EAAAN,EAAAvjF,QACA6jF,IAAA,CACG,IAAAC,GAAA,EAAAD,EAAA,CACHA,IAAA,CACA,IAAA/hD,GAAAlgC,EAAAC,QAAA2B,IAAA,GAAAic,OAAAqkE,GAAA,WACA,WAIAC,EAAA,CAeA,OAdAniF,GAAAC,QAAAU,QAAAkhF,EAAAlhF,QAAA,SAAAypB,GACA,GAAAsY,GAAAtY,EAAA23D,IAAAE,CACA/hD,GAAAwC,IAAAtY,EAAAnpB,MAEA,KADA,GAAAmhF,GAAA,EACA1/C,EAAA,GACAA,EAAA,IACA0/C,GAAAliD,EAAAwC,EAAA,IAEAA,IAAA,KACAxC,EAAAwC,IAAAtY,EAAAnpB,MAEAkhF,IAAA/3D,EAAAnpB,OAAAmhF,KAGAD,EAmBA,QAAAE,GAAApkF,EAAAiF,GAEA,OADAi/E,GAAA,EACAj+E,EAAA,EAAiBA,EAAAhB,EAAA9E,SAAqB8F,EACtCi+E,GAAAV,EAAAxjF,EAAAiF,EAAAgB,EAAA,GAAAhB,EAAAgB,GAEA,OAAAi+E,GA1EAh9E,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAEAhH,EAAAqC,QAAAoiF,CAEA,IAAAh9E,GAAAxH,EAAA,GAEAmC,EAEA,SAAAsF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAF7ED,EAqEA1H,GAAAC,UAAA,StCs0ZM0kF,IACA,SAAU3kF,EAAQC,EAASC,GAEjC,YuCp3ZA,SAAAsxE,GAAA7pE,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,GAE7E,QAAAi9E,GAAAtkF,EAAAukF,EAAAjB,GACA,MAAAvhF,GAAAC,QAAA2B,IAAA4gF,EAAA,SAAAn/E,GACA,SAAAo/E,EAAAxiF,SAAAhC,EAAAoF,EAAAk+E,KAIA,QAAAmB,GAAAC,EAAAC,GACA,GAAA/B,GAAA,GAAArgF,GAAAC,KACAT,GAAAC,QAAAU,QAAAgiF,EAAA,SAAAE,GACA,GAAA5hD,GAAA4hD,EAAAtjF,QAAA0hC,KACA6hD,GAAA,EAAAC,EAAA9iF,SAAA4iF,EAAA5hD,EAAA4/C,EAAA+B,EACA5iF,GAAAC,QAAAU,QAAAmiF,EAAA7+E,GAAA,SAAA/F,EAAAgG,GACA2+E,EAAAhiF,KAAA3C,GAAAqF,MAAAW,KAEA,EAAA8+E,EAAA/iF,SAAA4iF,EAAAhC,EAAAiC,EAAA7+E,MAIA,QAAAg/E,GAAAhlF,EAAAiF,GACAlD,EAAAC,QAAAU,QAAAuC,EAAA,SAAA62E,GACA/5E,EAAAC,QAAAU,QAAAo5E,EAAA,SAAA77E,EAAAgG,GACAjG,EAAA4C,KAAA3C,GAAAqF,MAAAW,MAoBA,QAAAX,GAAAtF,GACA,GAAAilF,IAAA,EAAA1U,EAAAprE,SAAAnF,GACAklF,EAAAZ,EAAAtkF,EAAA+B,EAAAC,QAAAkD,MAAA,EAAA+/E,EAAA,cACAE,EAAAb,EAAAtkF,EAAA+B,EAAAC,QAAAkD,MAAA+/E,EAAA,qBAEAhgF,GAAA,EAAAmgF,EAAApjF,SAAAhC,EACAglF,GAAAhlF,EAAAiF,EAKA,QAFA+uD,GADAqxB,EAAAj2C,OAAA87B,kBAGAjlE,EAAA,EAAAq/E,EAAA,EAA+BA,EAAA,IAAcr/E,IAAAq/E,EAAA,CAC7Cb,EAAAx+E,EAAA,EAAAi/E,EAAAC,EAAAl/E,EAAA,MAEAhB,GAAA,EAAAsrE,EAAAvrE,kBAAAhF,EACA,IAAAkkF,IAAA,EAAAqB,EAAAvjF,SAAAhC,EAAAiF,EACAi/E,GAAAmB,IACAC,EAAA,EACAtxB,EAAAjyD,EAAAC,QAAAwjF,UAAAvgF,GACAogF,EAAAnB,GAIAc,EAAAhlF,EAAAg0D,GAnGA9sD,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAEAhH,EAAAqC,QAAAsD,CAEA,IAAA8B,GAAAxH,EAAA,GAEAmC,EAAAmvE,EAAA9pE,GAEAq+E,EAAA7lF,EAAA,KAEAwlF,EAAAlU,EAAAuU,GAEAC,EAAA9lF,EAAA,KAEA2lF,EAAArU,EAAAwU,GAEAC,EAAA/lF,EAAA,KAEAklF,EAAA5T,EAAAyU,GAEAC,EAAAhmF,EAAA,KAEA4kF,EAAAtT,EAAA0U,GAEAC,EAAAjmF,EAAA,KAEAmlF,EAAA7T,EAAA2U,GAEAtjF,EAAA3C,EAAA,KAEA2wE,EAAA3wE,EAAA,IAsEAF,GAAAC,UAAA,SvC45ZMmmF,IACA,SAAUpmF,EAAQC,EAASC,GAEjC,YwC9+ZA,SAAAmmF,GAAA/lF,GAYA,QAAAgrE,GAAA/qE,GACA,IAAA8B,EAAAC,QAAAyD,IAAAwlE,EAAAhrE,GAAA,CACAgrE,EAAAhrE,IAAA,CACA,IAAA2C,GAAA5C,EAAA4C,KAAA3C,EACA2F,GAAAhD,EAAAwC,MAAAS,KAAA5F,GACA8B,EAAAC,QAAAU,QAAA1C,EAAAwuE,WAAAvuE,GAAA+qE,IAhBA,GAAAC,MACA+a,EAAAjkF,EAAAC,QAAAwR,OAAAxT,EAAA2C,QAAA,SAAA1C,GACA,OAAAD,EAAAE,SAAAD,GAAAE,SAEAgF,EAAApD,EAAAC,QAAAqB,IAAAtB,EAAAC,QAAA2B,IAAAqiF,EAAA,SAAA/lF,GACA,MAAAD,GAAA4C,KAAA3C,GAAAmF,QAEAQ,EAAA7D,EAAAC,QAAA2B,IAAA5B,EAAAC,QAAAkD,MAAAC,EAAA,cACA,WAWA8gF,EAAAlkF,EAAAC,QAAA+hF,OAAAiC,EAAA,SAAA/lF,GACA,MAAAD,GAAA4C,KAAA3C,GAAAmF,MAIA,OAFArD,GAAAC,QAAAU,QAAAujF,EAAAjb,GAEAplE,EA/CAsB,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAEAhH,EAAAqC,QAAA+jF,CAEA,IAAA3+E,GAAAxH,EAAA,GAEAmC,EAEA,SAAAsF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAF7ED,EA0CA1H,GAAAC,UAAA,SxC2gaMumF,IACA,SAAUxmF,EAAQC,EAASC,GAEjC,YyCpjaA,SAAAumF,GAAAC,GAuBA,IAtBA,GAAA1qC,MAsBA0qC,EAAAjmF,QAAA,CACA,GAAAgsB,GAAAi6D,EAAA54D,KACAkuB,GAAA71C,KAAAsmB,GACApqB,EAAAC,QAAAU,QAAAypB,EAAA,GAAA9N,UAvBA,SAAAizD,GACA,gBAAA+K,GACAA,EAAAzgC,SAGA75C,EAAAC,QAAAqD,YAAAg3E,EAAA2G,aAAAjhF,EAAAC,QAAAqD,YAAAisE,EAAA0R,aAAA3G,EAAA2G,YAAA1R,EAAA0R,aACAqD,EAAA/U,EAAA+K,KAiBAlwD,IACApqB,EAAAC,QAAAU,QAAAypB,EAAAiuC,IAbA,SAAAkX,GACA,gBAAAK,GACAA,EAAA,GAAA9rE,KAAAyrE,GACA,KAAAK,EAAA2U,UACAF,EAAAvgF,KAAA8rE,KASAxlD,IAGA,MAAApqB,GAAAC,QAAA6hF,MAAAnoC,GAAAloC,OAAA,SAAA2Y,GACA,OAAAA,EAAAyvB,SACGj4C,IAAA,SAAAwoB,GACH,MAAApqB,GAAAC,QAAAm9E,KAAAhzD,GAAA,mCACGxlB,QAGH,QAAA0/E,GAAAp7E,EAAAC,GACA,GAAAqvC,GAAA,EACAv3C,EAAA,CAEAiI,GAAAjI,SACAu3C,GAAAtvC,EAAA+3E,WAAA/3E,EAAAjI,OACAA,GAAAiI,EAAAjI,QAGAkI,EAAAlI,SACAu3C,GAAArvC,EAAA83E,WAAA93E,EAAAlI,OACAA,GAAAkI,EAAAlI,QAGAiI,EAAAjF,GAAAkF,EAAAlF,GAAAyG,OAAAxB,EAAAjF,IACAiF,EAAA+3E,WAAAzoC,EAAAv3C,EACAiI,EAAAjI,SACAiI,EAAAhF,EAAA7C,KAAAoC,IAAA0F,EAAAjF,EAAAgF,EAAAhF,GACAiF,EAAA0wC,QAAA,EA4BA,QAAA2qC,GAAA7qC,EAAAknC,GACA,GAAA4D,KA4BA,OA3BAzkF,GAAAC,QAAAU,QAAAg5C,EAAA,SAAAvvB,EAAAlmB,GACA,GAAA8mE,GAAAyZ,EAAAr6D,EAAAlsB,IACAqmF,SAAA,EACAnsB,MACAC,OACAp0D,IAAAmmB,EAAAlsB,GACAgG,IAEAlE,GAAAC,QAAAqD,YAAA8mB,EAAA62D,cACAjW,EAAAiW,WAAA72D,EAAA62D,WACAjW,EAAA/pE,OAAAmpB,EAAAnpB,UAIAjB,EAAAC,QAAAU,QAAAkgF,EAAA//E,QAAA,SAAAxC,GACA,GAAAomF,GAAAD,EAAAnmF,EAAAJ,GACAymF,EAAAF,EAAAnmF,EAAAE,EACAwB,GAAAC,QAAAqD,YAAAohF,IAAA1kF,EAAAC,QAAAqD,YAAAqhF,KACAA,EAAAJ,WACAG,EAAArsB,IAAAv0D,KAAA2gF,EAAAnmF,EAAAE,OAQA4lF,EAJApkF,EAAAC,QAAAwR,OAAAgzE,EAAA,SAAAr6D,GACA,OAAAA,EAAAm6D,YAxHAp/E,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAEAhH,EAAAqC,QAAAukF,CAEA,IAAAn/E,GAAAxH,EAAA,GAEAmC,EAEA,SAAAsF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAF7ED,EAsHA1H,GAAAC,UAAA,SzCskaMgnF,IACA,SAAUjnF,EAAQC,EAASC,GAEjC,Y0CjraA,SAAAsxE,GAAA7pE,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,GAE7E,QAAAu/E,GAAAlrC,EAAAmrC,GACA9kF,EAAAC,QAAAU,QAAAg5C,EAAA,SAAAvvB,GACAA,EAAAnmB,GAAAjE,EAAAC,QAAA+6E,QAAA5wD,EAAAnmB,GAAArC,IAAA,SAAA1D,GACA,MAAA4mF,GAAA5mF,GACA4mF,EAAA5mF,GAAA+F,GAEA/F,KACK,KAIL,QAAA6mF,GAAA77E,EAAAuhB,GACAzqB,EAAAC,QAAAqD,YAAA4F,EAAA+3E,aAIA/3E,EAAA+3E,WAAAx2D,EAAAw2D,WACA/3E,EAAAjI,OAAAwpB,EAAAxpB,SAJAiI,EAAA+3E,YAAA/3E,EAAA+3E,WAAA/3E,EAAAjI,OAAAwpB,EAAAw2D,WAAAx2D,EAAAxpB,SAAAiI,EAAAjI,OAAAwpB,EAAAxpB,QACAiI,EAAAjI,QAAAwpB,EAAAxpB,QAOA,QAAA+jF,GAAA/mF,EAAAC,EAAA2iF,EAAA+B,GACA,GAAA1B,GAAAjjF,EAAAE,SAAAD,GACA2C,EAAA5C,EAAA4C,KAAA3C,GACAmmC,EAAAxjC,IAAA03E,eAAAzP,GACAjnC,EAAAhhC,IAAA23E,gBAAA1P,GACAgc,IAEAzgD,KACA68C,EAAAlhF,EAAAC,QAAAwR,OAAAyvE,EAAA,SAAA1iF,GACA,MAAAA,KAAA6lC,GAAA7lC,IAAAqjC,IAIA,IAAAojD,IAAA,EAAAC,EAAAjlF,SAAAhC,EAAAijF,EACAlhF,GAAAC,QAAAU,QAAAskF,EAAA,SAAA76D,GACA,GAAAnsB,EAAAE,SAAAisB,EAAAlsB,GAAAE,OAAA,CACA,GAAA+mF,GAAAH,EAAA/mF,EAAAmsB,EAAAlsB,EAAA2iF,EAAA+B,EACAkC,GAAA16D,EAAAlsB,GAAAinF,EACAnlF,EAAAC,QAAAyD,IAAAyhF,EAAA,eACAJ,EAAA36D,EAAA+6D,KAKA,IAAAxrC,IAAA,EAAAyrC,EAAAnlF,SAAAglF,EAAApE,EACAgE,GAAAlrC,EAAAmrC,EAEA,IAAArgF,IAAA,EAAA4gF,EAAAplF,SAAA05C,EAAAipC,EAEA,IAAAv+C,IACA5/B,EAAAR,GAAAjE,EAAAC,QAAA+6E,SAAA32C,EAAA5/B,EAAAR,GAAA49B,IAAA,GACA5jC,EAAAsuE,aAAAloC,GAAAjmC,QAAA,CACA,GAAAknF,GAAArnF,EAAA4C,KAAA5C,EAAAsuE,aAAAloC,GAAA,IACAkhD,EAAAtnF,EAAA4C,KAAA5C,EAAAsuE,aAAA1qC,GAAA,GACA7hC,GAAAC,QAAAyD,IAAAe,EAAA,gBACAA,EAAAw8E,WAAA,EACAx8E,EAAAxD,OAAA,GAEAwD,EAAAw8E,YAAAx8E,EAAAw8E,WAAAx8E,EAAAxD,OAAAqkF,EAAA/hF,MAAAgiF,EAAAhiF,QAAAkB,EAAAxD,OAAA,GACAwD,EAAAxD,QAAA,EAIA,MAAAwD,GAvFAU,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAEAhH,EAAAqC,QAAA+kF,CAEA,IAAA3/E,GAAAxH,EAAA,GAEAmC,EAAAmvE,EAAA9pE,GAEAmgF,EAAA3nF,EAAA,KAEAqnF,EAAA/V,EAAAqW,GAEAC,EAAA5nF,EAAA,KAEAunF,EAAAjW,EAAAsW,GAEAC,EAAA7nF,EAAA,KAEAwnF,EAAAlW,EAAAuW,EAsEA/nF,GAAAC,UAAA,S1C6saM+nF,IACA,SAAUhoF,EAAQC,EAASC,GAEjC,Y2C5xaA,SAAA+nF,GAAA3hF,EAAA4hF,EAAAnjD,GAEA,IADA,GAAAg8C,GACAmH,EAAAznF,SAAAsgF,EAAA1+E,EAAAC,QAAAy+E,KAAAmH,IAAA3hF,GAAAw+B,GACAmjD,EAAAp6D,MACAxnB,EAAAH,KAAA46E,EAAAz6E,IACAy+B,GAEA,OAAAA,GAGA,QAAAojD,GAAAC,GACA,gBAAArB,EAAAC,GACA,MAAAD,GAAAzD,WAAA0D,EAAA1D,YACA,EACKyD,EAAAzD,WAAA0D,EAAA1D,WACL,EAGA8E,EAAApB,EAAAzgF,EAAAwgF,EAAAxgF,EAAAwgF,EAAAxgF,EAAAygF,EAAAzgF,GAIA,QAAAgmB,GAAAyvB,EAAAipC,GACA,GAAAoD,IAAA,EAAAxX,EAAAlqE,WAAAq1C,EAAA,SAAAvvB,GACA,MAAApqB,GAAAC,QAAAyD,IAAA0mB,EAAA,gBAEA67D,EAAAD,EAAAthF,IACAmhF,EAAA7lF,EAAAC,QAAA+hF,OAAAgE,EAAArhF,IAAA,SAAAylB,GACA,OAAAA,EAAAlmB,IAEAD,KACAu0C,EAAA,EACAv3C,EAAA,EACAilF,EAAA,CAEAD,GAAA/7D,KAAA47D,IAAAlD,IAEAsD,EAAAN,EAAA3hF,EAAA4hF,EAAAK,GAEAlmF,EAAAC,QAAAU,QAAAslF,EAAA,SAAA77D,GACA87D,GAAA97D,EAAAnmB,GAAA7F,OACA6F,EAAAH,KAAAsmB,EAAAnmB,IACAu0C,GAAApuB,EAAA62D,WAAA72D,EAAAnpB,OACAA,GAAAmpB,EAAAnpB,OACAilF,EAAAN,EAAA3hF,EAAA4hF,EAAAK,IAGA,IAAAzhF,IAAgBR,GAAAjE,EAAAC,QAAA+6E,QAAA/2E,GAAA,GAKhB,OAJAhD,KACAwD,EAAAw8E,WAAAzoC,EAAAv3C,EACAwD,EAAAxD,UAEAwD,EAjEAU,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAEAhH,EAAAqC,QAAAiqB,CAEA,IAAA7kB,GAAAxH,EAAA,GAEAmC,EAIA,SAAAsF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAJ7ED,GAEAmpE,EAAA3wE,EAAA,IA0DAF,GAAAC,UAAA,S3CgzaMuoF,IACA,SAAUxoF,EAAQC,EAASC,GAEjC,Y4Cz2aA,SAAAuoF,GAAAnoF,EAAAooF,EAAAnoF,EAAAM,GACA,GAIA8Q,GACAo3B,EALA4/C,KACAC,KACAC,EAAAnlF,KAAAoC,IAAA4iF,EAAAnoF,GAAAsoF,IAAAH,EAAA7nF,GAAAgoF,KACAC,EAAAplF,KAAAC,IAAA+kF,EAAAnoF,GAAAuoF,IAAAJ,EAAA7nF,GAAAioF,IAKAn3E,GAAApR,CACA,IACAoR,EAAArR,EAAAqR,UACAg3E,EAAAxiF,KAAAwL,SACGA,IAAA+2E,EAAA/2E,GAAAk3E,OAAAC,EAAAJ,EAAA/2E,GAAAm3E,KAKH,KAJA//C,EAAAp3B,EAGAA,EAAA9Q,GACA8Q,EAAArR,EAAAqR,aAAAo3B,GACA6/C,EAAAziF,KAAAwL,EAGA,QAAU6iC,KAAAm0C,EAAA57E,OAAA67E,EAAAjqE,WAAAoqB,OAGV,QAAAqoC,GAAA9wE,GAIA,QAAAgrE,GAAA/qE,GACA,GAAAsoF,GAAAC,CACAzmF,GAAAC,QAAAU,QAAA1C,EAAAE,SAAAD,GAAA+qE,GACAxkE,EAAAvG,IAAiBsoF,MAAAC,SANjB,GAAAhiF,MACAgiF,EAAA,CASA,OAFAzmF,GAAAC,QAAAU,QAAA1C,EAAAE,WAAA8qE,GAEAxkE,EAGA,QAAAiiF,GAAAzoF,GACA,GAAAooF,GAAAtX,EAAA9wE,EAEA+B,GAAAC,QAAAU,QAAA1C,EAAAsB,QAAAkhF,YAAA,SAAAviF,GAUA,IATA,GAAA2C,GAAA5C,EAAA4C,KAAA3C,GACAktE,EAAAvqE,EAAAuqE,QACAub,EAAAP,EAAAnoF,EAAAooF,EAAAjb,EAAAltE,EAAAktE,EAAA5sE,GACA2zC,EAAAw0C,EAAAx0C,KACAzL,EAAAigD,EAAAjgD,IACAkgD,EAAA,EACAC,EAAA10C,EAAAy0C,GACAtuC,GAAA,EAEAp6C,IAAAktE,EAAA5sE,GAAA,CAGA,GAFAqC,EAAA5C,EAAA4C,KAAA3C,GAEAo6C,EAAA,CACA,MAAAuuC,EAAA10C,EAAAy0C,MAAAlgD,GAAAzoC,EAAA4C,KAAAgmF,GAAAzjF,QAAAvC,EAAAwC,MACAujF,GAGAC,KAAAngD,IACA4R,GAAA,GAIA,IAAAA,EAAA,CACA,KAAAsuC,EAAAz0C,EAAA/zC,OAAA,GAAAH,EAAA4C,KAAAgmF,EAAA10C,EAAAy0C,EAAA,IAAAnO,SAAA53E,EAAAwC,MACAujF,GAEAC,GAAA10C,EAAAy0C,GAGA3oF,EAAAquE,UAAApuE,EAAA2oF,GACA3oF,EAAAD,EAAAwuE,WAAAvuE,GAAA,MAtFAiH,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAEAhH,EAAAqC,QAAAymF,CAEA,IAAArhF,GAAAxH,EAAA,GAEAmC,EAEA,SAAAsF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAF7ED,EAmFA1H,GAAAC,UAAA,S5C63aMkpF,IACA,SAAUnpF,EAAQC,EAASC,GAEjC,Y6Cx6aA,SAAAkpF,GAAA9oF,EAAAiF,GAGA,QAAA8jF,GAAAC,EAAAlN,GAGA,GAAAmN,GAAA,EAGAC,EAAA,EACAC,EAAAH,EAAA7oF,OACAipF,EAAArnF,EAAAC,QAAAy+E,KAAA3E,EAqBA,OAnBA/5E,GAAAC,QAAAU,QAAAo5E,EAAA,SAAA77E,EAAAgG,GACA,GAAA1F,GAAA8oF,EAAArpF,EAAAC,GACAqpF,EAAA/oF,EAAAP,EAAA4C,KAAArC,GAAA+E,MAAA6jF,GAEA5oF,GAAAN,IAAAmpF,KACArnF,EAAAC,QAAAU,QAAAo5E,EAAAxxE,MAAA4+E,EAAAjjF,EAAA,YAAAsjF,GACAxnF,EAAAC,QAAAU,QAAA1C,EAAAsuE,aAAAib,GAAA,SAAA7gE,GACA,GAAA8gE,GAAAxpF,EAAA4C,KAAA8lB,GACA+gE,EAAAD,EAAAlkF,QACAmkF,EAAAR,GAAAK,EAAAG,IAAAD,EAAArnF,OAAAnC,EAAA4C,KAAA2mF,GAAApnF,OACAunF,EAAAC,EAAAjhE,EAAA6gE,OAIAL,EAAAjjF,EAAA,EACAgjF,EAAAK,KAIAxN,EA/BA,GAAA6N,KAmCA,OADA5nF,GAAAC,QAAAkpC,OAAAjmC,EAAA8jF,GACAY,EAGA,QAAAC,GAAA5pF,EAAAiF,GAGA,QAAA4kF,GAAAC,EAAAnG,EAAAoG,EAAAC,EAAAC,GACA,GAAAhqF,EACA8B,GAAAC,QAAAU,QAAAX,EAAAC,QAAAkD,MAAAy+E,EAAAoG,GAAA,SAAA9jF,GACAhG,EAAA6pF,EAAA7jF,GACAjG,EAAA4C,KAAA3C,GAAAkC,OACAJ,EAAAC,QAAAU,QAAA1C,EAAAsuE,aAAAruE,GAAA,SAAAyoB,GACA,GAAAwhE,GAAAlqF,EAAA4C,KAAA8lB,EACAwhE,GAAA/nF,QAAA+nF,EAAA5kF,MAAA0kF,GAAAE,EAAA5kF,MAAA2kF,IACAP,EAAAC,EAAAjhE,EAAAzoB,OAOA,QAAA8oF,GAAAoB,EAAAL,GACA,GACAM,GADAC,GAAA,EAEA1G,EAAA,CAeA,OAbA5hF,GAAAC,QAAAU,QAAAonF,EAAA,SAAA7pF,EAAAqqF,GACA,cAAAtqF,EAAA4C,KAAA3C,GAAAkC,MAAA,CACA,GAAAmsE,GAAAtuE,EAAAsuE,aAAAruE,EACAquE,GAAAnuE,SACAiqF,EAAApqF,EAAA4C,KAAA0rE,EAAA,IAAAhpE,MACAukF,EAAAC,EAAAnG,EAAA2G,EAAAD,EAAAD,GACAzG,EAAA2G,EACAD,EAAAD,GAGAP,EAAAC,EAAAnG,EAAAmG,EAAA3pF,OAAAiqF,EAAAD,EAAAhqF,UAGA2pF,EAnCA,GAAAH,KAuCA,OADA5nF,GAAAC,QAAAkpC,OAAAjmC,EAAA8jF,GACAY,EAGA,QAAAN,GAAArpF,EAAAC,GACA,GAAAD,EAAA4C,KAAA3C,GAAAkC,MACA,MAAAJ,GAAAC,QAAAmhC,KAAAnjC,EAAAsuE,aAAAruE,GAAA,SAAAyoB,GACA,MAAA1oB,GAAA4C,KAAA8lB,GAAAvmB,QAKA,QAAAunF,GAAAC,EAAA1pF,EAAAM,GACA,GAAAN,EAAAM,EAAA,CACA,GAAAwsE,GAAA9sE,CACAA,GAAAM,EACAA,EAAAwsE,EAGA,GAAAwd,GAAAZ,EAAA1pF,EACAsqF,KACAZ,EAAA1pF,GAAAsqF,MAEAA,EAAAhqF,IAAA,EAGA,QAAAiqF,GAAAb,EAAA1pF,EAAAM,GACA,GAAAN,EAAAM,EAAA,CACA,GAAAwsE,GAAA9sE,CACAA,GAAAM,EACAA,EAAAwsE,EAEA,MAAAhrE,GAAAC,QAAAyD,IAAAkkF,EAAA1pF,GAAAM,GAWA,QAAAkqF,GAAAzqF,EAAAiF,EAAA0kF,EAAAe,GACA,GAAA1nD,MACAtkB,KACAolE,IAkCA,OA7BA/hF,GAAAC,QAAAU,QAAAuC,EAAA,SAAA62E,GACA/5E,EAAAC,QAAAU,QAAAo5E,EAAA,SAAA77E,EAAAqF,GACA09B,EAAA/iC,KACAye,EAAAze,KACA6jF,EAAA7jF,GAAAqF,MAIAvD,EAAAC,QAAAU,QAAAuC,EAAA,SAAA62E,GACA,GAAA6O,IAAA,CACA5oF,GAAAC,QAAAU,QAAAo5E,EAAA,SAAA77E,GACA,GAAA2qF,GAAAF,EAAAzqF,EACA,IAAA2qF,EAAAzqF,OAAA,CACAyqF,EAAA7oF,EAAAC,QAAA+hF,OAAA6G,EAAA,SAAArqF,GACA,MAAAujF,GAAAvjF,IAGA,QADAsqF,IAAAD,EAAAzqF,OAAA,KACA8F,EAAA7C,KAAAsd,MAAAmqE,GAAAC,EAAA1nF,KAAAga,KAAAytE,GAAwD5kF,GAAA6kF,IAAS7kF,EAAA,CACjE,GAAA1F,GAAAqqF,EAAA3kF,EACAyY,GAAAze,QAAA0qF,EAAA7G,EAAAvjF,KAAAiqF,EAAAb,EAAA1pF,EAAAM,KACAme,EAAAne,GAAAN,EACAye,EAAAze,GAAA+iC,EAAA/iC,GAAA+iC,EAAAziC,GACAoqF,EAAA7G,EAAAvjF,WAOUyiC,OAAAtkB,SAGV,QAAAqsE,GAAA/qF,EAAAiF,EAAA+9B,EAAAtkB,EAAAssE,GAWA,QAAAC,GAAAhrF,GACA8B,EAAAC,QAAAyD,IAAAwlE,EAAAhrE,KACAgrE,EAAAhrE,IAAA,EACA64D,EAAA74D,GAAA8B,EAAAC,QAAAkpC,OAAAggD,EAAAjnF,QAAAhE,GAAA,SAAAoD,EAAAhD,GAEA,MADA4qF,GAAA5qF,EAAAJ,GACAmD,KAAAC,MAAAy1D,EAAAz4D,EAAAJ,GAAAirF,EAAAnoF,KAAA1C,KACO,IAMP,QAAA8qF,GAAAlrF,GACA,OAAAgrE,EAAAhrE,GAAA,CACAgrE,EAAAhrE,IACA,IAAA2C,GAAA5C,EAAA4C,KAAA3C,GACAuF,EAAAzD,EAAAC,QAAAkpC,OAAAggD,EAAArnF,SAAA5D,GAAA,SAAAuF,EAAAnF,GAEA,MADA8qF,GAAA9qF,EAAAE,GACA6C,KAAAoC,MAAAszD,EAAAz4D,EAAAE,GAAA2qF,EAAAnoF,KAAA1C,KACO+uC,OAAA87B,kBACP1lE,KAAA4pC,OAAA87B,mBAAAtoE,EAAAu3E,iBACArhB,EAAA74D,GAAAmD,KAAAC,IAAAy1D,EAAA74D,GAAAuF,KA1BA,GAAAszD,MACAoyB,EAAAE,EAAAprF,EAAAiF,EAAA+9B,EAAAgoD,GAGA/f,IAUAlpE,GAAAC,QAAAU,QAAAwoF,EAAAvoF,QAAAsoF,EAEA,IAAA9Q,GAAA6Q,EAAA,0BAqBA,OAPAjpF,GAAAC,QAAAU,QAAAwoF,EAAAvoF,QAAAwoF,GAGAppF,EAAAC,QAAAU,QAAAgc,EAAA,SAAAze,GACA64D,EAAA74D,GAAA64D,EAAA91B,EAAA/iC,MAGA64D,EAGA,QAAAsyB,GAAAprF,EAAAiF,EAAA+9B,EAAAgoD,GACA,GAAAK,GAAA,GAAA9oF,GAAAC,MACA49E,EAAApgF,EAAAsB,QACAgqF,EAAAC,EAAAnL,EAAAoB,QAAApB,EAAAmB,QAAAyJ,EAgBA,OAdAjpF,GAAAC,QAAAU,QAAAuC,EAAA,SAAA62E,GACA,GAAApzD,EACA3mB,GAAAC,QAAAU,QAAAo5E,EAAA,SAAA77E,GACA,GAAAurF,GAAAxoD,EAAA/iC,EAEA,IADAorF,EAAAjpF,QAAAopF,GACA9iE,EAAA,CACA,GAAA+iE,GAAAzoD,EAAAta,GACAgjE,EAAAL,EAAAtoF,KAAA0oF,EAAAD,EACAH,GAAAloF,QAAAsoF,EAAAD,EAAApoF,KAAAC,IAAAioF,EAAAtrF,EAAAC,EAAAyoB,GAAAgjE,GAAA,IAEAhjE,EAAAzoB,MAIAorF,EAMA,QAAAM,GAAA3rF,EAAA4rF,GACA,GAAAC,GAAA9pF,EAAAC,QAAAqpC,OAAAugD,EAEA,OAAA7pF,GAAAC,QAAAyuE,MAAAob,EAAA,SAAA/yB,GACA,GAAAgzB,MACAC,IASA,OAPAhqF,GAAAC,QAAAgqF,MAAAlzB,EAAA,SAAAz0D,EAAApE,GACA,GAAAgsF,GAAAxnF,EAAAzE,EAAAC,GAAA,CAEA6rF,GAAAjmF,KAAAxB,EAAA4nF,GACAF,EAAAlmF,KAAAxB,EAAA4nF,KAGAlqF,EAAAC,QAAAqB,IAAAyoF,GAAA/pF,EAAAC,QAAAwD,IAAAumF,KAWA,QAAAG,GAAAN,EAAAO,GACA,GAAAN,GAAA9pF,EAAAC,QAAAqpC,OAAA8gD,GACAC,EAAArqF,EAAAC,QAAAwD,IAAAqmF,GACAQ,EAAAtqF,EAAAC,QAAAqB,IAAAwoF,EAEA9pF,GAAAC,QAAAU,SAAA,kBAAA4pF,GACAvqF,EAAAC,QAAAU,SAAA,kBAAA6pF,GACA,GAEAzmF,GAFA0mF,EAAAF,EAAAC,EACAzzB,EAAA8yB,EAAAY,EAEA,IAAA1zB,IAAAqzB,EAAA,CAEA,GAAAM,GAAA1qF,EAAAC,QAAAqpC,OAAAytB,EACAhzD,GAAA,MAAAymF,EAAAH,EAAArqF,EAAAC,QAAAwD,IAAAinF,GAAAJ,EAAAtqF,EAAAC,QAAAqB,IAAAopF,GAEA3mF,IACA8lF,EAAAY,GAAAzqF,EAAAC,QAAA8+E,UAAAhoB,EAAA,SAAAz0D,GACA,MAAAA,GAAAyB,UAOA,QAAA4mF,GAAAd,EAAAltE,GACA,MAAA3c,GAAAC,QAAA8+E,UAAA8K,EAAAe,GAAA,SAAAC,EAAA3sF,GACA,GAAAye,EACA,MAAAktE,GAAAltE,EAAAlF,eAAAvZ,EAEA,IAAA64D,GAAA/2D,EAAAC,QAAA+hF,OAAAhiF,EAAAC,QAAA2B,IAAAioF,EAAA3rF,GACA,QAAA64D,EAAA,GAAAA,EAAA,QAKA,QAAA+zB,GAAA7sF,GACA,GAIA8sF,GAJA7nF,GAAA,EAAAsrE,EAAAvrE,kBAAAhF,GACA2pF,EAAA5nF,EAAAC,QAAA8rB,MAAAg7D,EAAA9oF,EAAAiF,GAAA2kF,EAAA5pF,EAAAiF,IAEA2mF,IAEA7pF,GAAAC,QAAAU,SAAA,kBAAA4pF,GACAQ,EAAA,MAAAR,EAAArnF,EAAAlD,EAAAC,QAAAqpC,OAAApmC,GAAAoZ,UACAtc,EAAAC,QAAAU,SAAA,kBAAA6pF,GACA,MAAAA,IACAO,EAAA/qF,EAAAC,QAAA2B,IAAAmpF,EAAA,SAAAC,GACA,MAAAhrF,GAAAC,QAAAqpC,OAAA0hD,GAAA1uE,YAIA,IAAAqsE,GAAA3oF,EAAAC,QAAAu8C,KAAA,MAAA+tC,EAAAtsF,EAAAsuE,aAAAtuE,EAAAwuE,WAAAxuE,GACA0e,EAAA+rE,EAAAzqF,EAAA8sF,EAAAnD,EAAAe,GACA5xB,EAAAiyB,EAAA/qF,EAAA8sF,EAAApuE,EAAAskB,KAAAtkB,QAAA,MAAA6tE,EACA,OAAAA,IACAzzB,EAAA/2D,EAAAC,QAAA8+E,UAAAhoB,EAAA,SAAAz0D,GACA,OAAAA,KAGAunF,EAAAU,EAAAC,GAAAzzB,KAIA,IAAAk0B,GAAArB,EAAA3rF,EAAA4rF,EAEA,OADAM,GAAAN,EAAAoB,GACAN,EAAAd,EAAA5rF,EAAAsB,QAAAod,OAGA,QAAA6sE,GAAAjW,EAAA2X,EAAAjC,GACA,gBAAAhrF,EAAAC,EAAAM,GACA,GAGAuF,GAHAonF,EAAAltF,EAAA4C,KAAA3C,GACAktF,EAAAntF,EAAA4C,KAAArC,GACAg6C,EAAA,CAIA,IADAA,GAAA2yC,EAAAzoF,MAAA,EACA1C,EAAAC,QAAAyD,IAAAynF,EAAA,YACA,OAAAA,EAAAtN,SAAApmE,eACA,QACA1T,GAAAonF,EAAAzoF,MAAA,CAAoC,MACpC,SACAqB,EAAAonF,EAAAzoF,MAAA,EAYA,GATAqB,IACAy0C,GAAAywC,EAAAllF,MAEAA,EAAA,EAEAy0C,IAAA2yC,EAAA/qF,MAAA8qF,EAAA3X,GAAA,EACA/6B,IAAA4yC,EAAAhrF,MAAA8qF,EAAA3X,GAAA,EAEA/6B,GAAA4yC,EAAA1oF,MAAA,EACA1C,EAAAC,QAAAyD,IAAA0nF,EAAA,YACA,OAAAA,EAAAvN,SAAApmE,eACA,QACA1T,EAAAqnF,EAAA1oF,MAAA,CAAmC,MACnC,SACAqB,GAAAqnF,EAAA1oF,MAAA,EAQA,MALAqB,KACAy0C,GAAAywC,EAAAllF,MAEAA,EAAA,EAEAy0C,GAIA,QAAA91C,GAAAzE,EAAAC,GACA,MAAAD,GAAA4C,KAAA3C,GAAAwE,MAjaAyC,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAEAhH,EAAAmpF,qBACAnpF,EAAAiqF,qBACAjqF,EAAA0pF,4BACA1pF,EAAA+pF,cACA/pF,EAAA6qF,cACA7qF,EAAA8qF,oBACA9qF,EAAAorF,uBACAprF,EAAAyrF,kBACAzrF,EAAAgsF,6BACAhsF,EAAAusF,mBACAvsF,EAAA+sF,UACA/sF,EAAAktF,YACAltF,EAAA4rF,MACA5rF,EAAA8E,OAEA,IAAA2C,GAAAxH,EAAA,GAEAmC,EAMA,SAAAsF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAN7ED,GAEA7E,EAAA3C,EAAA,KAEA2wE,EAAA3wE,EAAA,IA4YAD,GAAAqC,SACAkqF,mBACAQ,UACAtB,kBACA/B,4BACAsC,6BACA7C,qBACAc,qBACAY,cACAO,uBACA8B,YACAtB,MACAd,oBACAhmF,U7Ck+aM2oF,IACA,SAAU1tF,EAAQC,EAASC,GAEjC,Y8Cv4bA,SAAAytF,GAAArtF,GACA,GAAAiF,IAAA,EAAAsrE,EAAAvrE,kBAAAhF,GACAu1E,EAAAv1E,EAAAsB,QAAAq+E,QACA2N,EAAA,CACAvrF,GAAAC,QAAAU,QAAAuC,EAAA,SAAA62E,GACA,GAAAyR,GAAAxrF,EAAAC,QAAAqB,IAAAtB,EAAAC,QAAA2B,IAAAm4E,EAAA,SAAA77E,GACA,MAAAD,GAAA4C,KAAA3C,GAAA0E,SAEA5C,GAAAC,QAAAU,QAAAo5E,EAAA,SAAA77E,GACAD,EAAA4C,KAAA3C,GAAAqE,EAAAgpF,EAAAC,EAAA,IAEAD,GAAAC,EAAAhY,IAIA,QAAAtgE,GAAAjV,GACAA,GAAA,EAAAuwE,EAAAjtE,oBAAAtD,GAEAqtF,EAAArtF,GACA+B,EAAAC,QAAAU,SAAA,EAAA8qF,EAAAX,WAAA7sF,GAAA,SAAAqE,EAAApE,GACAD,EAAA4C,KAAA3C,GAAAoE,MAnCA6C,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAEAhH,EAAAqC,QAAAiT,CAEA,IAAA7N,GAAAxH,EAAA,GAEAmC,EAMA,SAAAsF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAN7ED,GAEAmpE,EAAA3wE,EAAA,KAEA4tF,EAAA5tF,EAAA,IA2BAF,GAAAC,UAAA,S9C65bM8tF,IACA,SAAU/tF,EAAQC,EAASC,GAEjC,Y+Cv7bA,SAAAsxE,GAAA7pE,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,GAK7E,QAAAqmF,GAAA1tF,IACA,EAAAuwE,EAAAxF,aAAA/qE,IACA,EAAA2tF,EAAA3rF,SAAAhC,GAGA,QAAA4tF,GAAA5tF,IACA,EAAA6tF,EAAA7rF,SAAAhC,GAsBA,QAAAoF,GAAApF,GACA,OAAAA,EAAAsB,QAAAwsF,QACA,sBACAF,EAAA5tF,EAA8B,MAC9B,kBACA0tF,EAAA1tF,EAAyB,MACzB,oBACA+tF,EAAA/tF,EAA2B,MAC3B,SACA4tF,EAAA5tF,IAzDAkH,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAEAhH,EAAAqC,QAAAoD,CAEA,IAAAmrE,GAAA3wE,EAAA,KAEAouF,EAAApuF,EAAA,KAEA+tF,EAAAzc,EAAA8c,GAEAC,EAAAruF,EAAA,KAEAiuF,EAAA3c,EAAA+c,GAKAF,EAAAxd,EAAAxF,WA0CArrE,GAAAC,UAAA,S/C68bMuuF,IACA,SAAUxuF,EAAQC,EAASC,GAEjC,YgDz/bA,SAAAsxE,GAAA7pE,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,GAiB7E,QAAA8mF,GAAA/xE,EAAApc,GACA,GAAAgG,GAAA8qE,EAAA10D,IAAAzZ,QACAqD,KAAAsE,MAAA,EAAAtE,EAAA7F,OAAA,GACA4B,EAAAC,QAAAU,QAAAsD,EAAA,SAAA/F,GACAmuF,EAAAhyE,EAAApc,EAAAC,KAIA,QAAAmuF,GAAAhyE,EAAApc,EAAA0qC,GACA,GAAA2jD,GAAAjyE,EAAAxZ,KAAA8nC,GACAr5B,EAAAg9E,EAAAh9E,MACA+K,GAAArZ,KAAA2nC,EAAAr5B,GAAAi9E,SAAAC,EAAAnyE,EAAApc,EAAA0qC,GAOA,QAAA6jD,GAAAnyE,EAAApc,EAAA0qC,GACA,GAAA2jD,GAAAjyE,EAAAxZ,KAAA8nC,GACAr5B,EAAAg9E,EAAAh9E,OAEAm9E,GAAA,EAEAC,EAAAzuF,EAAA+C,KAAA2nC,EAAAr5B,GAEAq9E,EAAA,CAyBA,OAvBAD,KACAD,GAAA,EACAC,EAAAzuF,EAAA+C,KAAAsO,EAAAq5B,IAGAgkD,EAAAD,EAAAzrF,OAEAjB,EAAAC,QAAAU,QAAA1C,EAAAuvE,UAAA7kC,GAAA,SAAArqC,GACA,GAAAsuF,GAAAtuF,EAAAJ,IAAAyqC,EACAle,EAAAmiE,EAAAtuF,EAAAE,EAAAF,EAAAJ,CAEA,IAAAusB,IAAAnb,EAAA,CACA,GAAAu9E,GAAAD,IAAAH,EACAK,EAAA7uF,EAAA+C,KAAA1C,GAAA2C,MAGA,IADA0rF,GAAAE,EAAAC,KACAC,EAAA1yE,EAAAsuB,EAAAle,GAAA,CACA,GAAAuiE,GAAA3yE,EAAArZ,KAAA2nC,EAAAle,GAAA8hE,QACAI,IAAAE,GAAAG,QAKAL,EAGA,QAAAM,GAAA/sD,EAAAe,GACA58B,UAAAjG,OAAA,IACA6iC,EAAAf,EAAAt/B,QAAA,IAEAssF,EAAAhtD,KAA0B,EAAAe,GAG1B,QAAAisD,GAAAhtD,EAAAgpC,EAAAikB,EAAAjvF,EAAAoR,GACA,GAAAk3E,GAAA2G,EACAhsF,EAAA++B,EAAAr/B,KAAA3C,EAkBA,OAhBAgrE,GAAAhrE,IAAA,EACA8B,EAAAC,QAAAU,QAAAu/B,EAAAk7B,UAAAl9D,GAAA,SAAAM,GACAwB,EAAAC,QAAAyD,IAAAwlE,EAAA1qE,KACA2uF,EAAAD,EAAAhtD,EAAAgpC,EAAAikB,EAAA3uF,EAAAN,MAIAiD,EAAAqlF,MACArlF,EAAAslF,IAAA0G,IACA79E,EACAnO,EAAAmO,eAGAnO,GAAAmO,OAGA69E,EAGA,QAAAC,GAAAltD,GACA,MAAAlgC,GAAAC,QAAAmhC,KAAAlB,EAAAp/B,QAAA,SAAAxC,GACA,MAAA4hC,GAAAl/B,KAAA1C,GAAAiuF,SAAA,IAIA,QAAAc,GAAAhzE,EAAApc,EAAA+C,GACA,GAAA9C,GAAA8C,EAAA9C,EACAM,EAAAwC,EAAAxC,CAKAP,GAAAovE,QAAAnvE,EAAAM,KACAN,EAAA8C,EAAAxC,EACAA,EAAAwC,EAAA9C,EAGA,IAAAitF,GAAA9wE,EAAAxZ,KAAA3C,GACAktF,EAAA/wE,EAAAxZ,KAAArC,GACA8uF,EAAAnC,EACAoC,GAAA,CAIApC,GAAA1E,IAAA2E,EAAA3E,MACA6G,EAAAlC,EACAmC,GAAA,EAGA,IAAAlyB,GAAAr7D,EAAAC,QAAAwR,OAAAxT,EAAA6C,QAAA,SAAAE,GACA,MAAAusF,KAAAC,EAAAnzE,IAAAxZ,KAAAG,EAAA9C,GAAAovF,IAAAC,IAAAC,EAAAnzE,IAAAxZ,KAAAG,EAAAxC,GAAA8uF,IAGA,OAAAttF,GAAAC,QAAAyuE,MAAArT,EAAA,SAAAr6D,GACA,SAAAwtE,EAAAnF,OAAAprE,EAAA+C,KAIA,QAAAysF,GAAApzE,EAAApc,EAAAK,EAAAmV,GACA,GAAAvV,GAAAI,EAAAJ,EACAM,EAAAF,EAAAE,CACA6b,GAAA+xD,WAAAluE,EAAAM,GACA6b,EAAAjZ,QAAAqS,EAAAvV,EAAAuV,EAAAjV,MACAyuF,EAAA5yE,GACA+xE,EAAA/xE,EAAApc,GACAyvF,EAAArzE,EAAApc,GAGA,QAAAyvF,GAAArzE,EAAApc,GACA,GAAAgjC,GAAAjhC,EAAAC,QAAAmhC,KAAA/mB,EAAAzZ,QAAA,SAAA1C,GACA,OAAAD,EAAA4C,KAAA3C,GAAAoR,SAEArL,EAAA0pF,EAAAtzE,EAAA4mB,EACAh9B,KAAAsE,MAAA,GACAvI,EAAAC,QAAAU,QAAAsD,EAAA,SAAA/F,GACA,GAAAoR,GAAA+K,EAAAxZ,KAAA3C,GAAAoR,OACAtO,EAAA/C,EAAA+C,KAAA9C,EAAAoR,GACAs+E,GAAA,CAEA5sF,KACAA,EAAA/C,EAAA+C,KAAAsO,EAAApR,GACA0vF,GAAA,GAGA3vF,EAAA4C,KAAA3C,GAAAmF,KAAApF,EAAA4C,KAAAyO,GAAAjM,MAAAuqF,EAAA5sF,EAAAE,QAAAF,EAAAE,UAOA,QAAA6rF,GAAA7sD,EAAAvZ,EAAAzoB,GACA,MAAAgiC,GAAAmtC,QAAA1mD,EAAAzoB,GAOA,QAAAsvF,GAAAttD,EAAAirD,EAAA0C,GACA,MAAAA,GAAArH,KAAA2E,EAAA1E,KAAA0E,EAAA1E,KAAAoH,EAAApH,IAoCA,QAAAqH,GAAA7vF,GACAA,GAAA,EAAA8vF,EAAAztF,UAAArC,IACA,EAAAuwE,EAAAxF,aAAA/qE,EACA,IAAAoc,IAAA,EAAAuxE,EAAA3rF,SAAAhC,EACAgvF,GAAA5yE,GACA+xE,EAAA/xE,EAAApc,EAGA,KADA,GAAAK,GAAAmV,EACAnV,EAAA8uF,EAAA/yE,IACA5G,EAAA45E,EAAAhzE,EAAApc,EAAAK,GACAmvF,EAAApzE,EAAApc,EAAAK,EAAAmV,GAvPAtO,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAEAhH,EAAAqC,QAAA6tF,CAEA,IAAAzoF,GAAAxH,EAAA,GAEAmC,EAAAmvE,EAAA9pE,GAEA7E,EAAA3C,EAAA,KAEAouF,EAAApuF,EAAA,KAEA+tF,EAAAzc,EAAA8c,GAEAzd,EAAA3wE,EAAA,KAEAkwF,EAAAlwF,EAAA,KAIA8vF,EAAAntF,EAAAiF,IAAAkoF,SACA5e,EAAAvuE,EAAAiF,IAAAspE,SAIA+e,GAAAb,mBACAa,EAAA1B,gBACA0B,EAAAtB,eACAsB,EAAAV,YACAU,EAAAT,YACAS,EAAAL,gBA2NA9vF,EAAAC,UAAA,ShDmhcMowF,IACA,SAAUrwF,EAAQC,EAASC,GAEjC,YiDhxcAsH,QAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAGAhH,EAAAqC,QAAA,SAAAhC,GAKA,QAAAgrE,GAAA/qE,GACA8B,EAAAC,QAAAyD,IAAAwlE,EAAAhrE,KACAgrE,EAAAhrE,IAAA,EACAmyE,EAAAvsE,KAAA5F,GACA8B,EAAAC,QAAA67C,KAAA79C,EAAAwuE,WAAAvuE,GAAA+qE,GACAjpE,EAAAC,QAAA67C,KAAA79C,EAAAsuE,aAAAruE,GAAA+qE,IATA,GAEAoH,GAFAnH,KACA+kB,IAmBA,OARAjuF,GAAAC,QAAA67C,KAAA79C,EAAA2C,QAAA,SAAA1C,GACAmyE,KACApH,EAAA/qE,GACAmyE,EAAAjyE,QACA6vF,EAAAnqF,KAAAusE,KAIA4d,EAGA,IAAA5oF,GAAAxH,EAAA,GAEAmC,EAEA,SAAAsF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAF7ED,EAIA1H,GAAAC,UAAA,SjDuxcMswF,IACA,SAAUvwF,EAAQC,EAASC,GAEjC,YkD1ycA,SAAAsxE,GAAA7pE,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,GAlB7EH,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAGAhH,EAAAqC,QAAA,SAAAhC,EAAAkwF,EAAAC,GACA,MAAApuF,GAAAC,QAAAomC,UAAApoC,EAAA2C,QAAA,SAAAquE,EAAA/wE,GACA+wE,EAAA/wE,IAAA,EAAAmwF,EAAApuF,SAAAhC,EAAAC,EAAAiwF,EAAAC,QAIA,IAAA/oF,GAAAxH,EAAA,GAEAmC,EAAAmvE,EAAA9pE,GAEAipF,EAAAzwF,EAAA,KAEAwwF,EAAAlf,EAAAmf,EAIA3wF,GAAAC,UAAA,SlDm0cM2wF,IACA,SAAU5wF,EAAQC,EAASC,GAEjC,YmDx0cA,SAAAsxE,GAAA7pE,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,GAlB7EH,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAGAhH,EAAAqC,QAAA,SAAAhC,GACA,MAAA+B,GAAAC,QAAAwR,QAAA,EAAA+8E,EAAAvuF,SAAAhC,GAAA,SAAAoyE,GACA,MAAAA,GAAAjyE,OAAA,OAAAiyE,EAAAjyE,QAAAH,EAAAovE,QAAAgD,EAAA,GAAAA,EAAA,MAIA,IAAAhrE,GAAAxH,EAAA,GAEAmC,EAAAmvE,EAAA9pE,GAEAopF,EAAA5wF,EAAA,KAEA2wF,EAAArf,EAAAsf,EAIA9wF,GAAAC,UAAA,SnDi2cM8wF,IACA,SAAU/wF,EAAQC,EAASC,GAEjC,YoDp2cA,SAAA8wF,GAAA1wF,EAAAoxE,EAAAC,GACA,GAAAE,MACA5uE,EAAA3C,EAAA2C,OAkCA,OAhCAA,GAAAD,QAAA,SAAAzC,GACAsxE,EAAAtxE,MACAsxE,EAAAtxE,OAAqBw6B,SAAA,GACrB93B,EAAAD,QAAA,SAAAnC,GACAN,IAAAM,IACAgxE,EAAAtxE,GAAAM,IAAyBk6B,SAAA2U,OAAA87B,sBAGzBmG,EAAApxE,GAAAyC,QAAA,SAAAK,GACA,GAAAxC,GAAAwC,EAAA9C,MAAA8C,EAAAxC,EAAAwC,EAAA9C,EACAqJ,EAAA8nE,EAAAruE,EACAwuE,GAAAtxE,GAAAM,IAAuBk6B,SAAAnxB,EAAAsoE,YAAA3xE,OAIvB0C,EAAAD,QAAA,SAAA8G,GACA,GAAAmnF,GAAApf,EAAA/nE,EACA7G,GAAAD,QAAA,SAAAuD,GACA,GAAA2qF,GAAArf,EAAAtrE,EACAtD,GAAAD,QAAA,SAAAuP,GACA,GAAA4+E,GAAAD,EAAApnF,GACAsnF,EAAAH,EAAA1+E,GACA8+E,EAAAH,EAAA3+E,GACA++E,EAAAH,EAAAp2D,SAAAq2D,EAAAr2D,QACAu2D,GAAAD,EAAAt2D,WACAs2D,EAAAt2D,SAAAu2D,EACAD,EAAAnf,YAAAkf,EAAAlf,mBAMAL,EAxDArqE,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAGAhH,EAAAqC,QAAA,SAAAhC,EAAAoxE,EAAAC,GAKA,MAJAD,MAAAW,EACAV,KAAA,SAAApxE,GACA,MAAAD,GAAA6D,SAAA5D,IAEAywF,EAAA1wF,EAAAoxE,EAAAC,GAGA,IAAAjqE,GAAAxH,EAAA,GAEAmC,EAEA,SAAAsF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAF7ED,GAIA2qE,EAAAhwE,EAAAC,QAAA8pE,SAAA,EAyCApsE,GAAAC,UAAA,SpD+3cMsxF,IACA,SAAUvxF,EAAQC,EAASC,GAEjC,YqD54cA,SAAAsxE,GAAA7pE,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,GAjD7EH,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAEAhH,EAAA4yE,QAAA5yE,EAAAuxF,OAAAvxF,EAAAwxF,KAAAxxF,EAAA+vF,SAAA/vF,EAAAmxE,UAAAnxE,EAAAyxF,UAAAzxF,EAAA0xF,cAAA1xF,EAAA2xF,WAAA3xF,EAAA4xF,YAAA5xF,EAAA6xF,SAAA7xF,EAAA8xF,eAAA5mB,EAEA,IAAA6mB,GAAA9xF,EAAA,KAEA+xF,EAAAzgB,EAAAwgB,GAEArB,EAAAzwF,EAAA,KAEAwwF,EAAAlf,EAAAmf,GAEAuB,EAAAhyF,EAAA,KAEAiyF,EAAA3gB,EAAA0gB,GAEAE,EAAAlyF,EAAA,KAEAmyF,EAAA7gB,EAAA4gB,GAEAE,EAAApyF,EAAA,KAEAqyF,EAAA/gB,EAAA8gB,GAEAE,EAAAtyF,EAAA,KAEAuyF,EAAAjhB,EAAAghB,GAEAE,EAAAxyF,EAAA,KAEAyyF,EAAAnhB,EAAAkhB,GAEAE,EAAA1yF,EAAA,KAEA2yF,EAAArhB,EAAAohB,GAEAE,EAAA5yF,EAAA,KAEA6yF,EAAAvhB,EAAAshB,GAEAhC,EAAA5wF,EAAA,KAEA2wF,EAAArf,EAAAsf,GAEAkC,EAAA9yF,EAAA,KAEA+yF,EAAAzhB,EAAAwhB,EAIA/yF,GAAA8xF,WAAAE,EAAA3vF,QACArC,EAAA6xF,SAAApB,EAAApuF,QACArC,EAAA4xF,YAAAM,EAAA7vF,QACArC,EAAA2xF,WAAAS,EAAA/vF,QACArC,EAAA0xF,cAAAY,EAAAjwF,QACArC,EAAAyxF,UAAAe,EAAAnwF,QACArC,EAAAmxE,UAAAuhB,EAAArwF,QACArC,EAAA+vF,SAAA6C,EAAAvwF,QACArC,EAAAwxF,KAAAsB,EAAAzwF,QACArC,EAAAuxF,OAAAX,EAAAvuF,QACArC,EAAA4yE,QAAAogB,EAAA3wF,QACArC,EAAAqC,SACAyvF,WAAAE,EAAA3vF,QACAwvF,SAAApB,EAAApuF,QACAuvF,YAAAM,EAAA7vF,QACAsvF,WAAAS,EAAA/vF,QACAqvF,cAAAY,EAAAjwF,QACAovF,UAAAe,EAAAnwF,QACA8uE,UAAAuhB,EAAArwF,QACA0tF,SAAA6C,EAAAvwF,QACAmvF,KAAAsB,EAAAzwF,QACAkvF,OAAAX,EAAAvuF,QACAuwE,QAAAogB,EAAA3wF,UrDq8cM4wF,IACA,SAAUlzF,EAAQC,EAASC,GAEjC,YsDjhdAsH,QAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAGAhH,EAAAqC,QAAA,SAAAhC,GACA,KACA,EAAA2yF,EAAA3wF,SAAAhC,GACG,MAAAK,GACH,GAAAA,YAAAsyF,GAAA3wF,QAAAswE,eACA,QAEA,MAAAjyE,GAEA,SAGA,IAAAqyF,GAAA9yF,EAAA,KAEA+yF,EAEA,SAAAtrF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAF7EqrF,EAIAhzF,GAAAC,UAAA,StDwhdMkzF,IACA,SAAUnzF,EAAQC,EAASC,GAEjC,YuDjjdAsH,QAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAGAhH,EAAAqC,QAAA,SAAAhC,EAAAgG,GACA,SAAA8sF,EAAA9wF,SAAAhC,EAAAgG,EAAA,QAGA,IAAA+sF,GAAAnzF,EAAA,KAEAkzF,EAEA,SAAAzrF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAF7E0rF,EAIArzF,GAAAC,UAAA,SvDwjdMqzF,IACA,SAAUtzF,EAAQC,EAASC,GAEjC,YwDzkdAsH,QAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAGAhH,EAAAqC,QAAA,SAAAhC,EAAAgG,GACA,SAAA8sF,EAAA9wF,SAAAhC,EAAAgG,EAAA,OAGA,IAAA+sF,GAAAnzF,EAAA,KAEAkzF,EAEA,SAAAzrF,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,IAF7E0rF,EAIArzF,GAAAC,UAAA,SxDgldMszF,IACA,SAAUvzF,EAAQC,EAASC,GAEjC,YyDlidA,SAAAsxE,GAAA7pE,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,GA/D7EH,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAGAhH,EAAAqC,QAAA,SAAAhC,EAAAkwF,GAMA,QAAAxe,GAAA3uE,GACA,GAAAxC,GAAAwC,EAAA9C,MAAA8C,EAAAxC,EAAAwC,EAAA9C,EACAizF,EAAA1hB,EAAAthE,SAAA3P,EACA,QAAAsqE,KAAAqoB,EAAA,CACA,GAAAtW,GAAAsT,EAAAntF,EACA65E,GAAAsW,IACArkB,EAAAtuE,GAAAN,EACAuxE,EAAAK,SAAAtxE,EAAAq8E,KAZA,GAGA38E,GAHAuG,EAAA,GAAA2sF,GAAAnxF,QACA6sE,KACA2C,EAAA,GAAAC,GAAAzvE,OAeA,QAAAhC,EAAA8tE,YACA,MAAAtnE,EAGAzE,GAAAC,QAAA67C,KAAA79C,EAAA2C,QAAA,SAAA1C,GACAuxE,EAAA3hE,IAAA5P,EAAAmvC,OAAA87B,mBACA1kE,EAAApE,QAAAnC,KAIAuxE,EAAAK,SAAA7xE,EAAA2C,QAAA,KAGA,KADA,GAAAywF,IAAA,EACA5hB,EAAA5mE,OAAA,IAEA,GADA3K,EAAAuxE,EAAAM,YACA/vE,EAAAC,QAAAyD,IAAAopE,EAAA5uE,GACAuG,EAAArD,QAAAlD,EAAA4uE,EAAA5uE,QACK,IAAAmzF,EACL,SAAAxuF,OAAA,iCAAA5E,EAEAozF,IAAA,EAGApzF,EAAAuvE,UAAAtvE,GAAAyC,QAAAgvE,GAGA,MAAAlrE,GAGA,IAAAY,GAAAxH,EAAA,GAEAmC,EAAAmvE,EAAA9pE,GAEAisF,EAAAzzF,EAAA,KAEAuzF,EAAAjiB,EAAAmiB,GAEArhB,EAAApyE,EAAA,KAEA6xE,EAAAP,EAAAc,EAIAtyE,GAAAC,UAAA,SzDwmdM2zF,IACA,SAAU5zF,EAAQC,EAASC,GAEjC,Y0D9pdA,SAAAsxE,GAAA7pE,GAAsC,MAAAA,MAAAC,WAAAD,GAAuCrF,QAAAqF,GAE7E,QAAAksF,GAAAvzF,GACA,MAAA+B,GAAAC,QAAA2B,IAAA3D,EAAA2C,QAAA,SAAA1C,GACA,GAAAuzF,GAAAxzF,EAAA4C,KAAA3C,GACAoR,EAAArR,EAAAqR,OAAApR,GACA2C,GAAgB3C,IAOhB,OANA8B,GAAAC,QAAAqD,YAAAmuF,KACA5wF,EAAA+D,MAAA6sF,GAEAzxF,EAAAC,QAAAqD,YAAAgM,KACAzO,EAAAyO,UAEAzO,IAIA,QAAA6wF,GAAAzzF,GACA,MAAA+B,GAAAC,QAAA2B,IAAA3D,EAAA6C,QAAA,SAAAxC,GACA,GAAAqzF,GAAA1zF,EAAA+C,KAAA1C,GACA0C,GAAgB9C,EAAAI,EAAAJ,EAAAM,EAAAF,EAAAE,EAOhB,OANAwB,GAAAC,QAAAqD,YAAAhF,EAAAG,QACAuC,EAAAvC,KAAAH,EAAAG,MAEAuB,EAAAC,QAAAqD,YAAAquF,KACA3wF,EAAA4D,MAAA+sF,GAEA3wF,IAIA,QAAA4wF,GAAAlsF,GACA,GAAAzH,GAAA,GAAAmzF,GAAAnxF,QAAAyF,EAAAmsF,SAAAnxF,SAAAgF,EAAAd,MAUA,OATA5E,GAAAC,QAAA67C,KAAAp2C,EAAA9E,MAAA,SAAAwpB,GACAnsB,EAAAoC,QAAA+pB,EAAAlsB,EAAAksB,EAAAxlB,OACAwlB,EAAA9a,QACArR,EAAAquE,UAAAliD,EAAAlsB,EAAAksB,EAAA9a,UAGAtP,EAAAC,QAAA67C,KAAAp2C,EAAA5E,MAAA,SAAAspB,GACAnsB,EAAAmD,SAAelD,EAAAksB,EAAAlsB,EAAAM,EAAA4rB,EAAA5rB,EAAAC,KAAA2rB,EAAA3rB,MAA2C2rB,EAAAxlB,SAE1D3G,EAGA,QAAA6zF,GAAA7zF,GACA,GAAAyH,IACAmsF,SACApoB,SAAAxrE,EAAA6sE,aACAtpE,WAAAvD,EAAAwD,eACAmoE,SAAA3rE,EAAA2tE,cAEAhrE,MAAA4wF,EAAAvzF,GACA6C,MAAA4wF,EAAAzzF,GAKA,OAHA+B,GAAAC,QAAAqD,YAAArF,EAAAsB,WACAmG,EAAAd,MAAA5E,EAAAC,QAAA8xF,MAAA9zF,EAAAsB,UAEAmG,EAxEAP,OAAAC,eAAAxH,EAAA,cACAgH,OAAA,IAEAhH,EAAAg0F,OACAh0F,EAAAk0F,OAEA,IAAAzsF,GAAAxH,EAAA,GAEAmC,EAAAmvE,EAAA9pE,GAEAisF,EAAAzzF,EAAA,KAEAuzF,EAAAjiB,EAAAmiB,EA+DA1zF,GAAAqC,SACA6xF,QACAF,S1DordMI,IACA,SAAUr0F,EAAQC,EAASC,G2DpwdjCA,EAAA,KACAA,EAAA,KACAF,EAAAC,QAAAC,EAAA,M3D0wdMo0F,IACA,SAAUt0F,EAAQC,EAASC,G4D5wdjC,GAAAq0F,GAAAr0F,EAAA,IACAs0F,EAAAt0F,EAAA,mBAEAu0F,EAA6C,aAA7CF,EAAA,WAAyB,MAAA7tF,eAGzBguF,EAAA,SAAAC,EAAAzqF,GACA,IACA,MAAAyqF,GAAAzqF,GACG,MAAAvJ,KAGHX,GAAAC,QAAA,SAAA00F,GACA,GAAAC,GAAAC,EAAAhwE,CACA,YAAAsmD,KAAAwpB,EAAA,mBAAAA,EAAA,OAEA,iBAAAE,EAAAH,EAAAE,EAAAptF,OAAAmtF,GAAAH,IAAAK,EAEAJ,EAAAF,EAAAK,GAEA,WAAA/vE,EAAA0vE,EAAAK,KAAA,kBAAAA,GAAAE,OAAA,YAAAjwE,I5DoxdMkwE,IACA,SAAU/0F,EAAQC,EAASC,G6D1ydjC,GAAA80F,GAAA90F,EAAA,KACA+0F,EAAA/0F,EAAA,gBACAg1F,EAAAh1F,EAAA,GACAF,GAAAC,QAAAC,EAAA,IAAAi1F,kBAAA,SAAAR,GACA,OAAAxpB,IAAAwpB,EAAA,MAAAA,GAAAM,IACAN,EAAA,eACAO,EAAAF,EAAAL,M7DizdMS,IACA,SAAUp1F,EAAQC,EAASC,G8DxzdjC,GAAAm1F,GAAAn1F,EAAA,IACA2M,EAAA3M,EAAA,IACAF,GAAAC,QAAAC,EAAA,IAAAo1F,YAAA,SAAAX,GACA,GAAAY,GAAA1oF,EAAA8nF,EACA,sBAAAY,GAAA,KAAAC,WAAAb,EAAA,oBACA,OAAAU,GAAAE,EAAA9hF,KAAAkhF,M9D+zdMc,IACA,SAAUz1F,EAAQC,EAASC,G+Dr0djCD,EAAAD,EAAAC,QAAAC,EAAA,OAKAD,EAAAkG,MAAAnG,EAAAuG,EAAA,qzFAA40F,IAAQwzC,QAAA,EAAA0xB,SAAA,8EAAA9kD,SAAA+uE,SAAA,26CAAAC,KAAA,oBAAAC,gBAAA,6oHAA6tKC,WAAA,O/D80d3iQC,IACA,SAAU91F,EAAQC,EAASC,GAEjC,YgE30dA,SAAAyzD,GAAAhiD,EAAA6lC,EAAAn0C,EAAAlB,GACA,GAAA4zF,GAAApkF,EAAA2D,OAAA,UAAAhU,KAAA,KAAAk2C,GAAAl2C,KAAA,uBAAAA,KAAA,UAAAA,KAAA,UAAAA,KAAA,6BAAAA,KAAA,iBAAAA,KAAA,kBAAAA,KAAA,iBAEAkzC,EAAAuhD,EAAAzgF,OAAA,QAAAhU,KAAA,6BAAAoP,MAAA,kBAAAA,MAAA,yBACA2oE,GAAAl4E,WAAAqzC,EAAAnxC,EAAAlB,EAAA,UACAkB,EAAAlB,EAAA,UACAqyC,EAAAlzC,KAAA,QAAA+B,EAAAlB,EAAA,UAIA,QAAA6zF,GAAArkF,EAAA6lC,EAAAn0C,EAAAlB,GACA,GAAA4zF,GAAApkF,EAAA2D,OAAA,UAAAhU,KAAA,KAAAk2C,GAAAl2C,KAAA,uBAAAA,KAAA,UAAAA,KAAA,UAAAA,KAAA,6BAAAA,KAAA,iBAAAA,KAAA,kBAAAA,KAAA,iBAEAkzC,EAAAuhD,EAAAzgF,OAAA,QAAAhU,KAAA,mCAAAoP,MAAA,kBAAAA,MAAA,yBACA2oE,GAAAl4E,WAAAqzC,EAAAnxC,EAAAlB,EAAA,UACAkB,EAAAlB,EAAA,UACAqyC,EAAAlzC,KAAA,QAAA+B,EAAAlB,EAAA,UAIA,QAAA8zF,GAAAtkF,EAAA6lC,EAAAn0C,EAAAlB,GACA,GAAA4zF,GAAApkF,EAAA2D,OAAA,UAAAhU,KAAA,KAAAk2C,GAAAl2C,KAAA,uBAAAA,KAAA,UAAAA,KAAA,UAAAA,KAAA,6BAAAA,KAAA,iBAAAA,KAAA,kBAAAA,KAAA,iBAEAkzC,EAAAuhD,EAAAzgF,OAAA,QAAAhU,KAAA,oBAAAoP,MAAA,kBAAAA,MAAA,yBACA2oE,GAAAl4E,WAAAqzC,EAAAnxC,EAAAlB,EAAA,UACAkB,EAAAlB,EAAA,UACAqyC,EAAAlzC,KAAA,QAAA+B,EAAAlB,EAAA,UAnCA,GAAAk3E,GAAAn5E,EAAA,IAEAF,GAAAC,SACAqC,QAAAqxD,EACAA,SACAqiC,MACAC,ehE03dMC,IACA,SAAUl2F,EAAQC,EAASC,GAEjC,YiE73dA,SAAAi2F,GAAAx0F,EAAArB,GACA,GAAA81F,GAAA91F,EAAA2C,QAAA6Q,OAAA,SAAAvT,GACA,MAAA84E,GAAAh5E,WAAAC,EAAAC,KAEA81F,EAAA10F,EAAAi8C,UAAA,aAAA7rC,KAAAqkF,EAAA,SAAA71F,GACA,MAAAA,IA6BA,OA1BA81F,GAAAz4C,UAAA,KAAA5wC,SACAqpF,EAAAxjF,QAAAyC,OAAA,KAAAhU,KAAA,mBAAAA,KAAA,cAAAf,GAEA,MADAD,GAAA4C,KAAA3C,GACAi3C,KACG9mC,MAAA,aAEH2oE,EAAA33E,gBAAA20F,EAAA/1F,GAAAoQ,MAAA,aAEA2lF,EAAAl4C,KAAA,SAAA59C,GACA,GAAA2C,GAAA5C,EAAA4C,KAAA3C,GACA+1F,EAAApuF,EAAAsM,OAAAlK,KACApC,GAAAsM,OAAAlK,MAAAgL,OAAA,QACA+jE,EAAA93E,WAAA+0F,EAAApzF,EAAA,gBAEA,IAAAqzF,GAAAD,EAAAhhF,OAAA,KAAAhU,KAAA,gBACA4uE,GAAAqmB,EAAArzF,IAAAm0E,mBAGAgf,EAAAz4C,UAAA,QAAAO,KAAA,SAAAluC,GACA,GAAA/M,GAAA5C,EAAA4C,KAAA+M,GACAumF,EAAAtuF,EAAAsM,OAAAlK,KACA+uE,GAAAl4E,WAAAq1F,EAAAtzF,EAAAwN,SAGA2oE,EAAA33E,gBAAA20F,EAAAh3C,OAAA/+C,GAAAoQ,MAAA,aAAA1D,SAEAqpF,EAxCA,GAAAhd,GAAAn5E,EAAA,KACAgwE,EAAAhwE,EAAA,KACAgI,EAAAhI,EAAA,IAEAF,GAAAC,QAAAk2F,GjE+6dMM,IACA,SAAUz2F,EAAQC,EAASC,GAEjC,YkE/6dA,SAAAw2F,GAAA/0F,EAAArB,GACA,GAAAq2F,GAAAh1F,EAAAi8C,UAAA,eAAA7rC,KAAAzR,EAAA6C,QAAA,SAAAxC,GACA,MAAA04E,GAAA34E,SAAAC,KACGy9C,QAAA,YAsBH,OApBAu4C,GAAA/4C,UAAA,KAAA5wC,SACA2pF,EAAA9jF,QAAAyC,OAAA,KAAA8oC,QAAA,gBAAA1tC,MAAA,aACAimF,EAAAx4C,KAAA,SAAAx9C,GACA,GAAA0C,GAAA/C,EAAA+C,KAAA1C,GACA6C,EAAA0sE,EAAAhoE,EAAAsM,OAAAlK,MAAAhK,EAAA+C,KAAA1C,GAAA,KAAAy9C,QAAA,YACAxb,EAAAp/B,EAAAN,OAAAutE,SAEAptE,GAAAuzF,SACApzF,EAAAlC,KAAA,KAAA+B,EAAAuzF,SAEA/0F,EAAAkE,IAAA1C,EAAA,WACAA,EAAA0B,MAAA69B,EAAA79B,OAEAlD,EAAAkE,IAAA1C,EAAA,YACAA,EAAA4B,OAAA29B,EAAA39B,UAIAo0E,EAAA33E,gBAAAi1F,EAAAt3C,OAAA/+C,GAAAoQ,MAAA,aAAA1D,SAEA2pF,EAhCA,GAAA90F,GAAA3B,EAAA,KACAgwE,EAAAhwE,EAAA,KACAm5E,EAAAn5E,EAAA,KACAgI,EAAAhI,EAAA,IAEAF,GAAAC,QAAAy2F,GlEy9dMG,IACA,SAAU72F,EAAQC,EAASC,GAEjC,YmE39dA,SAAA42F,GAAAn1F,EAAArB,EAAAy2F,GACA,GAAAC,GAAAr1F,EAAAi8C,UAAA,cAAA7rC,KAAAzR,EAAA6C,QAAA,SAAAxC,GACA,MAAA04E,GAAA34E,SAAAC,KACGy9C,QAAA,YA0CH,OAxCAvrC,GAAAmkF,EAAA12F,GACA++C,EAAA23C,EAAA12F,GAEA+4E,EAAA33E,gBAAAs1F,EAAA12F,GAAAoQ,MAAA,aAGIsmF,EAAA74C,KAAA,SAAAx9C,GACJ,GAAAs2F,GAAA/uF,EAAAsM,OAAAlK,MACAjH,EAAA/C,EAAA+C,KAAA1C,EACA0C,GAAA6zF,KAAA5sF,KAEAjH,EAAAm0C,IACAy/C,EAAA31F,KAAA,KAAA+B,EAAAm0C,IAGA6hC,EAAA93E,WAAA01F,EAAA5zF,EAAA,OAAA4zF,EAAA74C,QAAA,sCAGA44C,EAAAp5C,UAAA,aAAAO,KAAA,SAAAx9C,GACA,GAAA0C,GAAA/C,EAAA+C,KAAA1C,EACA0C,GAAA8zF,YAAAt1F,EAAAU,SAAA,YAEA,IAAA00F,GAAA/uF,EAAAsM,OAAAlK,MAAAhJ,KAAA,wBACA,aAAA81F,EAAAj1C,SAAAk1C,KAAAh0F,EAAA8zF,aAAA,MACKzmF,MAAA,cAEL2oE,GAAA33E,gBAAAu1F,EAAA32F,GAAAgB,KAAA,aAAAX,GACA,MAAA22F,GAAAh3F,EAAAK,KAGA04E,EAAAl4E,WAAA81F,EAAA5zF,EAAAqN,SAGAsmF,EAAAp5C,UAAA,UAAA5wC,SACAgqF,EAAAp5C,UAAA,QAAAO,KAAA,SAAAx9C,GACA,GAAA0C,GAAA/C,EAAA+C,KAAA1C,IAEA42F,EADAR,EAAA1zF,EAAAk0F,YACArvF,EAAAsM,OAAAlK,MAAAjH,EAAA8zF,YAAA9zF,EAAA,eAGA2zF,EAGA,QAAAI,GAAA78E,EAAAi9E,GAEA,MADAj9E,GAAA5K,MAAA,QACA,IAAA6nF,EAGA,QAAAF,GAAAh3F,EAAAK,GACA,GAAA0C,GAAA/C,EAAA+C,KAAA1C,GACA82F,EAAAn3F,EAAA4C,KAAAvC,EAAAJ,GACAm3F,EAAAp3F,EAAA4C,KAAAvC,EAAAE,GACA6rB,EAAArpB,EAAAqpB,OAAA9hB,MAAA,EAAAvH,EAAAqpB,OAAAjsB,OAAA,EAIA,OAHAisB,GAAA0R,QAAA21C,EAAA0jB,EAAA/qE,EAAA,KACAA,EAAAvmB,KAAA4tE,EAAA2jB,EAAAhrE,IAAAjsB,OAAA,KAEAk3F,EAAAt0F,EAAAqpB,GAGA,QAAAirE,GAAAt0F,EAAAqpB,GACA,GAAAW,GAAAnlB,EAAA8M,IAAAqY,OAAA1oB,EAAA,SAAAiF,GACA,MAAAA,GAAAjF,IACGC,EAAA,SAAAgF,GACH,MAAAA,GAAAhF,GAWA,OARA/C,GAAAkE,IAAA1C,EAAA,oBACAgqB,EAAArB,YAAA3oB,EAAAu0F,iBAGA/1F,EAAAkE,IAAA1C,EAAA,gBACAgqB,EAAA4mB,QAAAvE,OAAArsC,EAAAw0F,cAGAxqE,EAAAX,GAGA,QAAAorE,GAAAZ,GACA,GAAAt0D,GAAAs0D,EAAAzmB,UACA50B,EAAAq7C,EAAAjiF,gBAAAY,eAAAO,UAAA2hF,SAAAb,EAAArhF,gBAAAsjB,UAAAyJ,EAAA79B,MAAA,EAAA69B,EAAA39B,OAAA,EACA,QAAUN,EAAAk3C,EAAAl7C,EAAAiE,EAAAi3C,EAAA/lC,GAGV,QAAAjD,GAAAmkF,EAAA12F,GACA,GAAA03F,GAAAhB,EAAAnkF,QAAAyC,OAAA,KAAAhU,KAAA,oBAAAoP,MAAA,YACAsnF,GAAA1iF,OAAA,QAAAhU,KAAA,gBAAAA,KAAA,aAAAX,GACA,GAAA0C,GAAA/C,EAAA+C,KAAA1C,GACAs3F,EAAA33F,EAAA4C,KAAAvC,EAAAJ,GAAA22F,IAIA,OAAAS,GAAAt0F,EAHAxB,EAAA2D,MAAAnC,EAAAqpB,OAAAjsB,QAAAwD,IAAA,WACA,MAAA6zF,GAAAG,QAIAD,EAAA1iF,OAAA,QAGA,QAAA+pC,GAAA23C,EAAA12F,GACA,GAAA43F,GAAAlB,EAAA33C,MACAg6B,GAAA33E,gBAAAw2F,EAAA53F,GAAAoQ,MAAA,aAAA1D,SAEAqsE,EAAA33E,gBAAAw2F,EAAA1jF,OAAA,aAAAlU,GAAAgB,KAAA,aAAAX,GACA,GAAA6K,GAAAlL,EAAA4C,KAAAvC,EAAAJ,EAEA,IAAAiL,EAAA,CAIA,MAAAmsF,MAHA91F,EAAA2D,MAAA8E,KAAA6tF,kBAAAl0F,IAAA,WACA,MAAAuH,MAIA,MAAAtD,GAAAsM,OAAAlK,MAAAhJ,KAAA,OAxHA,GAAAO,GAAA3B,EAAA,KACA6zE,EAAA7zE,EAAA,KACAm5E,EAAAn5E,EAAA,KACAgI,EAAAhI,EAAA,IACAF,GAAAC,QAAA62F,GnE+leMsB,IACA,SAAUp4F,EAAQC,EAASC,GAEjC,YoE/leA,SAAAm4F,GAAA12F,EAAArB,EAAAg4F,GACA,GAAAhS,GAAAhmF,EAAA2C,QAAA6Q,OAAA,SAAAvT,GACA,OAAA84E,EAAAh5E,WAAAC,EAAAC,KAEAg4F,EAAA52F,EAAAi8C,UAAA,UAAA7rC,KAAAu0E,EAAA,SAAA/lF,GACA,MAAAA,KACG69C,QAAA,YA2CH,OAzCAm6C,GAAA36C,UAAA,KAAA5wC,SACAurF,EAAA1lF,QAAAyC,OAAA,KAAAhU,KAAA,gBAAAoP,MAAA,aACA6nF,EAAAp6C,KAAA,SAAA59C,GACA,GAAA2C,GAAA5C,EAAA4C,KAAA3C,GACA+1F,EAAApuF,EAAAsM,OAAAlK,MACAisF,EAAAD,EAAAhhF,OAAA,KAAAhU,KAAA,iBACAk3F,EAAAtoB,EAAAqmB,EAAArzF,GACAu1F,EAAAH,EAAAp1F,EAAAu1F,OACA71D,EAAA/gC,EAAA49E,KAAA+Y,EAAAt1F,OAAAutE,UAAA,iBAEAvtE,GAAAg0F,KAAA5sF,KAEApH,EAAAs0C,IACA8+C,EAAAh1F,KAAA,KAAA4B,EAAAs0C,IAEAt0C,EAAA0zF,SACAL,EAAAj1F,KAAA,KAAA4B,EAAA0zF,SAEAvd,EAAA93E,WAAA+0F,EAAApzF,EAAA,OAAAozF,EAAAl4C,QAAA,gCAEAv8C,EAAAkE,IAAA7C,EAAA,WACA0/B,EAAA79B,MAAA7B,EAAA6B,OAEAlD,EAAAkE,IAAA7C,EAAA,YACA0/B,EAAA39B,OAAA/B,EAAA+B,QAGA29B,EAAA79B,OAAA7B,EAAAozE,YAAApzE,EAAAqzE,aACA3zC,EAAA39B,QAAA/B,EAAAmzE,WAAAnzE,EAAAkzE,cACAmgB,EAAAj1F,KAAA,0BAAA4B,EAAAozE,YAAApzE,EAAAqzE,cAAA,OAAArzE,EAAAmzE,WAAAnzE,EAAAkzE,eAAA,MAEA,IAAAsiB,GAAAD,EAAAvwF,EAAAsM,OAAAlK,MAAAs4B,EAAA1/B,EACAm2E,GAAAl4E,WAAAu3F,EAAAx1F,EAAAwN,MAEA,IAAAioF,GAAAD,EAAAx1F,OAAAutE,SACAvtE,GAAA6B,MAAA4zF,EAAA5zF,MACA7B,EAAA+B,OAAA0zF,EAAA1zF,SAGAo0E,EAAA33E,gBAAA62F,EAAAl5C,OAAA/+C,GAAAoQ,MAAA,aAAA1D,SAEAurF,EAxDA,GAAA12F,GAAA3B,EAAA,KACAgwE,EAAAhwE,EAAA,KACAm5E,EAAAn5E,EAAA,KACAgI,EAAAhI,EAAA,IAEAF,GAAAC,QAAAo4F,GpEiqeMO,IACA,SAAU54F,EAAQC,EAASC,GAEjC,YqEzqeAF,GAAAC,QAAAC,EAAA,MAAA+H,OAAA4wF,UrEgreMC,IACA,SAAU94F,EAAQC,EAASC,GAEjC;;;;;;;;;;;;;;;;;;;;;;AsE7peAF,EAAAC,SACA44F,SAAA34F,EAAA,KACAyzE,MAAAzzE,EAAA,KACA8wB,UAAA9wB,EAAA,KACA84E,OAAA94E,EAAA,KACAm5E,KAAAn5E,EAAA,KACA65C,QAAA75C,EAAA,OtE2reM64F,IACA,SAAU/4F,EAAQC,EAASC,GAEjC,YuE1teAF,GAAAC,SACAiD,KAAAhD,EAAA,KACAm9B,OAAAn9B,EAAA,KACA84F,QAAA94F,EAAA,KACA6tB,QAAA7tB,EAAA,KACAuE,KAAAvE,EAAA,OvEkueM+4F,IACA,SAAUj5F,EAAQC,EAASC,GAEjC,YwEpueA,SAAAo0E,GAAAjoD,EAAA8oB,EAAAjjB,EAAAgnE,GAIA,GAAAhmE,OAAA,GACAimE,MAAA,GACAjiE,MAAA,GACAkiE,MAAA,GACA1nE,MAAA,GACAC,MAAA,GACAyV,MAAA,GACAiyD,MAAA,GACAC,MAAA,GACAC,MAAA,GACAC,MAAA,GACAvzF,MAAA,GACAwzF,MAAA,GACA90F,MAAA,GACAC,MAAA,EAcA,IAVAsuB,EAAAiiB,EAAAvwC,EAAAynB,EAAAznB,EACAsyB,EAAA7K,EAAA1nB,EAAAwwC,EAAAxwC,EACA+sB,EAAAyjB,EAAAxwC,EAAA0nB,EAAAznB,EAAAynB,EAAA1nB,EAAAwwC,EAAAvwC,EAGA00F,EAAApmE,EAAAhB,EAAAvtB,EAAAuyB,EAAAhF,EAAAttB,EAAA8sB,EACA6nE,EAAArmE,EAAAgmE,EAAAv0F,EAAAuyB,EAAAgiE,EAAAt0F,EAAA8sB,IAIA,IAAA4nE,GAAA,IAAAC,GAAAG,EAAAJ,EAAAC,KAKAJ,EAAAD,EAAAt0F,EAAAstB,EAAAttB,EACAw0F,EAAAlnE,EAAAvtB,EAAAu0F,EAAAv0F,EACAgtB,EAAAunE,EAAAv0F,EAAAutB,EAAAttB,EAAAstB,EAAAvtB,EAAAu0F,EAAAt0F,EAGAwiC,EAAA+xD,EAAA9sE,EAAA1nB,EAAAy0F,EAAA/sE,EAAAznB,EAAA+sB,EACA0nE,EAAAF,EAAAhkD,EAAAxwC,EAAAy0F,EAAAjkD,EAAAvwC,EAAA+sB,EAKA,IAAAyV,GAAA,IAAAiyD,GAAAK,EAAAtyD,EAAAiyD,IAMA,IADAG,EAAAtmE,EAAAkmE,EAAAD,EAAAjiE,KAgBA,MAXAjxB,GAAAvC,KAAA2B,IAAAm0F,EAAA,GAKIC,EAAAviE,EAAAvF,EAAAynE,EAAA1nE,EACJ/sB,EAAA80F,EAAA,GAAAA,EAAAxzF,GAAAuzF,GAAAC,EAAAxzF,GAAAuzF,EAEAC,EAAAN,EAAAznE,EAAAwB,EAAAvB,EACA/sB,EAAA60F,EAAA,GAAAA,EAAAxzF,GAAAuzF,GAAAC,EAAAxzF,GAAAuzF,GAEU70F,IAAAC,KAGV,QAAA80F,GAAAtyD,EAAAiyD,GACA,MAAAjyD,GAAAiyD,EAAA,EA/EAr5F,EAAAC,QAAAq0E,GxEi0eMqlB,IACA,SAAU35F,EAAQC,EAASC,GAEjC,YyE9zeA,SAAAowE,GAAAhtC,EAAApgC,GACA,GAAA02F,GAAAt2D,EAAAhuB,OAAA,iBAAAhU,KAAA,kBAEAu4F,EAAAD,EAAAtkF,OAAA,YACAukF,GAAAv4F,KAAA,uCAEA,IAAAkC,GAAAN,EAAAM,KACA,iBAAAA,EAAA,YAAAmqE,EAAAnqE,IACA,eACAq2F,EAAA16D,OAAA37B,EACA,MACA,cAEAq2F,EAAA16D,OAAA,WACA,MAAA37B,IAEA,MACA,SACAq2F,EAAAp7C,KAAAj7C,GAGA61E,EAAAl4E,WAAA04F,EAAA32F,EAAA42F,YACAD,EAAAnpF,MAAA,0BAEImpF,EAAAnpF,MAAA,uBAEJ,IAAAqpF,GAAAF,EAAA,MAAAxjF,uBAGA,OAFAujF,GAAAt4F,KAAA,QAAAy4F,EAAAh1F,OAAAzD,KAAA,SAAAy4F,EAAA90F,QAEA20F,EAnCA,GAAAjsB,GAAA,kBAAAC,SAAA,gBAAAA,QAAAC,SAAA,SAAAlmE,GAAoG,aAAAA,IAAqB,SAAAA,GAAmB,MAAAA,IAAA,kBAAAimE,SAAAjmE,EAAAmmE,cAAAF,QAAAjmE,IAAAimE,OAAAzjE,UAAA,eAAAxC,IAE5I0xE,EAAAn5E,EAAA,IAEAF,GAAAC,QAAAqwE,GzE22eM0pB,IACA,SAAUh6F,EAAQC,EAASC,GAEjC,Y0E92eA,SAAAmwE,GAAA/sC,EAAApgC,GACA,GAAA+2F,GAAA32D,CAMA,OAJA22D,GAAA/2F,OAAAy7C,YAAAz7C,EAAAM,OAEA61E,EAAAl4E,WAAA84F,EAAA/2F,EAAA42F,YAEAG,EAXA,GAAA5gB,GAAAn5E,EAAA,IAEAF,GAAAC,QAAAowE,G1Em4eM6pB,IACA,SAAUl6F,EAAQC,EAASC,GAEjC,Y2Ej4eA,SAAAqwE,GAAAjtC,EAAApgC,GAIA,OAHA+2F,GAAA32D,EAAAhuB,OAAA,QAEAmZ,EAAA0rE,EAAAj3F,EAAAM,OAAAmM,MAAA,MACApJ,EAAA,EAAiBA,EAAAkoB,EAAAhuB,OAAkB8F,IACnC0zF,EAAA3kF,OAAA,SAAAhU,KAAA,wBAAAA,KAAA,YAAAA,KAAA,SAAAk9C,KAAA/vB,EAAAloB,GAKA,OAFA8yE,GAAAl4E,WAAA84F,EAAA/2F,EAAA42F,YAEAG,EAGA,QAAAE,GAAA37C,GAIA,OAHA47C,GAAA,GACAC,GAAA,EACAC,MAAA,GACA/zF,EAAA,EAAiBA,EAAAi4C,EAAA/9C,SAAiB8F,EAElC,GADA+zF,EAAA97C,EAAAj4C,GACA8zF,EAAA,CACA,OAAAC,GACA,QACAF,GAAA,IACA,MACA,SACAA,GAAAE,EAEAD,GAAA,MACK,OAAAC,EACLD,GAAA,EAEAD,GAAAE,CAGA,OAAAF,GAzCA,GAAA/gB,GAAAn5E,EAAA,IAEAF,GAAAC,QAAAswE,G3Eu7eMgqB,IACA,SAAUv6F,EAAQC,EAASC,GAEjC,Y4Ev7eA,SAAAs6F,GAAA74F,EAAArB,GAKA,QAAA64B,GAAA54B,GACA,GAAA2C,GAAA5C,EAAA4C,KAAA3C,EACA,oBAAA2C,EAAAyB,EAAA,IAAAzB,EAAA0B,EAAA,IANA,GAAA61F,GAAA94F,EAAAmS,OAAA,WACA,OAAA5L,EAAAsM,OAAAlK,MAAA8zC,QAAA,WAQAq8C,GAAAn5F,KAAA,YAAA63B,GAEAkgD,EAAA33E,gBAAAC,EAAArB,GAAAoQ,MAAA,aAAApP,KAAA,YAAA63B,GAEAkgD,EAAA33E,gBAAA+4F,EAAA78C,UAAA,QAAAt9C,GAAAgB,KAAA,iBAAAf,GACA,MAAAD,GAAA4C,KAAA3C,GAAAwE,QACGzD,KAAA,kBAAAf,GACH,MAAAD,GAAA4C,KAAA3C,GAAA0E,SACG3D,KAAA,aAAAf,GAEH,OADAD,EAAA4C,KAAA3C,GACAwE,MAAA,IACGzD,KAAA,aAAAf,GAEH,OADAD,EAAA4C,KAAA3C,GACA0E,OAAA,IA5BA,GAAAo0E,GAAAn5E,EAAA,KACAgI,EAAAhI,EAAA,IAEAF,GAAAC,QAAAu6F,G5E89eME,IACA,SAAU16F,EAAQC,EAASC,GAEjC,Y6E99eA,SAAAy6F,GAAAh5F,EAAArB,GAKA,QAAA64B,GAAAx4B,GACA,GAAA0C,GAAA/C,EAAA+C,KAAA1C,EACA,OAAAkB,GAAAkE,IAAA1C,EAAA,kBAAAA,EAAAsB,EAAA,IAAAtB,EAAAuB,EAAA,OANAjD,EAAAmS,OAAA,WACA,OAAA5L,EAAAsM,OAAAlK,MAAA8zC,QAAA,YAQA98C,KAAA,YAAA63B,GAEAkgD,EAAA33E,gBAAAC,EAAArB,GAAAoQ,MAAA,aAAApP,KAAA,YAAA63B,GAlBA,GAAAkgD,GAAAn5E,EAAA,KACAgI,EAAAhI,EAAA,KACA2B,EAAA3B,EAAA,IAEAF,GAAAC,QAAA06F,G7E0/eMC,IACA,SAAU56F,EAAQC,EAASC,GAEjC,Y8E5/eA,SAAA26F,GAAAl5F,EAAArB,GAKA,QAAA64B,GAAA54B,GACA,GAAA2C,GAAA5C,EAAA4C,KAAA3C,EACA,oBAAA2C,EAAAyB,EAAA,IAAAzB,EAAA0B,EAAA,IANAjD,EAAAmS,OAAA,WACA,OAAA5L,EAAAsM,OAAAlK,MAAA8zC,QAAA,YAQA98C,KAAA,YAAA63B,GAEAkgD,EAAA33E,gBAAAC,EAAArB,GAAAoQ,MAAA,aAAApP,KAAA,YAAA63B,GAjBA,GAAAkgD,GAAAn5E,EAAA,KACAgI,EAAAhI,EAAA,IAEAF,GAAAC,QAAA46F,G9EuhfMC,IACA,SAAU96F,EAAQC,EAASC,GAEjC,Y+EvhfA,SAAA84E,KACA,GAAAqf,GAAAn4F,EAAA,KACAi2F,EAAAj2F,EAAA,KACAw2F,EAAAx2F,EAAA,KACA42F,EAAA52F,EAAA,KACA26F,EAAA36F,EAAA,KACAy6F,EAAAz6F,EAAA,KACAs6F,EAAAt6F,EAAA,KACAo4F,EAAAp4F,EAAA,KACA62F,EAAA72F,EAAA,KAEA2G,EAAA,SAAAmO,EAAA1U,GACAy6F,EAAAz6F,EAEA,IAAA06F,GAAAC,EAAAjmF,EAAA,UACAkmF,EAAAD,EAAAD,EAAA,YACAG,EAAAF,EAAAD,EAAA,aACAI,EAAA1E,EAAAuE,EAAAD,EAAA,cAAA16F,GACA2C,EAAAo1F,EAAA4C,EAAAD,EAAA,SAAA16F,EAAAg4F,EAEAj9B,GAAA/6D,GAEAu6F,EAAA53F,EAAA3C,GACAq6F,EAAAS,EAAA96F,GACAw2F,EAAAqE,EAAA76F,EAAAy2F,EAEA,IAAAX,GAAAD,EAAA+E,EAAA56F,EACAk6F,GAAApE,EAAA91F,GAEA+6F,EAAA/6F,GAmDA,OAhDAuG,GAAAwxF,YAAA,SAAApxF,GACA,MAAAP,WAAAjG,QAGA43F,EAAApxF,EACAJ,GAHAwxF,GAMAxxF,EAAAsvF,eAAA,SAAAlvF,GACA,MAAAP,WAAAjG,QAGA01F,EAAAlvF,EACAJ,GAHAsvF,GAMAtvF,EAAA6vF,iBAAA,SAAAzvF,GACA,MAAAP,WAAAjG,QAGAi2F,EAAAzvF,EACAJ,GAHA6vF,GAMA7vF,EAAAiwF,gBAAA,SAAA7vF,GACA,MAAAP,WAAAjG,QAGAq2F,EAAA7vF,EACAJ,GAHAiwF,GAMAjwF,EAAAyxF,OAAA,SAAArxF,GACA,MAAAP,WAAAjG,QAGA63F,EAAArxF,EACAJ,GAHAyxF,GAMAzxF,EAAAkwF,OAAA,SAAA9vF,GACA,MAAAP,WAAAjG,QAGAs2F,EAAA9vF,EACAJ,GAHAkwF,GAMAlwF,EAkBA,QAAAk0F,GAAAz6F,GACAA,EAAA2C,QAAAD,QAAA,SAAAzC,GACA,GAAA2C,GAAA5C,EAAA4C,KAAA3C,EACAsB,GAAAkE,IAAA7C,EAAA,UAAA5C,EAAAE,SAAAD,GAAAE,SACAyC,EAAAM,MAAAjD,GAGAsB,EAAAkE,IAAA7C,EAAA,aACArB,EAAA89E,SAAAz8E,GACAozE,YAAApzE,EAAAo4F,SACA/kB,aAAArzE,EAAAo4F,WAIAz5F,EAAAkE,IAAA7C,EAAA,aACArB,EAAA89E,SAAAz8E,GACAmzE,WAAAnzE,EAAAq4F,SACAnlB,cAAAlzE,EAAAq4F,WAIA15F,EAAAkE,IAAA7C,EAAA,YACArB,EAAA89E,SAAAz8E,GACAozE,YAAApzE,EAAAwS,QACA6gE,aAAArzE,EAAAwS,QACA2gE,WAAAnzE,EAAAwS,QACA0gE,cAAAlzE,EAAAwS,UAIA7T,EAAA89E,SAAAz8E,EAAAs4F,GAEA35F,EAAAs8C,MAAA,oEAAAr0C,GACA5G,EAAA4G,GAAA4lC,OAAAxsC,EAAA4G,MAIMjI,EAAAkE,IAAA7C,EAAA,WACNA,EAAAu4F,WAAAv4F,EAAA6B,OAEAlD,EAAAkE,IAAA7C,EAAA,YACAA,EAAAw4F,YAAAx4F,EAAA+B,UAIA3E,EAAA6C,QAAAH,QAAA,SAAArC,GACA,GAAA0C,GAAA/C,EAAA+C,KAAA1C,EACAkB,GAAAkE,IAAA1C,EAAA,WACAA,EAAAG,MAAA,IAEA3B,EAAA89E,SAAAt8E,EAAAs4F,KAIA,QAAAN,GAAA/6F,GACAuB,EAAAs8C,KAAA79C,EAAA2C,QAAA,SAAA1C,GACA,GAAA2C,GAAA5C,EAAA4C,KAAA3C,EAGMsB,GAAAkE,IAAA7C,EAAA,cACNA,EAAA6B,MAAA7B,EAAAu4F,iBAEAv4F,GAAA6B,MAGAlD,EAAAkE,IAAA7C,EAAA,eACAA,EAAA+B,OAAA/B,EAAAw4F,kBAEAx4F,GAAA+B,aAGA/B,GAAAu4F,iBACAv4F,GAAAw4F,cAIA,QAAAT,GAAA33D,EAAAxiC,GACA,GAAAa,GAAA2hC,EAAA9uB,OAAA,KAAA1T,EAIA,OAHAa,GAAAy6C,UACAz6C,EAAA2hC,EAAAhuB,OAAA,KAAAhU,KAAA,QAAAR,IAEAa,EAzLA,GAAAE,GAAA3B,EAAA,KACAm7D,EAAAn7D,EAAA,KAAAm7D,MAEAr7D,GAAAC,QAAA+4E,CAsFA,IAAAwiB,IACAllB,YAAA,GACAC,aAAA,GACAF,WAAA,GACAD,cAAA,GACAp0C,GAAA,EACAC,GAAA,EACAw2D,MAAA,QAGAkD,GACApE,UAAA,SACAK,gBAAA,W/EynfMgE,IACA,SAAU57F,EAAQC,EAASC,GAEjC,YgFrtfA,SAAAuE,GAAAkN,EAAAixB,EAAA1/B,GACA,GAAAw1F,GAAA/mF,EAAAwtB,OAAA,uBAAA79B,KAAA,KAAA4B,EAAA8+B,IAAA1gC,KAAA,KAAA4B,EAAA++B,IAAA3gC,KAAA,KAAAshC,EAAA79B,MAAA,GAAAzD,KAAA,KAAAshC,EAAA39B,OAAA,GAAA3D,KAAA,QAAAshC,EAAA79B,OAAAzD,KAAA,SAAAshC,EAAA39B,OAMA,OAJA/B,GAAA8tB,UAAA,SAAAtsB,GACA,MAAAF,GAAAtB,EAAAwB,IAGAg0F,EAGA,QAAAM,GAAArnF,EAAAixB,EAAA1/B,GACA,GAAA8+B,GAAAY,EAAA79B,MAAA,EACAk9B,EAAAW,EAAA39B,OAAA,EACAyzF,EAAA/mF,EAAAwtB,OAAA,0BAAA79B,KAAA,KAAAshC,EAAA79B,MAAA,GAAAzD,KAAA,KAAAshC,EAAA39B,OAAA,GAAA3D,KAAA,KAAA0gC,GAAA1gC,KAAA,KAAA2gC,EAMA,OAJA/+B,GAAA8tB,UAAA,SAAAtsB,GACA,MAAAqrE,GAAA7sE,EAAA8+B,EAAAC,EAAAv9B,IAGAg0F,EAGA,QAAAr7D,GAAA1rB,EAAAixB,EAAA1/B,GACA,GAAAqV,GAAA7U,KAAAC,IAAAi/B,EAAA79B,MAAA69B,EAAA39B,QAAA,EACAyzF,EAAA/mF,EAAAwtB,OAAA,yBAAA79B,KAAA,KAAAshC,EAAA79B,MAAA,GAAAzD,KAAA,KAAAshC,EAAA39B,OAAA,GAAA3D,KAAA,IAAAiX,EAMA,OAJArV,GAAA8tB,UAAA,SAAAtsB,GACA,MAAAmvE,GAAA3wE,EAAAqV,EAAA7T,IAGAg0F,EAMA,QAAAxzB,GAAAvzD,EAAAixB,EAAA1/B,GACA,GAAArC,GAAA+hC,EAAA79B,MAAArB,KAAA09C,MAAA,EACAp8C,EAAA49B,EAAA39B,OAAAvB,KAAA09C,MAAA,EACA10B,IAAiB/nB,EAAA,EAAAC,GAAAI,IAAiBL,GAAA9D,EAAA+D,EAAA,IAAiBD,EAAA,EAAAC,EAAAI,IAAgBL,EAAA9D,EAAA+D,EAAA,IACnE8zF,EAAA/mF,EAAAwtB,OAAA,0BAAA79B,KAAA,SAAAorB,EAAAzoB,IAAA,SAAAwZ,GACA,MAAAA,GAAA9Y,EAAA,IAAA8Y,EAAA7Y,IACGga,KAAA,KAMH,OAJA1b,GAAA8tB,UAAA,SAAAvT,GACA,MAAAw2D,GAAA/wE,EAAAwpB,EAAAjP,IAGAi7E,EA5DA,GAAAl0F,GAAAtE,EAAA,KACA6vE,EAAA7vE,EAAA,KACA2zE,EAAA3zE,EAAA,KACA+zE,EAAA/zE,EAAA,IAEAF,GAAAC,SACAwE,OACAu0F,UACA37D,SACA6nC,YhF4xfM22B,IACA,SAAU77F,EAAQC,EAASC,GAEjC,YiFxyfAF,GAAAC,QAAA,SjF+yfM67F,IACA,SAAU97F,EAAQC,EAASC,GkF/yfjC,GAAA67F,GAAA77F,EAAA,IACA,iBAAA67F,SAAA/7F,EAAAuG,EAAAw1F,EAAA,MACAA,EAAAC,SAAAh8F,EAAAC,QAAA87F,EAAAC,OAEA97F,GAAA,gBAAA67F,GAAA,IlFwzfME,IACA,SAAUj8F,EAAQC,GmFh0fxBD,EAAAC,SAAgB+4E,OAAA,WAAmB,GAAAkjB,GAAA5xF,KAAa6xF,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,CAC1E,OAAAE,GAAA,OACAE,IAAA,SACAC,YAAA,sCACGH,EAAA,OACHG,YAAA,YACGH,EAAA,OACHG,YAAA,aACGH,EAAA,OACHE,IAAA,MACAn6F,OACA2C,MAAA,OACAE,OAAA,UAEGo3F,EAAA,KACHI,aACA/zD,UAAA,iCAGCg0D","file":"static/js/0.86552f2f98fbcb939462.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 116:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n/* styles */\n__webpack_require__(480)\n\nvar Component = __webpack_require__(3)(\n  /* script */\n  __webpack_require__(419),\n  /* template */\n  __webpack_require__(484),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n/***/ }),\n\n/***/ 396:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _ = __webpack_require__(400\n\n// Public utility functions\n);module.exports = {\n  isSubgraph: isSubgraph,\n  edgeToId: edgeToId,\n  applyStyle: applyStyle,\n  applyClass: applyClass,\n  applyTransition: applyTransition\n\n  /*\n   * Returns true if the specified node in the graph is a subgraph node. A\n   * subgraph node is one that contains other nodes.\n   */\n};function isSubgraph(g, v) {\n  return !!g.children(v).length;\n}\n\nfunction edgeToId(e) {\n  return escapeId(e.v) + ':' + escapeId(e.w) + ':' + escapeId(e.name);\n}\n\nvar ID_DELIM = /:/g;\nfunction escapeId(str) {\n  return str ? String(str).replace(ID_DELIM, '\\\\:') : '';\n}\n\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr('style', styleFn);\n  }\n}\n\nfunction applyClass(dom, classFn, otherClasses) {\n  if (classFn) {\n    dom.attr('class', classFn).attr('class', otherClasses + ' ' + dom.attr('class'));\n  }\n}\n\nfunction applyTransition(selection, g) {\n  var graph = g.graph();\n\n  if (_.isPlainObject(graph)) {\n    var transition = graph.transition;\n    if (_.isFunction(transition)) {\n      return transition(selection);\n    }\n  }\n\n  return selection;\n}\n\n/***/ }),\n\n/***/ 397:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addDummyNode = addDummyNode;\nexports.simplify = simplify;\nexports.asNonCompoundGraph = asNonCompoundGraph;\nexports.successorWeights = successorWeights;\nexports.predecessorWeights = predecessorWeights;\nexports.intersectRect = intersectRect;\nexports.buildLayerMatrix = buildLayerMatrix;\nexports.normalizeRanks = normalizeRanks;\nexports.removeEmptyRanks = removeEmptyRanks;\nexports.addBorderNode = addBorderNode;\nexports.maxRank = maxRank;\nexports.partition = partition;\nexports.time = time;\nexports.notime = notime;\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _cienaGraphlib = __webpack_require__(398);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Adds a dummy node to the graph and return v.\n */\nfunction addDummyNode(g, type, attrs, name) {\n  var v;\n  do {\n    v = _lodash2.default.uniqueId(name);\n  } while (g.hasNode(v));\n\n  attrs.dummy = type;\n  g.setNode(v, attrs);\n  return v;\n}\n\n/*\n * Returns a new graph with only simple edges. Handles aggregation of data\n * associated with multi-edges.\n */\nfunction simplify(g) {\n  var simplified = new _cienaGraphlib.Graph().setGraph(g.graph());\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    simplified.setNode(v, g.node(v));\n  });\n  _lodash2.default.forEach(g.edges(), function (e) {\n    var simpleLabel = simplified.edge(e.v, e.w) || { weight: 0, minlen: 1 };\n    var label = g.edge(e);\n    simplified.setEdge(e.v, e.w, {\n      weight: simpleLabel.weight + label.weight,\n      minlen: Math.max(simpleLabel.minlen, label.minlen)\n    });\n  });\n  return simplified;\n}\n\nfunction asNonCompoundGraph(g) {\n  var simplified = new _cienaGraphlib.Graph({ multigraph: g.isMultigraph() }).setGraph(g.graph());\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    if (!g.children(v).length) {\n      simplified.setNode(v, g.node(v));\n    }\n  });\n  _lodash2.default.forEach(g.edges(), function (e) {\n    simplified.setEdge(e, g.edge(e));\n  });\n  return simplified;\n}\n\nfunction successorWeights(g) {\n  var weightMap = _lodash2.default.map(g.nodes(), function (v) {\n    var sucs = {};\n    _lodash2.default.forEach(g.outEdges(v), function (e) {\n      sucs[e.w] = (sucs[e.w] || 0) + g.edge(e).weight;\n    });\n    return sucs;\n  });\n  return _lodash2.default.zipObject(g.nodes(), weightMap);\n}\n\nfunction predecessorWeights(g) {\n  var weightMap = _lodash2.default.map(g.nodes(), function (v) {\n    var preds = {};\n    _lodash2.default.forEach(g.inEdges(v), function (e) {\n      preds[e.v] = (preds[e.v] || 0) + g.edge(e).weight;\n    });\n    return preds;\n  });\n  return _lodash2.default.zipObject(g.nodes(), weightMap);\n}\n\n/*\n * Finds where a line starting at point ({x, y}) would intersect a rectangle\n * ({x, y, width, height}) if it were pointing at the rectangle's center.\n */\nfunction intersectRect(rect, point) {\n  var x = rect.x;\n  var y = rect.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = rect.width / 2;\n  var h = rect.height / 2;\n\n  if (!dx && !dy) {\n    throw new Error('Not possible to find intersection inside of the rectangle');\n  }\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = w * dy / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n\n/*\n * Given a DAG with each node assigned \"rank\" and \"order\" properties, this\n * function will produce a matrix with the ids of each node.\n */\nfunction buildLayerMatrix(g) {\n  var layering = _lodash2.default.map(_lodash2.default.range(maxRank(g) + 1), function () {\n    return [];\n  });\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    var rank = node.rank;\n    if (!_lodash2.default.isUndefined(rank)) {\n      layering[rank][node.order] = v;\n    }\n  });\n  return layering;\n}\n\n/*\n * Adjusts the ranks for all nodes in the graph such that all nodes v have\n * rank(v) >= 0 and at least one node w has rank(w) = 0.\n */\nfunction normalizeRanks(g) {\n  var min = _lodash2.default.min(_lodash2.default.map(g.nodes(), function (v) {\n    return g.node(v).rank;\n  }));\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (_lodash2.default.has(node, 'rank')) {\n      node.rank -= min;\n    }\n  });\n}\n\nfunction removeEmptyRanks(g) {\n  // Ranks may not start at 0, so we need to offset them\n  var offset = _lodash2.default.min(_lodash2.default.map(g.nodes(), function (v) {\n    return g.node(v).rank;\n  }));\n\n  var layers = [];\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    var rank = g.node(v).rank - offset;\n    if (!layers[rank]) {\n      layers[rank] = [];\n    }\n    layers[rank].push(v);\n  });\n\n  var delta = 0;\n  var nodeRankFactor = g.graph().nodeRankFactor;\n  _lodash2.default.forEach(layers, function (vs, i) {\n    if (_lodash2.default.isUndefined(vs) && i % nodeRankFactor !== 0) {\n      --delta;\n    } else if (delta) {\n      _lodash2.default.forEach(vs, function (v) {\n        g.node(v).rank += delta;\n      });\n    }\n  });\n}\n\nfunction addBorderNode(g, prefix, rank, order) {\n  var node = {\n    width: 0,\n    height: 0\n  };\n  if (arguments.length >= 4) {\n    node.rank = rank;\n    node.order = order;\n  }\n  return addDummyNode(g, 'border', node, prefix);\n}\n\nfunction maxRank(g) {\n  return _lodash2.default.max(_lodash2.default.map(g.nodes(), function (v) {\n    var rank = g.node(v).rank;\n    if (!_lodash2.default.isUndefined(rank)) {\n      return rank;\n    }\n  }));\n}\n\n/*\n * Partition a collection into two groups: `lhs` and `rhs`. If the supplied\n * function returns true for an entry it goes into `lhs`. Otherwise it goes\n * into `rhs.\n */\nfunction partition(collection, fn) {\n  var result = { lhs: [], rhs: [] };\n  _lodash2.default.forEach(collection, function (value) {\n    if (fn(value)) {\n      result.lhs.push(value);\n    } else {\n      result.rhs.push(value);\n    }\n  });\n  return result;\n}\n\n/*\n * Returns a new function that wraps `fn` with a timer. The wrapper logs the\n * time it takes to execute the function.\n */\nfunction time(name, fn) {\n  var start = _lodash2.default.now();\n  try {\n    return fn();\n  } finally {\n    console.log(name + ' time: ' + (_lodash2.default.now() - start) + 'ms');\n  }\n}\n\nfunction notime(name, fn) {\n  return fn();\n}\n\nexports.default = {\n  addBorderNode: addBorderNode,\n  addDummyNode: addDummyNode,\n  asNonCompoundGraph: asNonCompoundGraph,\n  buildLayerMatrix: buildLayerMatrix,\n  intersectRect: intersectRect,\n  maxRank: maxRank,\n  partition: partition,\n  predecessorWeights: predecessorWeights,\n  normalizeRanks: normalizeRanks,\n  notime: notime,\n  removeEmptyRanks: removeEmptyRanks,\n  simplify: simplify,\n  successorWeights: successorWeights,\n  time: time\n};\n\n/***/ }),\n\n/***/ 398:\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * Copyright (c) 2014, Chris Pettitt\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its contributors\n * may be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n var alg = __webpack_require__(450)\n var Graph = __webpack_require__(403)\n var json = __webpack_require__(455)\n\n module.exports = {\n   alg: alg,\n   Graph: Graph,\n   json: json\n }\n\n\n/***/ }),\n\n/***/ 399:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = __webpack_require__(401) || window.d3;\n\n/***/ }),\n\n/***/ 400:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = __webpack_require__(2) || window._;\n\n/***/ }),\n\n/***/ 401:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n/***/ }),\n\n/***/ 402:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.longestPath = longestPath;\nexports.slack = slack;\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Initializes ranks for the input graph using the longest path algorithm. This\n * algorithm scales well and is fast in practice, it yields rather poor\n * solutions. Nodes are pushed to the lowest layer possible, leaving the bottom\n * ranks wide and leaving edges longer than necessary. However, due to its\n * speed, this algorithm is good for getting an initial ranking that can be fed\n * into other algorithms.\n *\n * This algorithm does not normalize layers because it will be used by other\n * algorithms in most cases. If using this algorithm directly, be sure to\n * run normalize at the end.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG.\n *    2. Input graph node labels can be assigned properties.\n *\n * Post-conditions:\n *\n *    1. Each node will be assign an (unnormalized) \"rank\" property.\n */\nfunction longestPath(g) {\n  var visited = {};\n\n  function dfs(v) {\n    var label = g.node(v);\n    if (_lodash2.default.has(visited, v)) {\n      return label.rank;\n    }\n    visited[v] = true;\n\n    var rank = _lodash2.default.min(_lodash2.default.map(g.outEdges(v), function (e) {\n      return dfs(e.w) - g.edge(e).minlen;\n    }));\n\n    if (rank === Number.POSITIVE_INFINITY || // return value of _.map([]) for Lodash 3\n    rank === undefined || // return value of _.map([]) for Lodash 4\n    rank === null // return value of _.map([null])\n    ) {\n        rank = 0;\n      }\n\n    return label.rank = rank;\n  }\n\n  _lodash2.default.forEach(g.sources(), dfs);\n}\n\n/*\n * Returns the amount of slack for the given edge. The slack is defined as the\n * difference between the length of the edge and its minimum length.\n */\nfunction slack(g, e) {\n  return g.node(e.w).rank - g.node(e.v).rank - g.edge(e).minlen;\n}\n\n/***/ }),\n\n/***/ 403:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DEFAULT_EDGE_NAME = '\\x00';\nvar GRAPH_NODE = '\\x00';\nvar EDGE_KEY_DELIM = '\\x01';\n\n// Implementation notes:\n//\n//  * Node id query functions should return string ids for the nodes\n//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n//    composed of enough information to uniquely identify an edge: {v, w, name}.\n//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n//    reference edges. This is because we need a performant way to look these\n//    edges up and, object properties, which have string keys, are the closest\n//    we're going to get to a performant hashtable in JavaScript.\n\nfunction Graph(opts) {\n  this._isDirected = _lodash2.default.has(opts, 'directed') ? opts.directed : true;\n  this._isMultigraph = _lodash2.default.has(opts, 'multigraph') ? opts.multigraph : false;\n  this._isCompound = _lodash2.default.has(opts, 'compound') ? opts.compound : false;\n\n  // Label for the graph itself\n  this._label = undefined;\n\n  // Defaults to be set when creating a new node\n  this._defaultNodeLabelFn = _lodash2.default.constant(undefined);\n\n  // Defaults to be set when creating a new edge\n  this._defaultEdgeLabelFn = _lodash2.default.constant(undefined);\n\n  // v -> label\n  this._nodes = {};\n\n  if (this._isCompound) {\n    // v -> parent\n    this._parent = {};\n\n    // v -> children\n    this._children = {};\n    this._children[GRAPH_NODE] = {};\n  }\n\n  // v -> edgeObj\n  this._in = {};\n\n  // u -> v -> Number\n  this._preds = {};\n\n  // v -> edgeObj\n  this._out = {};\n\n  // v -> w -> Number\n  this._sucs = {};\n\n  // e -> edgeObj\n  this._edgeObjs = {};\n\n  // e -> label\n  this._edgeLabels = {};\n}\n\n/* Number of nodes in the graph. Should only be changed by the implementation. */\nGraph.prototype._nodeCount = 0;\n\n/* Number of edges in the graph. Should only be changed by the implementation. */\nGraph.prototype._edgeCount = 0;\n\n/* === Graph functions ========= */\n\nGraph.prototype.isDirected = function () {\n  return this._isDirected;\n};\n\nGraph.prototype.isMultigraph = function () {\n  return this._isMultigraph;\n};\n\nGraph.prototype.isCompound = function () {\n  return this._isCompound;\n};\n\nGraph.prototype.setGraph = function (label) {\n  this._label = label;\n  return this;\n};\n\nGraph.prototype.graph = function () {\n  return this._label;\n};\n\n/* === Node functions ========== */\n\nGraph.prototype.setDefaultNodeLabel = function (newDefault) {\n  if (!_lodash2.default.isFunction(newDefault)) {\n    newDefault = _lodash2.default.constant(newDefault);\n  }\n  this._defaultNodeLabelFn = newDefault;\n  return this;\n};\n\nGraph.prototype.nodeCount = function () {\n  return this._nodeCount;\n};\n\nGraph.prototype.nodes = function () {\n  return _lodash2.default.keys(this._nodes);\n};\n\nGraph.prototype.sources = function () {\n  return _lodash2.default.filter(this.nodes(), _lodash2.default.bind(function (v) {\n    return _lodash2.default.isEmpty(this._in[v]);\n  }, this));\n};\n\nGraph.prototype.sinks = function () {\n  return _lodash2.default.filter(this.nodes(), _lodash2.default.bind(function (v) {\n    return _lodash2.default.isEmpty(this._out[v]);\n  }, this));\n};\n\nGraph.prototype.setNodes = function (vs, value) {\n  var args = arguments;\n  _lodash2.default.each(vs, _lodash2.default.bind(function (v) {\n    if (args.length > 1) {\n      this.setNode(v, value);\n    } else {\n      this.setNode(v);\n    }\n  }, this));\n  return this;\n};\n\nGraph.prototype.setNode = function (v, value) {\n  if (_lodash2.default.has(this._nodes, v)) {\n    if (arguments.length > 1) {\n      this._nodes[v] = value;\n    }\n    return this;\n  }\n\n  this._nodes[v] = arguments.length > 1 ? value : this._defaultNodeLabelFn(v);\n  if (this._isCompound) {\n    this._parent[v] = GRAPH_NODE;\n    this._children[v] = {};\n    this._children[GRAPH_NODE][v] = true;\n  }\n  this._in[v] = {};\n  this._preds[v] = {};\n  this._out[v] = {};\n  this._sucs[v] = {};\n  ++this._nodeCount;\n  return this;\n};\n\nGraph.prototype.node = function (v) {\n  return this._nodes[v];\n};\n\nGraph.prototype.hasNode = function (v) {\n  return _lodash2.default.has(this._nodes, v);\n};\n\nGraph.prototype.removeNode = function (v) {\n  var self = this;\n  if (_lodash2.default.has(this._nodes, v)) {\n    var removeEdge = function removeEdge(e) {\n      self.removeEdge(self._edgeObjs[e]);\n    };\n    delete this._nodes[v];\n    if (this._isCompound) {\n      this._removeFromParentsChildList(v);\n      delete this._parent[v];\n      _lodash2.default.each(this.children(v), _lodash2.default.bind(function (child) {\n        this.setParent(child);\n      }, this));\n      delete this._children[v];\n    }\n    _lodash2.default.each(_lodash2.default.keys(this._in[v]), removeEdge);\n    delete this._in[v];\n    delete this._preds[v];\n    _lodash2.default.each(_lodash2.default.keys(this._out[v]), removeEdge);\n    delete this._out[v];\n    delete this._sucs[v];\n    --this._nodeCount;\n  }\n  return this;\n};\n\nGraph.prototype.setParent = function (v, parent) {\n  if (!this._isCompound) {\n    throw new Error('Cannot set parent in a non-compound graph');\n  }\n\n  if (_lodash2.default.isUndefined(parent)) {\n    parent = GRAPH_NODE;\n  } else {\n    // Coerce parent to string\n    parent += '';\n    for (var ancestor = parent; !_lodash2.default.isUndefined(ancestor); ancestor = this.parent(ancestor)) {\n      if (ancestor === v) {\n        throw new Error('Setting ' + parent + ' as parent of ' + v + ' would create create a cycle');\n      }\n    }\n\n    this.setNode(parent);\n  }\n\n  this.setNode(v);\n  this._removeFromParentsChildList(v);\n  this._parent[v] = parent;\n  this._children[parent][v] = true;\n  return this;\n};\n\nGraph.prototype._removeFromParentsChildList = function (v) {\n  delete this._children[this._parent[v]][v];\n};\n\nGraph.prototype.parent = function (v) {\n  if (this._isCompound) {\n    var parent = this._parent[v];\n    if (parent !== GRAPH_NODE) {\n      return parent;\n    }\n  }\n};\n\nGraph.prototype.children = function (v) {\n  if (_lodash2.default.isUndefined(v)) {\n    v = GRAPH_NODE;\n  }\n\n  if (this._isCompound) {\n    var children = this._children[v];\n    if (children) {\n      return _lodash2.default.keys(children);\n    }\n  } else if (v === GRAPH_NODE) {\n    return this.nodes();\n  } else if (this.hasNode(v)) {\n    return [];\n  }\n};\n\nGraph.prototype.predecessors = function (v) {\n  var predsV = this._preds[v];\n  if (predsV) {\n    return _lodash2.default.keys(predsV);\n  }\n};\n\nGraph.prototype.successors = function (v) {\n  var sucsV = this._sucs[v];\n  if (sucsV) {\n    return _lodash2.default.keys(sucsV);\n  }\n};\n\nGraph.prototype.neighbors = function (v) {\n  var preds = this.predecessors(v);\n  if (preds) {\n    return _lodash2.default.union(preds, this.successors(v));\n  }\n};\n\nGraph.prototype.filterNodes = function (filter) {\n  var copy = new this.constructor({\n    directed: this._isDirected,\n    multigraph: this._isMultigraph,\n    compound: this._isCompound\n  });\n\n  copy.setGraph(this.graph());\n\n  _lodash2.default.each(this._nodes, _lodash2.default.bind(function (value, v) {\n    if (filter(v)) {\n      copy.setNode(v, value);\n    }\n  }, this));\n\n  _lodash2.default.each(this._edgeObjs, _lodash2.default.bind(function (e) {\n    if (copy.hasNode(e.v) && copy.hasNode(e.w)) {\n      copy.setEdge(e, this.edge(e));\n    }\n  }, this));\n\n  var self = this;\n  var parents = {};\n  function findParent(v) {\n    var parent = self.parent(v);\n    if (parent === undefined || copy.hasNode(parent)) {\n      parents[v] = parent;\n      return parent;\n    } else if (parent in parents) {\n      return parents[parent];\n    } else {\n      return findParent(parent);\n    }\n  }\n\n  if (this._isCompound) {\n    _lodash2.default.each(copy.nodes(), function (v) {\n      copy.setParent(v, findParent(v));\n    });\n  }\n\n  return copy;\n};\n\n/* === Edge functions ========== */\n\nGraph.prototype.setDefaultEdgeLabel = function (newDefault) {\n  if (!_lodash2.default.isFunction(newDefault)) {\n    newDefault = _lodash2.default.constant(newDefault);\n  }\n  this._defaultEdgeLabelFn = newDefault;\n  return this;\n};\n\nGraph.prototype.edgeCount = function () {\n  return this._edgeCount;\n};\n\nGraph.prototype.edges = function () {\n  return _lodash2.default.values(this._edgeObjs);\n};\n\nGraph.prototype.setPath = function (vs, value) {\n  var self = this;\n  var args = arguments;\n  _lodash2.default.reduce(vs, function (v, w) {\n    if (args.length > 1) {\n      self.setEdge(v, w, value);\n    } else {\n      self.setEdge(v, w);\n    }\n    return w;\n  });\n  return this;\n};\n\n/*\n * setEdge(v, w, [value, [name]])\n * setEdge({ v, w, [name] }, [value])\n */\nGraph.prototype.setEdge = function () {\n  var v, w, name, value;\n  var valueSpecified = false;\n  var arg0 = arguments[0];\n\n  if ((typeof arg0 === 'undefined' ? 'undefined' : _typeof(arg0)) === 'object' && arg0 !== null && 'v' in arg0) {\n    v = arg0.v;\n    w = arg0.w;\n    name = arg0.name;\n    if (arguments.length === 2) {\n      value = arguments[1];\n      valueSpecified = true;\n    }\n  } else {\n    v = arg0;\n    w = arguments[1];\n    name = arguments[3];\n    if (arguments.length > 2) {\n      value = arguments[2];\n      valueSpecified = true;\n    }\n  }\n\n  v = '' + v;\n  w = '' + w;\n  if (!_lodash2.default.isUndefined(name)) {\n    name = '' + name;\n  }\n\n  var e = edgeArgsToId(this._isDirected, v, w, name);\n  if (_lodash2.default.has(this._edgeLabels, e)) {\n    if (valueSpecified) {\n      this._edgeLabels[e] = value;\n    }\n    return this;\n  }\n\n  if (!_lodash2.default.isUndefined(name) && !this._isMultigraph) {\n    throw new Error('Cannot set a named edge when isMultigraph = false');\n  }\n\n  // It didn't exist, so we need to create it.\n  // First ensure the nodes exist.\n  this.setNode(v);\n  this.setNode(w);\n\n  this._edgeLabels[e] = valueSpecified ? value : this._defaultEdgeLabelFn(v, w, name);\n\n  var edgeObj = edgeArgsToObj(this._isDirected, v, w, name);\n  // Ensure we add undirected edges in a consistent way.\n  v = edgeObj.v;\n  w = edgeObj.w;\n\n  Object.freeze(edgeObj);\n  this._edgeObjs[e] = edgeObj;\n  incrementOrInitEntry(this._preds[w], v);\n  incrementOrInitEntry(this._sucs[v], w);\n  this._in[w][e] = edgeObj;\n  this._out[v][e] = edgeObj;\n  this._edgeCount++;\n  return this;\n};\n\nGraph.prototype.edge = function (v, w, name) {\n  var e = arguments.length === 1 ? edgeObjToId(this._isDirected, arguments[0]) : edgeArgsToId(this._isDirected, v, w, name);\n  return this._edgeLabels[e];\n};\n\nGraph.prototype.hasEdge = function (v, w, name) {\n  var e = arguments.length === 1 ? edgeObjToId(this._isDirected, arguments[0]) : edgeArgsToId(this._isDirected, v, w, name);\n  return _lodash2.default.has(this._edgeLabels, e);\n};\n\nGraph.prototype.removeEdge = function (v, w, name) {\n  var e = arguments.length === 1 ? edgeObjToId(this._isDirected, arguments[0]) : edgeArgsToId(this._isDirected, v, w, name);\n  var edge = this._edgeObjs[e];\n  if (edge) {\n    v = edge.v;\n    w = edge.w;\n    delete this._edgeLabels[e];\n    delete this._edgeObjs[e];\n    decrementOrRemoveEntry(this._preds[w], v);\n    decrementOrRemoveEntry(this._sucs[v], w);\n    delete this._in[w][e];\n    delete this._out[v][e];\n    this._edgeCount--;\n  }\n  return this;\n};\n\nGraph.prototype.inEdges = function (v, u) {\n  var inV = this._in[v];\n  if (inV) {\n    var edges = _lodash2.default.values(inV);\n    if (!u) {\n      return edges;\n    }\n    return _lodash2.default.filter(edges, function (edge) {\n      return edge.v === u;\n    });\n  }\n};\n\nGraph.prototype.outEdges = function (v, w) {\n  var outV = this._out[v];\n  if (outV) {\n    var edges = _lodash2.default.values(outV);\n    if (!w) {\n      return edges;\n    }\n    return _lodash2.default.filter(edges, function (edge) {\n      return edge.w === w;\n    });\n  }\n};\n\nGraph.prototype.nodeEdges = function (v, w) {\n  var inEdges = this.inEdges(v, w);\n  if (inEdges) {\n    return inEdges.concat(this.outEdges(v, w));\n  }\n};\n\nfunction incrementOrInitEntry(map, k) {\n  if (map[k]) {\n    map[k]++;\n  } else {\n    map[k] = 1;\n  }\n}\n\nfunction decrementOrRemoveEntry(map, k) {\n  if (! --map[k]) {\n    delete map[k];\n  }\n}\n\nfunction edgeArgsToId(isDirected, v_, w_, name) {\n  var v = '' + v_;\n  var w = '' + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return v + EDGE_KEY_DELIM + w + EDGE_KEY_DELIM + (_lodash2.default.isUndefined(name) ? DEFAULT_EDGE_NAME : name);\n}\n\nfunction edgeArgsToObj(isDirected, v_, w_, name) {\n  var v = '' + v_;\n  var w = '' + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  var edgeObj = { v: v, w: w };\n  if (name) {\n    edgeObj.name = name;\n  }\n  return edgeObj;\n}\n\nfunction edgeObjToId(isDirected, edgeObj) {\n  return edgeArgsToId(isDirected, edgeObj.v, edgeObj.w, edgeObj.name);\n}\n\nexports.default = Graph;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 404:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = intersectEllipse;\n\nfunction intersectEllipse(node, rx, ry, point) {\n  // Formulae from: http://mathworld.wolfram.com/Ellipse-LineIntersection.html\n\n  var cx = node.x;\n  var cy = node.y;\n\n  var px = cx - point.x;\n  var py = cy - point.y;\n\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n\n  var dx = Math.abs(rx * ry * px / det);\n  if (point.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs(rx * ry * py / det);\n  if (point.y < cy) {\n    dy = -dy;\n  }\n\n  return { x: cx + dx, y: cy + dy };\n}\n\n/***/ }),\n\n/***/ 405:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar addTextLabel = __webpack_require__(473);\nvar addHtmlLabel = __webpack_require__(471);\nvar addSVGLabel = __webpack_require__(472);\n\nmodule.exports = addLabel;\n\nfunction addLabel(root, node, location) {\n  var label = node.label;\n  var labelSvg = root.append('g'\n\n  // Allow the label to be a string, a function that returns a DOM element, or\n  // a DOM element itself.\n  );if (node.labelType === 'svg') {\n    addSVGLabel(labelSvg, node);\n  } else if (typeof label !== 'string' || node.labelType === 'html') {\n    addHtmlLabel(labelSvg, node);\n  } else {\n    addTextLabel(labelSvg, node);\n  }\n\n  var labelBBox = labelSvg.node().getBBox();\n  var y;\n  switch (location) {\n    case 'top':\n      y = -node.height / 2;\n      break;\n    case 'bottom':\n      y = node.height / 2 - labelBBox.height;\n      break;\n    default:\n      y = -labelBBox.height / 2;\n  }\n  labelSvg.attr('transform', 'translate(' + -labelBBox.width / 2 + ',' + y + ')');\n\n  return labelSvg;\n}\n\n/***/ }),\n\n/***/ 406:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = feasibleTree;\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _cienaGraphlib = __webpack_require__(398);\n\nvar _util = __webpack_require__(402);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Finds a maximal tree of tight edges and returns the number of nodes in the\n * tree.\n */\nfunction tightTree(t, g) {\n  function dfs(v) {\n    _lodash2.default.forEach(g.nodeEdges(v), function (e) {\n      var edgeV = e.v;\n      var w = v === edgeV ? e.w : edgeV;\n      if (!t.hasNode(w) && !(0, _util.slack)(g, e)) {\n        t.setNode(w, {});\n        t.setEdge(v, w, {});\n        dfs(w);\n      }\n    });\n  }\n\n  _lodash2.default.forEach(t.nodes(), dfs);\n  return t.nodeCount();\n}\n\n/*\n * Finds the edge with the smallest slack that is incident on tree and returns\n * it.\n */\nfunction findMinSlackEdge(t, g) {\n  return _lodash2.default.minBy(g.edges(), function (e) {\n    if (t.hasNode(e.v) !== t.hasNode(e.w)) {\n      return (0, _util.slack)(g, e);\n    }\n  });\n}\n\nfunction shiftRanks(t, g, delta) {\n  _lodash2.default.forEach(t.nodes(), function (v) {\n    g.node(v).rank += delta;\n  });\n}\n\n/*\n * Constructs a spanning tree with tight edges and adjusted the input node's\n * ranks to achieve this. A tight edge is one that is has a length that matches\n * its \"minlen\" attribute.\n *\n * The basic structure for this function is derived from Gansner, et al., \"A\n * Technique for Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a DAG.\n *    2. Graph must be connected.\n *    3. Graph must have at least one node.\n *    5. Graph nodes must have been previously assigned a \"rank\" property that\n *       respects the \"minlen\" property of incident edges.\n *    6. Graph edges must have a \"minlen\" property.\n *\n * Post-conditions:\n *\n *    - Graph nodes will have their rank adjusted to ensure that all edges are\n *      tight.\n *\n * Returns a tree (undirected graph) that is constructed using only \"tight\"\n * edges.\n */\nfunction feasibleTree(g) {\n  var t = new _cienaGraphlib.Graph({ directed: false });\n\n  // Choose arbitrary node from which to start our tree\n  var start = g.nodes()[0];\n  var size = g.nodeCount();\n  t.setNode(start, {});\n\n  var edge, delta;\n  while (tightTree(t, g) < size) {\n    edge = findMinSlackEdge(t, g);\n    delta = t.hasNode(edge.v) ? (0, _util.slack)(g, edge) : -(0, _util.slack)(g, edge);\n    shiftRanks(t, g, delta);\n  }\n\n  return t;\n}\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 407:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (g, vs, order) {\n  if (!_lodash2.default.isArray(vs)) {\n    vs = [vs];\n  }\n\n  var navigation = (g.isDirected() ? g.successors : g.neighbors).bind(g);\n\n  var acc = [];\n  var visited = {};\n  _lodash2.default.each(vs, function (v) {\n    if (!g.hasNode(v)) {\n      throw new Error('Graph does not have node: ' + v);\n    }\n\n    doDfs(g, v, order === 'post', visited, navigation, acc);\n  });\n  return acc;\n};\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction doDfs(g, v, postorder, visited, navigation, acc) {\n  if (!_lodash2.default.has(visited, v)) {\n    visited[v] = true;\n\n    if (!postorder) {\n      acc.push(v);\n    }\n    _lodash2.default.each(navigation(v), function (w) {\n      doDfs(g, w, postorder, visited, navigation, acc);\n    });\n    if (postorder) {\n      acc.push(v);\n    }\n  }\n}\n\n/*\n * A helper that preforms a pre- or post-order traversal on the input graph\n * and returns the nodes in the order they were visited. If the graph is\n * undirected then this algorithm will navigate using neighbors. If the graph\n * is directed then this algorithm will navigate using successors.\n *\n * Order must be one of \"pre\" or \"post\".\n */\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 408:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (g, source, weightFn, edgeFn) {\n  weightFn = weightFn || DEFAULT_WEIGHT_FUNC;\n  edgeFn = edgeFn || function (v) {\n    return g.outEdges(v);\n  };\n  return runDijkstra(g, String(source), weightFn, edgeFn);\n};\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _priorityQueue = __webpack_require__(411);\n\nvar _priorityQueue2 = _interopRequireDefault(_priorityQueue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DEFAULT_WEIGHT_FUNC = _lodash2.default.constant(1);\n\nfunction runDijkstra(g, source, weightFn, edgeFn) {\n  var results = {};\n  var pq = new _priorityQueue2.default();\n  var v, vEntry;\n\n  var updateNeighbors = function updateNeighbors(edge) {\n    var w = edge.v !== v ? edge.v : edge.w;\n    var wEntry = results[w];\n    var weight = weightFn(edge);\n    var distance = vEntry.distance + weight;\n\n    if (weight < 0) {\n      throw new Error('dijkstra does not allow negative edge weights. ' + 'Bad edge: ' + edge + ' Weight: ' + weight);\n    }\n\n    if (distance < wEntry.distance) {\n      wEntry.distance = distance;\n      wEntry.predecessor = v;\n      pq.decrease(w, distance);\n    }\n  };\n\n  g.nodes().forEach(function (v) {\n    var distance = v === source ? 0 : Number.POSITIVE_INFINITY;\n    results[v] = { distance: distance };\n    pq.add(v, distance);\n  });\n\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n    vEntry = results[v];\n    if (vEntry.distance === Number.POSITIVE_INFINITY) {\n      break;\n    }\n\n    edgeFn(v).forEach(updateNeighbors);\n  }\n\n  return results;\n}\n\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 409:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (g) {\n  var index = 0;\n  var stack = [];\n  var visited = {}; // node id -> { onStack, lowlink, index }\n  var results = [];\n\n  function dfs(v) {\n    var entry = visited[v] = {\n      onStack: true,\n      lowlink: index,\n      index: index++\n    };\n    stack.push(v);\n\n    g.successors(v).forEach(function (w) {\n      if (!_lodash2.default.has(visited, w)) {\n        dfs(w);\n        entry.lowlink = Math.min(entry.lowlink, visited[w].lowlink);\n      } else if (visited[w].onStack) {\n        entry.lowlink = Math.min(entry.lowlink, visited[w].index);\n      }\n    });\n\n    if (entry.lowlink === entry.index) {\n      var cmpt = [];\n      var w;\n      do {\n        w = stack.pop();\n        visited[w].onStack = false;\n        cmpt.push(w);\n      } while (v !== w);\n      results.push(cmpt);\n    }\n  }\n\n  g.nodes().forEach(function (v) {\n    if (!_lodash2.default.has(visited, v)) {\n      dfs(v);\n    }\n  });\n\n  return results;\n};\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 410:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction CycleException() {}\n\nfunction topsort(g) {\n  var visited = {};\n  var stack = {};\n  var results = [];\n\n  function visit(node) {\n    if (_lodash2.default.has(stack, node)) {\n      throw new CycleException();\n    }\n\n    if (!_lodash2.default.has(visited, node)) {\n      stack[node] = true;\n      visited[node] = true;\n      _lodash2.default.each(g.predecessors(node), visit);\n      delete stack[node];\n      results.push(node);\n    }\n  }\n\n  _lodash2.default.each(g.sinks(), visit);\n\n  if (_lodash2.default.size(visited) !== g.nodeCount()) {\n    throw new CycleException();\n  }\n\n  return results;\n}\n\ntopsort.CycleException = CycleException;\n\nexports.default = topsort;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 411:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A min-priority queue data structure. This algorithm is derived from Cormen,\n * et al., \"Introduction to Algorithms\". The basic idea of a min-priority\n * queue is that you can efficiently (in O(1) time) get the smallest key in\n * the queue. Adding and removing elements takes O(log n) time. A key can\n * have its priority decreased in O(log n) time.\n */\nfunction PriorityQueue() {\n  this._arr = [];\n  this._keyIndices = {};\n}\n\n/**\n * Returns the number of elements in the queue. Takes `O(1)` time.\n */\nPriorityQueue.prototype.size = function () {\n  return this._arr.length;\n};\n\n/**\n * Returns the keys that are in the queue. Takes `O(n)` time.\n */\nPriorityQueue.prototype.keys = function () {\n  return this._arr.map(function (x) {\n    return x.key;\n  });\n};\n\n/**\n * Returns `true` if **key** is in the queue and `false` if not.\n */\nPriorityQueue.prototype.has = function (key) {\n  return _lodash2.default.has(this._keyIndices, key);\n};\n\n/**\n * Returns the priority for **key**. If **key** is not present in the queue\n * then this function returns `undefined`. Takes `O(1)` time.\n *\n * @param {Object} key\n */\nPriorityQueue.prototype.priority = function (key) {\n  var index = this._keyIndices[key];\n  if (index !== undefined) {\n    return this._arr[index].priority;\n  }\n};\n\n/**\n * Returns the key for the minimum element in this queue. If the queue is\n * empty this function throws an Error. Takes `O(1)` time.\n */\nPriorityQueue.prototype.min = function () {\n  if (this.size() === 0) {\n    throw new Error('Queue underflow');\n  }\n  return this._arr[0].key;\n};\n\n/**\n * Inserts a new key into the priority queue. If the key already exists in\n * the queue this function returns `false`; otherwise it will return `true`.\n * Takes `O(n)` time.\n *\n * @param {Object} key the key to add\n * @param {Number} priority the initial priority for the key\n */\nPriorityQueue.prototype.add = function (key, priority) {\n  var keyIndices = this._keyIndices;\n  key = String(key);\n  if (!_lodash2.default.has(keyIndices, key)) {\n    var arr = this._arr;\n    var index = arr.length;\n    keyIndices[key] = index;\n    arr.push({ key: key, priority: priority });\n    this._decrease(index);\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes and returns the smallest key in the queue. Takes `O(log n)` time.\n */\nPriorityQueue.prototype.removeMin = function () {\n  this._swap(0, this._arr.length - 1);\n  var min = this._arr.pop();\n  delete this._keyIndices[min.key];\n  this._heapify(0);\n  return min.key;\n};\n\n/**\n * Decreases the priority for **key** to **priority**. If the new priority is\n * greater than the previous priority, this function will throw an Error.\n *\n * @param {Object} key the key for which to raise priority\n * @param {Number} priority the new priority for the key\n */\nPriorityQueue.prototype.decrease = function (key, priority) {\n  var index = this._keyIndices[key];\n  if (priority > this._arr[index].priority) {\n    throw new Error('New priority is greater than current priority. ' + 'Key: ' + key + ' Old: ' + this._arr[index].priority + ' New: ' + priority);\n  }\n  this._arr[index].priority = priority;\n  this._decrease(index);\n};\n\nPriorityQueue.prototype._heapify = function (i) {\n  var arr = this._arr;\n  var l = 2 * i;\n  var r = l + 1;\n  var largest = i;\n  if (l < arr.length) {\n    largest = arr[l].priority < arr[largest].priority ? l : largest;\n    if (r < arr.length) {\n      largest = arr[r].priority < arr[largest].priority ? r : largest;\n    }\n    if (largest !== i) {\n      this._swap(i, largest);\n      this._heapify(largest);\n    }\n  }\n};\n\nPriorityQueue.prototype._decrease = function (index) {\n  var arr = this._arr;\n  var priority = arr[index].priority;\n  var parent;\n  while (index !== 0) {\n    parent = index >> 1;\n    if (arr[parent].priority < priority) {\n      break;\n    }\n    this._swap(index, parent);\n    index = parent;\n  }\n};\n\nPriorityQueue.prototype._swap = function (i, j) {\n  var arr = this._arr;\n  var keyIndices = this._keyIndices;\n  var origArrI = arr[i];\n  var origArrJ = arr[j];\n  arr[i] = origArrJ;\n  arr[j] = origArrI;\n  keyIndices[origArrJ.key] = i;\n  keyIndices[origArrI.key] = j;\n};\n\nexports.default = PriorityQueue;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 412:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = __webpack_require__(422) || window.dagre;\n\n/***/ }),\n\n/***/ 413:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar intersectEllipse = __webpack_require__(404);\n\nmodule.exports = intersectCircle;\n\nfunction intersectCircle(node, rx, point) {\n  return intersectEllipse(node, rx, rx, point);\n}\n\n/***/ }),\n\n/***/ 414:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = intersectNode;\n\nfunction intersectNode(node, point) {\n  return node.intersect(point);\n}\n\n/***/ }),\n\n/***/ 415:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar intersectLine = __webpack_require__(470);\n\nmodule.exports = intersectPolygon;\n\n/*\n * Returns the point ({x, y}) at which the point argument intersects with the\n * node argument assuming that it has the shape specified by polygon.\n */\nfunction intersectPolygon(node, polyPoints, point) {\n  var x1 = node.x;\n  var y1 = node.y;\n\n  var intersections = [];\n\n  var minX = Number.POSITIVE_INFINITY;\n  var minY = Number.POSITIVE_INFINITY;\n  polyPoints.forEach(function (entry) {\n    minX = Math.min(minX, entry.x);\n    minY = Math.min(minY, entry.y);\n  });\n\n  var left = x1 - node.width / 2 - minX;\n  var top = y1 - node.height / 2 - minY;\n\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect = intersectLine(node, point, { x: left + p1.x, y: top + p1.y }, { x: left + p2.x, y: top + p2.y });\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n\n  if (!intersections.length) {\n    console.log('NO INTERSECTION FOUND, RETURN NODE CENTER', node);\n    return node;\n  }\n\n  if (intersections.length > 1) {\n    // More intersections, find the one nearest to edge end point\n    intersections.sort(function (p, q) {\n      var pdx = p.x - point.x;\n      var pdy = p.y - point.y;\n      var distp = Math.sqrt(pdx * pdx + pdy * pdy);\n\n      var qdx = q.x - point.x;\n      var qdy = q.y - point.y;\n      var distq = Math.sqrt(qdx * qdx + qdy * qdy);\n\n      return distp < distq ? -1 : distp === distq ? 0 : 1;\n    });\n  }\n  return intersections[0];\n}\n\n/***/ }),\n\n/***/ 416:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = intersectRect;\n\nfunction intersectRect(node, point) {\n  var x = node.x;\n  var y = node.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : w * dy / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n\n/***/ }),\n\n/***/ 419:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__ = __webpack_require__(421);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_dagre_d3__ = __webpack_require__(468);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_dagre_d3___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_dagre_d3__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_d3__ = __webpack_require__(401);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_d3___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_d3__);\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'dagre-d3-output',\n  computed: {\n    map: function map() {\n      this.updateSVG();\n      this.$store.getters.argdownData;\n      return this.$store.getters.map;\n    },\n    rankDir: function rankDir() {\n      this.updateSVG();\n      return this.$store.state.config.dagre.rankDir;\n    },\n    nodeSep: function nodeSep() {\n      this.updateSVG();\n      return this.$store.state.config.dagre.nodeSep;\n    },\n    rankSep: function rankSep() {\n      this.updateSVG();\n      return this.$store.state.config.dagre.rankSep;\n    }\n  },\n  watch: {\n    map: function map() {},\n    rankDir: function rankDir() {},\n    nodeSep: function nodeSep() {},\n    rankSep: function rankSep() {}\n  },\n  mounted: function mounted() {\n    this.updateSVG();\n  },\n  methods: {\n    addNode: function addNode(node, g, currentGroup) {\n      var nodeProperties = {\n        labelType: 'html',\n        class: node.type,\n        paddingBottom: 0,\n        paddingTop: 0,\n        paddingLeft: 0,\n        paddingRight: 0\n      };\n      nodeProperties.label = '<div class=\"node-label\">';\n      if (node.labelTitle) {\n        nodeProperties.label += '<h3>' + node.labelTitle + '</h3>';\n      }\n      if (node.labelText && (node.type === 'statement' || node.type === 'argument')) {\n        nodeProperties.label += '<p>' + node.labelText + '</p>';\n      }\n      if (node.tags) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default()(node.tags), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var tag = _step.value;\n\n            nodeProperties.class += ' ';\n            nodeProperties.class += this.$store.getters.tagsDictionary[tag].cssClass;\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n      nodeProperties.label += '</div>';\n\n      if (node.type === 'group') {\n        nodeProperties.clusterLabelPos = 'top';\n        nodeProperties.class += ' level-' + node.level;\n      }\n      g.setNode(node.id, nodeProperties);\n      if (currentGroup) {\n        g.setParent(node.id, currentGroup.id);\n      }\n      if (node.type === 'group') {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default()(node.nodes), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var child = _step2.value;\n\n            this.addNode(child, g, node);\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n    },\n    updateSVG: function updateSVG() {\n      var map = this.$store.getters.map;\n\n      if (!this.$refs.svg || !map || !map.nodes || !map.edges) {\n        return;\n      }\n\n      var g = new __WEBPACK_IMPORTED_MODULE_1_dagre_d3__[\"graphlib\"].Graph({ compound: true }).setGraph({\n        rankdir: this.$store.state.config.dagre.rankDir,\n        rankSep: this.$store.state.config.dagre.rankSep,\n        nodeSep: this.$store.state.config.dagre.nodeSep,\n        marginx: 20,\n        marginy: 20\n      }).setDefaultEdgeLabel(function () {\n        return {};\n      });\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default()(map.nodes), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var node = _step3.value;\n\n          this.addNode(node, g);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default()(map.edges), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var edge = _step4.value;\n\n          g.setEdge(edge.from.id, edge.to.id, { class: edge.type });\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      var nodes = g.nodes();\n\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default()(nodes), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var v = _step5.value;\n\n          var _node = g.node(v);\n\n          _node.rx = _node.ry = 5;\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      var render = new __WEBPACK_IMPORTED_MODULE_1_dagre_d3__[\"render\"]();\n      var svg = __WEBPACK_IMPORTED_MODULE_2_d3__[\"select\"](this.$refs.svg);\n      svg.selectAll('*').remove();\n\n      svg.append('g');\n      var svgGroup = svg.select('g');\n\n\n      var zoom = __WEBPACK_IMPORTED_MODULE_2_d3__[\"behavior\"].zoom().on('zoom', function () {\n        svgGroup.attr('transform', 'translate(' + __WEBPACK_IMPORTED_MODULE_2_d3__[\"event\"].translate + ')' + 'scale(' + __WEBPACK_IMPORTED_MODULE_2_d3__[\"event\"].scale + ')');\n      });\n      svg.call(zoom);\n\n      render(svgGroup, g);\n\n      var initialScale = 0.75;\n      var getSvgWidth = function getSvgWidth() {\n        var positionInfo = svg.node().getBoundingClientRect();\n        return positionInfo.width;\n      };\n      zoom.translate([(getSvgWidth() - g.graph().width * initialScale) / 2, 20]).scale(initialScale).event(svg);\n      svgGroup.attr('height', g.graph().height * initialScale + 40);\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 421:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(456), __esModule: true };\n\n/***/ }),\n\n/***/ 422:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"debug\", function() { return debug; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"util\", function() { return util; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_debug__ = __webpack_require__(427);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__lib_debug___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__lib_debug__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_layout__ = __webpack_require__(429);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__lib_layout___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__lib_layout__);\n/* harmony reexport (default from non-hamory) */ __webpack_require__.d(__webpack_exports__, \"layout\", function() { return __WEBPACK_IMPORTED_MODULE_1__lib_layout___default.a; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_util__ = __webpack_require__(397);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__lib_util___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__lib_util__);\n/*\nCopyright (c) 2012-2014 Chris Pettitt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\n\n\nvar debug = {\n  debugOrdering: __WEBPACK_IMPORTED_MODULE_0__lib_debug__[\"debugOrdering\"]\n}\n\n\n\n\n\nvar util = {\n  addBorderNode: __WEBPACK_IMPORTED_MODULE_2__lib_util__[\"addBorderNode\"],\n  addDummyNode: __WEBPACK_IMPORTED_MODULE_2__lib_util__[\"addDummyNode\"],\n  asNonCompoundGraph: __WEBPACK_IMPORTED_MODULE_2__lib_util__[\"asNonCompoundGraph\"],\n  buildLayerMatrix: __WEBPACK_IMPORTED_MODULE_2__lib_util__[\"buildLayerMatrix\"],\n  intersectRect: __WEBPACK_IMPORTED_MODULE_2__lib_util__[\"intersectRect\"],\n  maxRank: __WEBPACK_IMPORTED_MODULE_2__lib_util__[\"maxRank\"],\n  normalizeRanks: __WEBPACK_IMPORTED_MODULE_2__lib_util__[\"normalizeRanks\"],\n  notime: __WEBPACK_IMPORTED_MODULE_2__lib_util__[\"notime\"],\n  partition: __WEBPACK_IMPORTED_MODULE_2__lib_util__[\"partition\"],\n  predecessorWeights: __WEBPACK_IMPORTED_MODULE_2__lib_util__[\"predecessorWeights\"],\n  removeEmptyRanks: __WEBPACK_IMPORTED_MODULE_2__lib_util__[\"removeEmptyRanks\"],\n  simplify: __WEBPACK_IMPORTED_MODULE_2__lib_util__[\"simplify\"],\n  successorWeights: __WEBPACK_IMPORTED_MODULE_2__lib_util__[\"successorWeights\"],\n  time: __WEBPACK_IMPORTED_MODULE_2__lib_util__[\"time\"]\n}\n\n\n/***/ }),\n\n/***/ 423:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.undo = undo;\nexports.run = run;\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _greedyFas = __webpack_require__(428);\n\nvar _greedyFas2 = _interopRequireDefault(_greedyFas);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction dfsFAS(g) {\n  var fas = [];\n  var stack = {};\n  var visited = {};\n\n  function dfs(v) {\n    if (_lodash2.default.has(visited, v)) {\n      return;\n    }\n    visited[v] = true;\n    stack[v] = true;\n    _lodash2.default.forEach(g.outEdges(v), function (e) {\n      if (_lodash2.default.has(stack, e.w)) {\n        fas.push(e);\n      } else {\n        dfs(e.w);\n      }\n    });\n    delete stack[v];\n  }\n\n  _lodash2.default.forEach(g.nodes(), dfs);\n  return fas;\n}\n\nfunction undo(g) {\n  _lodash2.default.forEach(g.edges(), function (e) {\n    var label = g.edge(e);\n    if (label.reversed) {\n      g.removeEdge(e);\n\n      var forwardName = label.forwardName;\n      delete label.reversed;\n      delete label.forwardName;\n      g.setEdge(e.w, e.v, label, forwardName);\n    }\n  });\n}\n\nfunction run(g) {\n  var fas = g.graph().acyclicer === 'greedy' ? (0, _greedyFas2.default)(g, weightFn(g)) : dfsFAS(g);\n  _lodash2.default.forEach(fas, function (e) {\n    var label = g.edge(e);\n    g.removeEdge(e);\n    label.forwardName = e.name;\n    label.reversed = true;\n    g.setEdge(e.w, e.v, label, _lodash2.default.uniqueId('rev'));\n  });\n\n  function weightFn(g) {\n    return function (e) {\n      return g.edge(e).weight;\n    };\n  }\n}\n\n/***/ }),\n\n/***/ 424:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (g) {\n  function dfs(v) {\n    var children = g.children(v);\n    var node = g.node(v);\n    if (children.length) {\n      _lodash2.default.forEach(children, dfs);\n    }\n\n    if (_lodash2.default.has(node, 'minRank')) {\n      node.borderLeft = [];\n      node.borderRight = [];\n      for (var rank = node.minRank, maxRank = node.maxRank + 1; rank < maxRank; ++rank) {\n        addBorderNode(g, 'borderLeft', '_bl', v, node, rank);\n        addBorderNode(g, 'borderRight', '_br', v, node, rank);\n      }\n    }\n  }\n\n  _lodash2.default.forEach(g.children(), dfs);\n};\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _util = __webpack_require__(397);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addBorderNode(g, prop, prefix, sg, sgNode, rank) {\n  var label = { width: 0, height: 0, rank: rank, borderType: prop };\n  var prev = sgNode[prop][rank - 1];\n  var curr = (0, _util.addDummyNode)(g, 'border', label, prefix);\n  sgNode[prop][rank] = curr;\n  g.setParent(curr, sg);\n  if (prev) {\n    g.setEdge(prev, curr, { weight: 1 });\n  }\n}\n\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 425:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.adjust = adjust;\nexports.undo = undo;\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction swapWidthHeight(g) {\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    swapWidthHeightOne(g.node(v));\n  });\n  _lodash2.default.forEach(g.edges(), function (e) {\n    swapWidthHeightOne(g.edge(e));\n  });\n}\n\nfunction swapWidthHeightOne(attrs) {\n  var w = attrs.width;\n  attrs.width = attrs.height;\n  attrs.height = w;\n}\n\nfunction reverseY(g) {\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    reverseYOne(g.node(v));\n  });\n\n  _lodash2.default.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _lodash2.default.forEach(edge.points, reverseYOne);\n    if (_lodash2.default.has(edge, 'y')) {\n      reverseYOne(edge);\n    }\n  });\n}\n\nfunction reverseYOne(attrs) {\n  attrs.y = -attrs.y;\n}\n\nfunction swapXY(g) {\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    swapXYOne(g.node(v));\n  });\n\n  _lodash2.default.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _lodash2.default.forEach(edge.points, swapXYOne);\n    if (_lodash2.default.has(edge, 'x')) {\n      swapXYOne(edge);\n    }\n  });\n}\n\nfunction swapXYOne(attrs) {\n  var x = attrs.x;\n  attrs.x = attrs.y;\n  attrs.y = x;\n}\n\nfunction adjust(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === 'lr' || rankDir === 'rl') {\n    swapWidthHeight(g);\n  }\n}\n\nfunction undo(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === 'bt' || rankDir === 'rl') {\n    reverseY(g);\n  }\n\n  if (rankDir === 'lr' || rankDir === 'rl') {\n    swapXY(g);\n    swapWidthHeight(g);\n  }\n}\n\n/***/ }),\n\n/***/ 426:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n * Simple doubly linked list implementation derived from Cormen, et al.,\n * \"Introduction to Algorithms\".\n */\n\nfunction List() {\n  var sentinel = {};\n  sentinel._next = sentinel._prev = sentinel;\n  this._sentinel = sentinel;\n}\n\nList.prototype.dequeue = function () {\n  var sentinel = this._sentinel;\n  var entry = sentinel._prev;\n  if (entry !== sentinel) {\n    unlink(entry);\n    return entry;\n  }\n};\n\nList.prototype.enqueue = function (entry) {\n  var sentinel = this._sentinel;\n  if (entry._prev && entry._next) {\n    unlink(entry);\n  }\n  entry._next = sentinel._next;\n  sentinel._next._prev = entry;\n  sentinel._next = entry;\n  entry._prev = sentinel;\n};\n\nList.prototype.toString = function () {\n  var strs = [];\n  var sentinel = this._sentinel;\n  var curr = sentinel._prev;\n  while (curr !== sentinel) {\n    strs.push(JSON.stringify(curr, filterOutLinks));\n    curr = curr._prev;\n  }\n  return '[' + strs.join(', ') + ']';\n};\n\nfunction unlink(entry) {\n  entry._prev._next = entry._next;\n  entry._next._prev = entry._prev;\n  delete entry._next;\n  delete entry._prev;\n}\n\nfunction filterOutLinks(k, v) {\n  if (k !== '_next' && k !== '_prev') {\n    return v;\n  }\n}\n\nexports.default = List;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 427:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.debugOrdering = debugOrdering;\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _util = __webpack_require__(397);\n\nvar _cienaGraphlib = __webpack_require__(398);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction debugOrdering(g) {\n  var layerMatrix = (0, _util.buildLayerMatrix)(g);\n\n  var h = new _cienaGraphlib.Graph({ compound: true, multigraph: true }).setGraph({});\n\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    h.setNode(v, { label: v });\n    h.setParent(v, 'layer' + g.node(v).rank);\n  });\n\n  _lodash2.default.forEach(g.edges(), function (e) {\n    h.setEdge(e.v, e.w, {}, e.name);\n  });\n\n  _lodash2.default.forEach(layerMatrix, function (layer, i) {\n    var layerV = 'layer' + i;\n    h.setNode(layerV, { rank: 'same' });\n    _lodash2.default.reduce(layer, function (u, v) {\n      h.setEdge(u, v, { style: 'invis' });\n      return v;\n    });\n  });\n\n  return h;\n}\n\n/***/ }),\n\n/***/ 428:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (g, weightFn) {\n  if (g.nodeCount() <= 1) {\n    return [];\n  }\n  var state = buildState(g, weightFn || DEFAULT_WEIGHT_FN);\n  var results = doGreedyFAS(state.graph, state.buckets, state.zeroIdx);\n\n  // Expand multi-edges\n  return _lodash2.default.flatten(_lodash2.default.map(results, function (e) {\n    return g.outEdges(e.v, e.w);\n  }), true);\n};\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _cienaGraphlib = __webpack_require__(398);\n\nvar _list = __webpack_require__(426);\n\nvar _list2 = _interopRequireDefault(_list);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DEFAULT_WEIGHT_FN = _lodash2.default.constant(1);\n\nfunction doGreedyFAS(g, buckets, zeroIdx) {\n  var results = [];\n  var sources = buckets[buckets.length - 1];\n  var sinks = buckets[0];\n\n  var entry;\n  while (g.nodeCount()) {\n    while (entry = sinks.dequeue()) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    while (entry = sources.dequeue()) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    if (g.nodeCount()) {\n      for (var i = buckets.length - 2; i > 0; --i) {\n        entry = buckets[i].dequeue();\n        if (entry) {\n          results = results.concat(removeNode(g, buckets, zeroIdx, entry, true));\n          break;\n        }\n      }\n    }\n  }\n\n  return results;\n}\n\nfunction removeNode(g, buckets, zeroIdx, entry, collectPredecessors) {\n  var results = collectPredecessors ? [] : undefined;\n\n  _lodash2.default.forEach(g.inEdges(entry.v), function (edge) {\n    var weight = g.edge(edge);\n    var uEntry = g.node(edge.v);\n\n    if (collectPredecessors) {\n      results.push({ v: edge.v, w: edge.w });\n    }\n\n    uEntry.out -= weight;\n    assignBucket(buckets, zeroIdx, uEntry);\n  });\n\n  _lodash2.default.forEach(g.outEdges(entry.v), function (edge) {\n    var weight = g.edge(edge);\n    var w = edge.w;\n    var wEntry = g.node(w);\n    wEntry['in'] -= weight;\n    assignBucket(buckets, zeroIdx, wEntry);\n  });\n\n  g.removeNode(entry.v);\n\n  return results;\n}\n\nfunction buildState(g, weightFn) {\n  var fasGraph = new _cienaGraphlib.Graph();\n  var maxIn = 0;\n  var maxOut = 0;\n\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    fasGraph.setNode(v, { v: v, 'in': 0, out: 0 });\n  });\n\n  // Aggregate weights on nodes, but also sum the weights across multi-edges\n  // into a single edge for the fasGraph.\n  _lodash2.default.forEach(g.edges(), function (e) {\n    var prevWeight = fasGraph.edge(e.v, e.w) || 0;\n    var weight = weightFn(e);\n    var edgeWeight = prevWeight + weight;\n    fasGraph.setEdge(e.v, e.w, edgeWeight);\n    maxOut = Math.max(maxOut, fasGraph.node(e.v).out += weight);\n    maxIn = Math.max(maxIn, fasGraph.node(e.w)['in'] += weight);\n  });\n\n  var buckets = _lodash2.default.range(maxOut + maxIn + 3).map(function () {\n    return new _list2.default();\n  });\n  var zeroIdx = maxIn + 1;\n\n  _lodash2.default.forEach(fasGraph.nodes(), function (v) {\n    assignBucket(buckets, zeroIdx, fasGraph.node(v));\n  });\n\n  return { graph: fasGraph, buckets: buckets, zeroIdx: zeroIdx };\n}\n\nfunction assignBucket(buckets, zeroIdx, entry) {\n  if (!entry.out) {\n    buckets[0].enqueue(entry);\n  } else if (!entry['in']) {\n    buckets[buckets.length - 1].enqueue(entry);\n  } else {\n    buckets[entry.out - entry['in'] + zeroIdx].enqueue(entry);\n  }\n}\n\n/*\n * A greedy heuristic for finding a feedback arc set for a graph. A feedback\n * arc set is a set of edges that can be removed to make a graph acyclic.\n * The algorithm comes from: P. Eades, X. Lin, and W. F. Smyth, \"A fast and\n * effective heuristic for the feedback arc set problem.\" This implementation\n * adjusts that from the paper to allow for weighted edges.\n */\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 429:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = layout;\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _acyclic = __webpack_require__(423);\n\nvar _normalize = __webpack_require__(431);\n\nvar _rank = __webpack_require__(444);\n\nvar _rank2 = _interopRequireDefault(_rank);\n\nvar _util = __webpack_require__(397);\n\nvar _parentDummyChains = __webpack_require__(441);\n\nvar _parentDummyChains2 = _interopRequireDefault(_parentDummyChains);\n\nvar _nestingGraph = __webpack_require__(430);\n\nvar _addBorderSegments = __webpack_require__(424);\n\nvar _addBorderSegments2 = _interopRequireDefault(_addBorderSegments);\n\nvar _coordinateSystem = __webpack_require__(425);\n\nvar _order = __webpack_require__(436);\n\nvar _order2 = _interopRequireDefault(_order);\n\nvar _position = __webpack_require__(443);\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _cienaGraphlib = __webpack_require__(398);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction runLayout(g, time) {\n  time('    makeSpaceForEdgeLabels', function () {\n    makeSpaceForEdgeLabels(g);\n  });\n  time('    removeSelfEdges', function () {\n    removeSelfEdges(g);\n  });\n  time('    acyclic', function () {\n    (0, _acyclic.run)(g);\n  });\n  time('    nestingGraph.run', function () {\n    (0, _nestingGraph.run)(g);\n  });\n  time('    rank', function () {\n    (0, _rank2.default)((0, _util.asNonCompoundGraph)(g));\n  });\n  time('    injectEdgeLabelProxies', function () {\n    injectEdgeLabelProxies(g);\n  });\n  time('    removeEmptyRanks', function () {\n    (0, _util.removeEmptyRanks)(g);\n  });\n  time('    nestingGraph.cleanup', function () {\n    (0, _nestingGraph.cleanup)(g);\n  });\n  time('    normalizeRanks', function () {\n    (0, _util.normalizeRanks)(g);\n  });\n  time('    assignRankMinMax', function () {\n    assignRankMinMax(g);\n  });\n  time('    removeEdgeLabelProxies', function () {\n    removeEdgeLabelProxies(g);\n  });\n  time('    normalize.run', function () {\n    (0, _normalize.run)(g);\n  });\n  time('    parentDummyChains', function () {\n    (0, _parentDummyChains2.default)(g);\n  });\n  time('    addBorderSegments', function () {\n    (0, _addBorderSegments2.default)(g);\n  });\n  time('    order', function () {\n    (0, _order2.default)(g);\n  });\n  time('    insertSelfEdges', function () {\n    insertSelfEdges(g);\n  });\n  time('    adjustCoordinateSystem', function () {\n    (0, _coordinateSystem.adjust)(g);\n  });\n  time('    position', function () {\n    (0, _position2.default)(g);\n  });\n  time('    positionSelfEdges', function () {\n    positionSelfEdges(g);\n  });\n  time('    removeBorderNodes', function () {\n    removeBorderNodes(g);\n  });\n  time('    normalize.undo', function () {\n    (0, _normalize.undo)(g);\n  });\n  time('    fixupEdgeLabelCoords', function () {\n    fixupEdgeLabelCoords(g);\n  });\n  time('    undoCoordinateSystem', function () {\n    (0, _coordinateSystem.undo)(g);\n  });\n  time('    translateGraph', function () {\n    translateGraph(g);\n  });\n  time('    assignNodeIntersects', function () {\n    assignNodeIntersects(g);\n  });\n  time('    reversePoints', function () {\n    reversePointsForReversedEdges(g);\n  });\n  time('    acyclic.undo', function () {\n    (0, _acyclic.undo)(g);\n  });\n}\n\n/*\n * Copies final layout information from the layout graph back to the input\n * graph. This process only copies whitelisted attributes from the layout graph\n * to the input graph, so it serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction updateInputGraph(inputGraph, layoutGraph) {\n  _lodash2.default.forEach(inputGraph.nodes(), function (v) {\n    var inputLabel = inputGraph.node(v);\n    var layoutLabel = layoutGraph.node(v);\n\n    if (inputLabel) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n\n      if (layoutGraph.children(v).length) {\n        inputLabel.width = layoutLabel.width;\n        inputLabel.height = layoutLabel.height;\n      }\n    }\n  });\n\n  _lodash2.default.forEach(inputGraph.edges(), function (e) {\n    var inputLabel = inputGraph.edge(e);\n    var layoutLabel = layoutGraph.edge(e);\n\n    inputLabel.points = layoutLabel.points;\n    if (_lodash2.default.has(layoutLabel, 'x')) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n    }\n  });\n\n  inputGraph.graph().width = layoutGraph.graph().width;\n  inputGraph.graph().height = layoutGraph.graph().height;\n}\n\nvar graphNumAttrs = ['nodesep', 'edgesep', 'ranksep', 'marginx', 'marginy'];\nvar graphDefaults = { ranksep: 50, edgesep: 20, nodesep: 50, rankdir: 'tb' };\nvar graphAttrs = ['acyclicer', 'ranker', 'rankdir', 'align'];\nvar nodeNumAttrs = ['width', 'height'];\nvar nodeDefaults = { width: 0, height: 0 };\nvar edgeNumAttrs = ['minlen', 'weight', 'width', 'height', 'labeloffset'];\nvar edgeDefaults = {\n  minlen: 1,\n  weight: 1,\n  width: 0,\n  height: 0,\n  labeloffset: 10,\n  labelpos: 'r'\n};\nvar edgeAttrs = ['labelpos'];\n\n/*\n * Constructs a new graph from the input graph, which can be used for layout.\n * This process copies only whitelisted attributes from the input graph to the\n * layout graph. Thus this function serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction buildLayoutGraph(inputGraph) {\n  var g = new _cienaGraphlib.Graph({ multigraph: true, compound: true });\n  var graph = canonicalize(inputGraph.graph());\n\n  g.setGraph(_lodash2.default.merge({}, graphDefaults, selectNumberAttrs(graph, graphNumAttrs), _lodash2.default.pick(graph, graphAttrs)));\n\n  _lodash2.default.forEach(inputGraph.nodes(), function (v) {\n    var node = canonicalize(inputGraph.node(v));\n    g.setNode(v, _lodash2.default.defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults));\n    g.setParent(v, inputGraph.parent(v));\n  });\n\n  _lodash2.default.forEach(inputGraph.edges(), function (e) {\n    var edge = canonicalize(inputGraph.edge(e));\n    g.setEdge(e, _lodash2.default.merge({}, edgeDefaults, selectNumberAttrs(edge, edgeNumAttrs), _lodash2.default.pick(edge, edgeAttrs)));\n  });\n\n  return g;\n}\n\n/*\n * This idea comes from the Gansner paper: to account for edge labels in our\n * layout we split each rank in half by doubling minlen and halving ranksep.\n * Then we can place labels at these mid-points between nodes.\n *\n * We also add some minimal padding to the width to push the label for the edge\n * away from the edge itself a bit.\n */\nfunction makeSpaceForEdgeLabels(g) {\n  var graph = g.graph();\n  graph.ranksep /= 2;\n  _lodash2.default.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    edge.minlen *= 2;\n    if (edge.labelpos.toLowerCase() !== 'c') {\n      if (graph.rankdir === 'TB' || graph.rankdir === 'BT') {\n        edge.width += edge.labeloffset;\n      } else {\n        edge.height += edge.labeloffset;\n      }\n    }\n  });\n}\n\n/*\n * Creates temporary dummy nodes that capture the rank in which each edge's\n * label is going to, if it has one of non-zero width and height. We do this\n * so that we can safely remove empty ranks while preserving balance for the\n * label's position.\n */\nfunction injectEdgeLabelProxies(g) {\n  _lodash2.default.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.width && edge.height) {\n      var v = g.node(e.v);\n      var w = g.node(e.w);\n      var label = { rank: (w.rank - v.rank) / 2 + v.rank, e: e };\n      (0, _util.addDummyNode)(g, 'edge-proxy', label, '_ep');\n    }\n  });\n}\n\nfunction assignRankMinMax(g) {\n  var maxRank = 0;\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.borderTop) {\n      node.minRank = g.node(node.borderTop).rank;\n      node.maxRank = g.node(node.borderBottom).rank;\n      maxRank = _lodash2.default.max(maxRank, node.maxRank);\n    }\n  });\n  g.graph().maxRank = maxRank;\n}\n\nfunction removeEdgeLabelProxies(g) {\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'edge-proxy') {\n      g.edge(node.e).labelRank = node.rank;\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction translateGraph(g) {\n  var minX = Number.POSITIVE_INFINITY;\n  var maxX = 0;\n  var minY = Number.POSITIVE_INFINITY;\n  var maxY = 0;\n  var graphLabel = g.graph();\n  var marginX = graphLabel.marginx || 0;\n  var marginY = graphLabel.marginy || 0;\n\n  function getExtremes(attrs) {\n    var x = attrs.x;\n    var y = attrs.y;\n    var w = attrs.width;\n    var h = attrs.height;\n    minX = Math.min(minX, x - w / 2);\n    maxX = Math.max(maxX, x + w / 2);\n    minY = Math.min(minY, y - h / 2);\n    maxY = Math.max(maxY, y + h / 2);\n  }\n\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    getExtremes(g.node(v));\n  });\n  _lodash2.default.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (_lodash2.default.has(edge, 'x')) {\n      getExtremes(edge);\n    }\n  });\n\n  minX -= marginX;\n  minY -= marginY;\n\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    node.x -= minX;\n    node.y -= minY;\n  });\n\n  _lodash2.default.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _lodash2.default.forEach(edge.points, function (p) {\n      p.x -= minX;\n      p.y -= minY;\n    });\n    if (_lodash2.default.has(edge, 'x')) {\n      edge.x -= minX;\n    }\n    if (_lodash2.default.has(edge, 'y')) {\n      edge.y -= minY;\n    }\n  });\n\n  graphLabel.width = maxX - minX + marginX;\n  graphLabel.height = maxY - minY + marginY;\n}\n\nfunction assignNodeIntersects(g) {\n  _lodash2.default.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    var nodeV = g.node(e.v);\n    var nodeW = g.node(e.w);\n    var p1;\n    var p2;\n    if (!edge.points) {\n      edge.points = [];\n      p1 = nodeW;\n      p2 = nodeV;\n    } else {\n      p1 = edge.points[0];\n      p2 = edge.points[edge.points.length - 1];\n    }\n    edge.points.unshift((0, _util.intersectRect)(nodeV, p1));\n    edge.points.push((0, _util.intersectRect)(nodeW, p2));\n  });\n}\n\nfunction fixupEdgeLabelCoords(g) {\n  _lodash2.default.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (_lodash2.default.has(edge, 'x')) {\n      if (edge.labelpos === 'l' || edge.labelpos === 'r') {\n        edge.width -= edge.labeloffset;\n      }\n      switch (edge.labelpos) {\n        case 'l':\n          edge.x -= edge.width / 2 + edge.labeloffset;break;\n        case 'r':\n          edge.x += edge.width / 2 + edge.labeloffset;break;\n      }\n    }\n  });\n}\n\nfunction reversePointsForReversedEdges(g) {\n  _lodash2.default.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.reversed) {\n      edge.points.reverse();\n    }\n  });\n}\n\nfunction removeBorderNodes(g) {\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    if (g.children(v).length) {\n      var node = g.node(v);\n      var t = g.node(node.borderTop);\n      var b = g.node(node.borderBottom);\n      var l = g.node(_lodash2.default.last(node.borderLeft));\n      var r = g.node(_lodash2.default.last(node.borderRight));\n\n      node.width = Math.abs(r.x - l.x);\n      node.height = Math.abs(b.y - t.y);\n      node.x = l.x + node.width / 2;\n      node.y = t.y + node.height / 2;\n    }\n  });\n\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    if (g.node(v).dummy === 'border') {\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction removeSelfEdges(g) {\n  _lodash2.default.forEach(g.edges(), function (e) {\n    if (e.v === e.w) {\n      var node = g.node(e.v);\n      if (!node.selfEdges) {\n        node.selfEdges = [];\n      }\n      node.selfEdges.push({ e: e, label: g.edge(e) });\n      g.removeEdge(e);\n    }\n  });\n}\n\nfunction insertSelfEdges(g) {\n  var layers = (0, _util.buildLayerMatrix)(g);\n  _lodash2.default.forEach(layers, function (layer) {\n    var orderShift = 0;\n    _lodash2.default.forEach(layer, function (v, i) {\n      var node = g.node(v);\n      node.order = i + orderShift;\n      _lodash2.default.forEach(node.selfEdges, function (selfEdge) {\n        (0, _util.addDummyNode)(g, 'selfedge', {\n          width: selfEdge.label.width,\n          height: selfEdge.label.height,\n          rank: node.rank,\n          order: i + ++orderShift,\n          e: selfEdge.e,\n          label: selfEdge.label\n        }, '_se');\n      });\n      delete node.selfEdges;\n    });\n  });\n}\n\nfunction positionSelfEdges(g) {\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'selfedge') {\n      var selfNode = g.node(node.e.v);\n      var x = selfNode.x + selfNode.width / 2;\n      var y = selfNode.y;\n      var dx = node.x - x;\n      var dy = selfNode.height / 2;\n      g.setEdge(node.e, node.label);\n      g.removeNode(v);\n      node.label.points = [{ x: x + 2 * dx / 3, y: y - dy }, { x: x + 5 * dx / 6, y: y - dy }, { x: x + dx, y: y }, { x: x + 5 * dx / 6, y: y + dy }, { x: x + 2 * dx / 3, y: y + dy }];\n      node.label.x = node.x;\n      node.label.y = node.y;\n    }\n  });\n}\n\nfunction selectNumberAttrs(obj, attrs) {\n  return _lodash2.default.mapValues(_lodash2.default.pick(obj, attrs), Number);\n}\n\nfunction canonicalize(attrs) {\n  var newAttrs = {};\n  _lodash2.default.forEach(attrs, function (v, k) {\n    newAttrs[k.toLowerCase()] = v;\n  });\n  return newAttrs;\n}\n\nfunction layout(g, opts) {\n  var timeFn = opts && opts.debugTiming ? _util.time : _util.notime;\n  timeFn('layout', function () {\n    var layoutGraph = timeFn('  buildLayoutGraph', function () {\n      return buildLayoutGraph(g);\n    });\n    timeFn('  runLayout', function () {\n      runLayout(layoutGraph, timeFn);\n    });\n    timeFn('  updateInputGraph', function () {\n      updateInputGraph(g, layoutGraph);\n    });\n  });\n}\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 430:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cleanup = cleanup;\nexports.run = run;\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _util = __webpack_require__(397);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction dfs(g, root, nodeSep, weight, height, depths, v) {\n  var children = g.children(v);\n  if (!children.length) {\n    if (v !== root) {\n      g.setEdge(root, v, { weight: 0, minlen: nodeSep });\n    }\n    return;\n  }\n\n  var top = (0, _util.addBorderNode)(g, '_bt');\n  var bottom = (0, _util.addBorderNode)(g, '_bb');\n  var label = g.node(v);\n\n  g.setParent(top, v);\n  label.borderTop = top;\n  g.setParent(bottom, v);\n  label.borderBottom = bottom;\n\n  _lodash2.default.forEach(children, function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n\n    var childNode = g.node(child);\n    var childTop = childNode.borderTop ? childNode.borderTop : child;\n    var childBottom = childNode.borderBottom ? childNode.borderBottom : child;\n    var thisWeight = childNode.borderTop ? weight : 2 * weight;\n    var minlen = childTop !== childBottom ? 1 : height - depths[v] + 1;\n\n    g.setEdge(top, childTop, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true\n    });\n\n    g.setEdge(childBottom, bottom, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true\n    });\n  });\n\n  if (!g.parent(v)) {\n    g.setEdge(root, top, { weight: 0, minlen: height + depths[v] });\n  }\n}\n\nfunction sumWeights(g) {\n  return _lodash2.default.reduce(g.edges(), function (acc, e) {\n    return acc + g.edge(e).weight;\n  }, 0);\n}\n\nfunction treeDepths(g) {\n  var depths = {};\n  function dfs(v, depth) {\n    var children = g.children(v);\n    if (children && children.length) {\n      _lodash2.default.forEach(children, function (child) {\n        dfs(child, depth + 1);\n      });\n    }\n    depths[v] = depth;\n  }\n  _lodash2.default.forEach(g.children(), function (v) {\n    dfs(v, 1);\n  });\n  return depths;\n}\n\nfunction cleanup(g) {\n  var graphLabel = g.graph();\n  g.removeNode(graphLabel.nestingRoot);\n  delete graphLabel.nestingRoot;\n  _lodash2.default.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.nestingEdge) {\n      g.removeEdge(e);\n    }\n  });\n}\n\n/*\n * A nesting graph creates dummy nodes for the tops and bottoms of subgraphs,\n * adds appropriate edges to ensure that all cluster nodes are placed between\n * these boundries, and ensures that the graph is connected.\n *\n * In addition we ensure, through the use of the minlen property, that nodes\n * and subgraph border nodes to not end up on the same rank.\n *\n * Preconditions:\n *\n *    1. Input graph is a DAG\n *    2. Nodes in the input graph has a minlen attribute\n *\n * Postconditions:\n *\n *    1. Input graph is connected.\n *    2. Dummy nodes are added for the tops and bottoms of subgraphs.\n *    3. The minlen attribute for nodes is adjusted to ensure nodes do not\n *       get placed on the same rank as subgraph border nodes.\n *\n * The nesting graph idea comes from Sander, \"Layout of Compound Directed\n * Graphs.\"\n */\nfunction run(g) {\n  var root = (0, _util.addDummyNode)(g, 'root', {}, '_root');\n  var depths = treeDepths(g);\n  var height = _lodash2.default.max(_lodash2.default.values(depths)) - 1; // Note: depths is an Object not an array\n  var nodeSep = 2 * height + 1;\n\n  g.graph().nestingRoot = root;\n\n  // Multiply minlen by nodeSep to align nodes on non-border ranks.\n  _lodash2.default.forEach(g.edges(), function (e) {\n    g.edge(e).minlen *= nodeSep;\n  });\n\n  // Calculate a weight that is sufficient to keep subgraphs vertically compact\n  var weight = sumWeights(g) + 1;\n\n  // Create border nodes and link them up\n  _lodash2.default.forEach(g.children(), function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n  });\n\n  // Save the multiplier for node layers for later removal of empty border\n  // layers.\n  g.graph().nodeRankFactor = nodeSep;\n}\n\n/***/ }),\n\n/***/ 431:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.run = run;\nexports.undo = undo;\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _util = __webpack_require__(397);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction normalizeEdge(g, e) {\n  var v = e.v;\n  var vRank = g.node(v).rank;\n  var w = e.w;\n  var wRank = g.node(w).rank;\n  var name = e.name;\n  var edgeLabel = g.edge(e);\n  var labelRank = edgeLabel.labelRank;\n\n  if (wRank === vRank + 1) return;\n\n  g.removeEdge(e);\n\n  var dummy, attrs, i;\n  for (i = 0, ++vRank; vRank < wRank; ++i, ++vRank) {\n    edgeLabel.points = [];\n    attrs = {\n      width: 0,\n      height: 0,\n      edgeLabel: edgeLabel,\n      edgeObj: e,\n      rank: vRank\n    };\n    dummy = (0, _util.addDummyNode)(g, 'edge', attrs, '_d');\n    if (vRank === labelRank) {\n      attrs.width = edgeLabel.width;\n      attrs.height = edgeLabel.height;\n      attrs.dummy = 'edge-label';\n      attrs.labelpos = edgeLabel.labelpos;\n    }\n    g.setEdge(v, dummy, { weight: edgeLabel.weight }, name);\n    if (i === 0) {\n      g.graph().dummyChains.push(dummy);\n    }\n    v = dummy;\n  }\n\n  g.setEdge(v, w, { weight: edgeLabel.weight }, name);\n}\n\n/*\n * Breaks any long edges in the graph into short segments that span 1 layer\n * each. This operation is undoable with the denormalize function.\n *\n * Pre-conditions:\n *\n *    1. The input graph is a DAG.\n *    2. Each node in the graph has a \"rank\" property.\n *\n * Post-condition:\n *\n *    1. All edges in the graph have a length of 1.\n *    2. Dummy nodes are added where edges have been split into segments.\n *    3. The graph is augmented with a \"dummyChains\" attribute which contains\n *       the first dummy in each chain of dummy nodes produced.\n */\nfunction run(g) {\n  g.graph().dummyChains = [];\n  _lodash2.default.forEach(g.edges(), function (edge) {\n    normalizeEdge(g, edge);\n  });\n}\n\nfunction undo(g) {\n  _lodash2.default.forEach(g.graph().dummyChains, function (v) {\n    var node = g.node(v);\n    var origLabel = node.edgeLabel;\n    var w;\n    g.setEdge(node.edgeObj, origLabel);\n    while (node.dummy) {\n      w = g.successors(v)[0];\n      g.removeNode(v);\n      origLabel.points.push({ x: node.x, y: node.y });\n      if (node.dummy === 'edge-label') {\n        origLabel.x = node.x;\n        origLabel.y = node.y;\n        origLabel.width = node.width;\n        origLabel.height = node.height;\n      }\n      v = w;\n      node = g.node(v);\n    }\n  });\n}\n\n/***/ }),\n\n/***/ 432:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addSubgraphConstraints;\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addSubgraphConstraints(g, cg, vs) {\n  var prev = {};\n  var rootPrev;\n\n  _lodash2.default.forEach(vs, function (v) {\n    var child = g.parent(v);\n    var parent;\n    var prevChild;\n    while (child) {\n      parent = g.parent(child);\n      if (parent) {\n        prevChild = prev[parent];\n        prev[parent] = child;\n      } else {\n        prevChild = rootPrev;\n        rootPrev = child;\n      }\n      if (prevChild && prevChild !== child) {\n        cg.setEdge(prevChild, child);\n        return;\n      }\n      child = parent;\n    }\n  });\n\n  /*\n  function dfs(v) {\n    var children = v ? g.children(v) : g.children();\n    if (children.length) {\n      var min = Number.POSITIVE_INFINITY,\n          subgraphs = [];\n      _.forEach(children, function(child) {\n        var childMin = dfs(child);\n        if (g.children(child).length) {\n          subgraphs.push({ v: child, order: childMin });\n        }\n        min = Math.min(min, childMin);\n      });\n      _.reduce(_.sortBy(subgraphs, \"order\"), function(prev, curr) {\n        cg.setEdge(prev.v, curr.v);\n        return curr;\n      });\n      return min;\n    }\n    return g.node(v).order;\n  }\n  dfs(undefined);\n  */\n}\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 433:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = barycenter;\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction barycenter(g, movable) {\n  return _lodash2.default.map(movable, function (v) {\n    var inV = g.inEdges(v);\n    if (!inV.length) {\n      return { v: v };\n    } else {\n      var result = _lodash2.default.reduce(inV, function (acc, e) {\n        var edge = g.edge(e);\n        var nodeU = g.node(e.v);\n        return {\n          sum: acc.sum + edge.weight * nodeU.order,\n          weight: acc.weight + edge.weight\n        };\n      }, { sum: 0, weight: 0 });\n\n      return {\n        v: v,\n        barycenter: result.sum / result.weight,\n        weight: result.weight\n      };\n    }\n  });\n}\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 434:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = buildLayerGraph;\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _cienaGraphlib = __webpack_require__(398);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction createRootNode(g) {\n  var v;\n  while (g.hasNode(v = _lodash2.default.uniqueId('_root'))) {}\n  return v;\n}\n\n/*\n * Constructs a graph that can be used to sort a layer of nodes. The graph will\n * contain all base and subgraph nodes from the request layer in their original\n * hierarchy and any edges that are incident on these nodes and are of the type\n * requested by the \"relationship\" parameter.\n *\n * Nodes from the requested rank that do not have parents are assigned a root\n * node in the output graph, which is set in the root graph attribute. This\n * makes it easy to walk the hierarchy of movable nodes during ordering.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG\n *    2. Base nodes in the input graph have a rank attribute\n *    3. Subgraph nodes in the input graph has minRank and maxRank attributes\n *    4. Edges have an assigned weight\n *\n * Post-conditions:\n *\n *    1. Output graph has all nodes in the movable rank with preserved\n *       hierarchy.\n *    2. Root nodes in the movable layer are made children of the node\n *       indicated by the root attribute of the graph.\n *    3. Non-movable nodes incident on movable nodes, selected by the\n *       relationship parameter, are included in the graph (without hierarchy).\n *    4. Edges incident on movable nodes, selected by the relationship\n *       parameter, are added to the output graph.\n *    5. The weights for copied edges are aggregated as need, since the output\n *       graph is not a multi-graph.\n */\nfunction buildLayerGraph(g, rank, relationship) {\n  var root = createRootNode(g);\n  var result = new _cienaGraphlib.Graph({ compound: true }).setGraph({ root: root }).setDefaultNodeLabel(function (v) {\n    return g.node(v);\n  });\n\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    var parent = g.parent(v);\n\n    if (node.rank === rank || node.minRank <= rank && rank <= node.maxRank) {\n      result.setNode(v);\n      result.setParent(v, parent || root);\n\n      // This assumes we have only short edges!\n      _lodash2.default.forEach(g[relationship](v), function (e) {\n        var u = e.v === v ? e.w : e.v;\n        var edge = result.edge(u, v);\n        var weight = !_lodash2.default.isUndefined(edge) ? edge.weight : 0;\n        result.setEdge(u, v, { weight: g.edge(e).weight + weight });\n      });\n\n      if (_lodash2.default.has(node, 'minRank')) {\n        result.setNode(v, {\n          borderLeft: node.borderLeft[rank],\n          borderRight: node.borderRight[rank]\n        });\n      }\n    }\n  });\n\n  return result;\n}\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 435:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = crossCount;\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction twoLayerCrossCount(g, northLayer, southLayer) {\n  // Sort all of the edges between the north and south layers by their position\n  // in the north layer and then the south. Map these edges to the position of\n  // their head in the south layer.\n  var southPos = _lodash2.default.zipObject(southLayer, _lodash2.default.map(southLayer, function (v, i) {\n    return i;\n  }));\n  var southEntries = _lodash2.default.flatten(_lodash2.default.map(northLayer, function (v) {\n    return _lodash2.default.chain(g.outEdges(v)).map(function (e) {\n      return { pos: southPos[e.w], weight: g.edge(e).weight };\n    }).sortBy('pos').value();\n  }), true);\n\n  // Build the accumulator tree\n  var firstIndex = 1;\n  while (firstIndex < southLayer.length) {\n    firstIndex <<= 1;\n  }var treeSize = 2 * firstIndex - 1;\n  firstIndex -= 1;\n  var tree = _lodash2.default.map(new Array(treeSize), function () {\n    return 0;\n  });\n\n  // Calculate the weighted crossings\n  var cc = 0;\n  _lodash2.default.forEach(southEntries.forEach(function (entry) {\n    var index = entry.pos + firstIndex;\n    tree[index] += entry.weight;\n    var weightSum = 0;\n    while (index > 0) {\n      if (index % 2) {\n        weightSum += tree[index + 1];\n      }\n      index = index - 1 >> 1;\n      tree[index] += entry.weight;\n    }\n    cc += entry.weight * weightSum;\n  }));\n\n  return cc;\n}\n\n/*\n * A function that takes a layering (an array of layers, each with an array of\n * ordererd nodes) and a graph and returns a weighted crossing count.\n *\n * Pre-conditions:\n *\n *    1. Input graph must be simple (not a multigraph), directed, and include\n *       only simple edges.\n *    2. Edges in the input graph must have assigned weights.\n *\n * Post-conditions:\n *\n *    1. The graph and layering matrix are left unchanged.\n *\n * This algorithm is derived from Barth, et al., \"Bilayer Cross Counting.\"\n */\nfunction crossCount(g, layering) {\n  var cc = 0;\n  for (var i = 1; i < layering.length; ++i) {\n    cc += twoLayerCrossCount(g, layering[i - 1], layering[i]);\n  }\n  return cc;\n}\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 436:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = order;\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _initOrder = __webpack_require__(437);\n\nvar _initOrder2 = _interopRequireDefault(_initOrder);\n\nvar _crossCount = __webpack_require__(435);\n\nvar _crossCount2 = _interopRequireDefault(_crossCount);\n\nvar _sortSubgraph = __webpack_require__(439);\n\nvar _sortSubgraph2 = _interopRequireDefault(_sortSubgraph);\n\nvar _buildLayerGraph = __webpack_require__(434);\n\nvar _buildLayerGraph2 = _interopRequireDefault(_buildLayerGraph);\n\nvar _addSubgraphConstraints = __webpack_require__(432);\n\nvar _addSubgraphConstraints2 = _interopRequireDefault(_addSubgraphConstraints);\n\nvar _cienaGraphlib = __webpack_require__(398);\n\nvar _util = __webpack_require__(397);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction buildLayerGraphs(g, ranks, relationship) {\n  return _lodash2.default.map(ranks, function (rank) {\n    return (0, _buildLayerGraph2.default)(g, rank, relationship);\n  });\n}\n\nfunction sweepLayerGraphs(layerGraphs, biasRight) {\n  var cg = new _cienaGraphlib.Graph();\n  _lodash2.default.forEach(layerGraphs, function (lg) {\n    var root = lg.graph().root;\n    var sorted = (0, _sortSubgraph2.default)(lg, root, cg, biasRight);\n    _lodash2.default.forEach(sorted.vs, function (v, i) {\n      lg.node(v).order = i;\n    });\n    (0, _addSubgraphConstraints2.default)(lg, cg, sorted.vs);\n  });\n}\n\nfunction assignOrder(g, layering) {\n  _lodash2.default.forEach(layering, function (layer) {\n    _lodash2.default.forEach(layer, function (v, i) {\n      g.node(v).order = i;\n    });\n  });\n}\n\n/*\n * Applies heuristics to minimize edge crossings in the graph and sets the best\n * order solution as an order attribute on each node.\n *\n * Pre-conditions:\n *\n *    1. Graph must be DAG\n *    2. Graph nodes must be objects with a \"rank\" attribute\n *    3. Graph edges must have the \"weight\" attribute\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have an \"order\" attribute based on the results of the\n *       algorithm.\n */\nfunction order(g) {\n  var mr = (0, _util.maxRank)(g);\n  var downLayerGraphs = buildLayerGraphs(g, _lodash2.default.range(1, mr + 1), 'inEdges');\n  var upLayerGraphs = buildLayerGraphs(g, _lodash2.default.range(mr - 1, -1, -1), 'outEdges');\n\n  var layering = (0, _initOrder2.default)(g);\n  assignOrder(g, layering);\n\n  var bestCC = Number.POSITIVE_INFINITY;\n  var best;\n\n  for (var i = 0, lastBest = 0; lastBest < 4; ++i, ++lastBest) {\n    sweepLayerGraphs(i % 2 ? downLayerGraphs : upLayerGraphs, i % 4 >= 2);\n\n    layering = (0, _util.buildLayerMatrix)(g);\n    var cc = (0, _crossCount2.default)(g, layering);\n    if (cc < bestCC) {\n      lastBest = 0;\n      best = _lodash2.default.cloneDeep(layering);\n      bestCC = cc;\n    }\n  }\n\n  assignOrder(g, best);\n}\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 437:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = initOrder;\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Assigns an initial order value for each node by performing a DFS search\n * starting from nodes in the first rank. Nodes are assigned an order in their\n * rank as they are first visited.\n *\n * This approach comes from Gansner, et al., \"A Technique for Drawing Directed\n * Graphs.\"\n *\n * Returns a layering matrix with an array per layer and each layer sorted by\n * the order of its nodes.\n */\nfunction initOrder(g) {\n  var visited = {};\n  var simpleNodes = _lodash2.default.filter(g.nodes(), function (v) {\n    return !g.children(v).length;\n  });\n  var maxRank = _lodash2.default.max(_lodash2.default.map(simpleNodes, function (v) {\n    return g.node(v).rank;\n  }));\n  var layers = _lodash2.default.map(_lodash2.default.range(maxRank + 1), function () {\n    return [];\n  });\n\n  function dfs(v) {\n    if (_lodash2.default.has(visited, v)) return;\n    visited[v] = true;\n    var node = g.node(v);\n    layers[node.rank].push(v);\n    _lodash2.default.forEach(g.successors(v), dfs);\n  }\n\n  var orderedVs = _lodash2.default.sortBy(simpleNodes, function (v) {\n    return g.node(v).rank;\n  });\n  _lodash2.default.forEach(orderedVs, dfs);\n\n  return layers;\n}\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 438:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = resolveConflicts;\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction doResolveConflicts(sourceSet) {\n  var entries = [];\n\n  function handleIn(vEntry) {\n    return function (uEntry) {\n      if (uEntry.merged) {\n        return;\n      }\n      if (_lodash2.default.isUndefined(uEntry.barycenter) || _lodash2.default.isUndefined(vEntry.barycenter) || uEntry.barycenter >= vEntry.barycenter) {\n        mergeEntries(vEntry, uEntry);\n      }\n    };\n  }\n\n  function handleOut(vEntry) {\n    return function (wEntry) {\n      wEntry['in'].push(vEntry);\n      if (--wEntry.indegree === 0) {\n        sourceSet.push(wEntry);\n      }\n    };\n  }\n\n  while (sourceSet.length) {\n    var entry = sourceSet.pop();\n    entries.push(entry);\n    _lodash2.default.forEach(entry['in'].reverse(), handleIn(entry));\n    _lodash2.default.forEach(entry.out, handleOut(entry));\n  }\n\n  return _lodash2.default.chain(entries).filter(function (entry) {\n    return !entry.merged;\n  }).map(function (entry) {\n    return _lodash2.default.pick(entry, ['vs', 'i', 'barycenter', 'weight']);\n  }).value();\n}\n\nfunction mergeEntries(target, source) {\n  var sum = 0;\n  var weight = 0;\n\n  if (target.weight) {\n    sum += target.barycenter * target.weight;\n    weight += target.weight;\n  }\n\n  if (source.weight) {\n    sum += source.barycenter * source.weight;\n    weight += source.weight;\n  }\n\n  target.vs = source.vs.concat(target.vs);\n  target.barycenter = sum / weight;\n  target.weight = weight;\n  target.i = Math.min(source.i, target.i);\n  source.merged = true;\n}\n\n/*\n * Given a list of entries of the form {v, barycenter, weight} and a\n * constraint graph this function will resolve any conflicts between the\n * constraint graph and the barycenters for the entries. If the barycenters for\n * an entry would violate a constraint in the constraint graph then we coalesce\n * the nodes in the conflict into a new node that respects the contraint and\n * aggregates barycenter and weight information.\n *\n * This implementation is based on the description in Forster, \"A Fast and\n * Simple Hueristic for Constrained Two-Level Crossing Reduction,\" thought it\n * differs in some specific details.\n *\n * Pre-conditions:\n *\n *    1. Each entry has the form {v, barycenter, weight}, or if the node has\n *       no barycenter, then {v}.\n *\n * Returns:\n *\n *    A new list of entries of the form {vs, i, barycenter, weight}. The list\n *    `vs` may either be a singleton or it may be an aggregation of nodes\n *    ordered such that they do not violate constraints from the constraint\n *    graph. The property `i` is the lowest original index of any of the\n *    elements in `vs`.\n */\nfunction resolveConflicts(entries, cg) {\n  var mappedEntries = {};\n  _lodash2.default.forEach(entries, function (entry, i) {\n    var tmp = mappedEntries[entry.v] = {\n      indegree: 0,\n      'in': [],\n      out: [],\n      vs: [entry.v],\n      i: i\n    };\n    if (!_lodash2.default.isUndefined(entry.barycenter)) {\n      tmp.barycenter = entry.barycenter;\n      tmp.weight = entry.weight;\n    }\n  });\n\n  _lodash2.default.forEach(cg.edges(), function (e) {\n    var entryV = mappedEntries[e.v];\n    var entryW = mappedEntries[e.w];\n    if (!_lodash2.default.isUndefined(entryV) && !_lodash2.default.isUndefined(entryW)) {\n      entryW.indegree++;\n      entryV.out.push(mappedEntries[e.w]);\n    }\n  });\n\n  var sourceSet = _lodash2.default.filter(mappedEntries, function (entry) {\n    return !entry.indegree;\n  });\n\n  return doResolveConflicts(sourceSet);\n}\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 439:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = sortSubgraph;\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _barycenter = __webpack_require__(433);\n\nvar _barycenter2 = _interopRequireDefault(_barycenter);\n\nvar _resolveConflicts = __webpack_require__(438);\n\nvar _resolveConflicts2 = _interopRequireDefault(_resolveConflicts);\n\nvar _sort = __webpack_require__(440);\n\nvar _sort2 = _interopRequireDefault(_sort);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction expandSubgraphs(entries, subgraphs) {\n  _lodash2.default.forEach(entries, function (entry) {\n    entry.vs = _lodash2.default.flatten(entry.vs.map(function (v) {\n      if (subgraphs[v]) {\n        return subgraphs[v].vs;\n      }\n      return v;\n    }), true);\n  });\n}\n\nfunction mergeBarycenters(target, other) {\n  if (!_lodash2.default.isUndefined(target.barycenter)) {\n    target.barycenter = (target.barycenter * target.weight + other.barycenter * other.weight) / (target.weight + other.weight);\n    target.weight += other.weight;\n  } else {\n    target.barycenter = other.barycenter;\n    target.weight = other.weight;\n  }\n}\n\nfunction sortSubgraph(g, v, cg, biasRight) {\n  var movable = g.children(v);\n  var node = g.node(v);\n  var bl = node ? node.borderLeft : undefined;\n  var br = node ? node.borderRight : undefined;\n  var subgraphs = {};\n\n  if (bl) {\n    movable = _lodash2.default.filter(movable, function (w) {\n      return w !== bl && w !== br;\n    });\n  }\n\n  var barycenters = (0, _barycenter2.default)(g, movable);\n  _lodash2.default.forEach(barycenters, function (entry) {\n    if (g.children(entry.v).length) {\n      var subgraphResult = sortSubgraph(g, entry.v, cg, biasRight);\n      subgraphs[entry.v] = subgraphResult;\n      if (_lodash2.default.has(subgraphResult, 'barycenter')) {\n        mergeBarycenters(entry, subgraphResult);\n      }\n    }\n  });\n\n  var entries = (0, _resolveConflicts2.default)(barycenters, cg);\n  expandSubgraphs(entries, subgraphs);\n\n  var result = (0, _sort2.default)(entries, biasRight);\n\n  if (bl) {\n    result.vs = _lodash2.default.flatten([bl, result.vs, br], true);\n    if (g.predecessors(bl).length) {\n      var blPred = g.node(g.predecessors(bl)[0]);\n      var brPred = g.node(g.predecessors(br)[0]);\n      if (!_lodash2.default.has(result, 'barycenter')) {\n        result.barycenter = 0;\n        result.weight = 0;\n      }\n      result.barycenter = (result.barycenter * result.weight + blPred.order + brPred.order) / (result.weight + 2);\n      result.weight += 2;\n    }\n  }\n\n  return result;\n}\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 440:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = sort;\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _util = __webpack_require__(397);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction consumeUnsortable(vs, unsortable, index) {\n  var last;\n  while (unsortable.length && (last = _lodash2.default.last(unsortable)).i <= index) {\n    unsortable.pop();\n    vs.push(last.vs);\n    index++;\n  }\n  return index;\n}\n\nfunction compareWithBias(bias) {\n  return function (entryV, entryW) {\n    if (entryV.barycenter < entryW.barycenter) {\n      return -1;\n    } else if (entryV.barycenter > entryW.barycenter) {\n      return 1;\n    }\n\n    return !bias ? entryV.i - entryW.i : entryW.i - entryV.i;\n  };\n}\n\nfunction sort(entries, biasRight) {\n  var parts = (0, _util.partition)(entries, function (entry) {\n    return _lodash2.default.has(entry, 'barycenter');\n  });\n  var sortable = parts.lhs;\n  var unsortable = _lodash2.default.sortBy(parts.rhs, function (entry) {\n    return -entry.i;\n  });\n  var vs = [];\n  var sum = 0;\n  var weight = 0;\n  var vsIndex = 0;\n\n  sortable.sort(compareWithBias(!!biasRight));\n\n  vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n\n  _lodash2.default.forEach(sortable, function (entry) {\n    vsIndex += entry.vs.length;\n    vs.push(entry.vs);\n    sum += entry.barycenter * entry.weight;\n    weight += entry.weight;\n    vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n  });\n\n  var result = { vs: _lodash2.default.flatten(vs, true) };\n  if (weight) {\n    result.barycenter = sum / weight;\n    result.weight = weight;\n  }\n  return result;\n}\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 441:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parentDummyChains;\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Find a path from v to w through the lowest common ancestor (LCA). Return the\n// full path and the LCA.\nfunction findPath(g, postorderNums, v, w) {\n  var vPath = [];\n  var wPath = [];\n  var low = Math.min(postorderNums[v].low, postorderNums[w].low);\n  var lim = Math.max(postorderNums[v].lim, postorderNums[w].lim);\n  var parent;\n  var lca;\n\n  // Traverse up from v to find the LCA\n  parent = v;\n  do {\n    parent = g.parent(parent);\n    vPath.push(parent);\n  } while (parent && (postorderNums[parent].low > low || lim > postorderNums[parent].lim));\n  lca = parent;\n\n  // Traverse from w to LCA\n  parent = w;\n  while ((parent = g.parent(parent)) !== lca) {\n    wPath.push(parent);\n  }\n\n  return { path: vPath.concat(wPath.reverse()), lca: lca };\n}\n\nfunction postorder(g) {\n  var result = {};\n  var lim = 0;\n\n  function dfs(v) {\n    var low = lim;\n    _lodash2.default.forEach(g.children(v), dfs);\n    result[v] = { low: low, lim: lim++ };\n  }\n  _lodash2.default.forEach(g.children(), dfs);\n\n  return result;\n}\n\nfunction parentDummyChains(g) {\n  var postorderNums = postorder(g);\n\n  _lodash2.default.forEach(g.graph().dummyChains, function (v) {\n    var node = g.node(v);\n    var edgeObj = node.edgeObj;\n    var pathData = findPath(g, postorderNums, edgeObj.v, edgeObj.w);\n    var path = pathData.path;\n    var lca = pathData.lca;\n    var pathIdx = 0;\n    var pathV = path[pathIdx];\n    var ascending = true;\n\n    while (v !== edgeObj.w) {\n      node = g.node(v);\n\n      if (ascending) {\n        while ((pathV = path[pathIdx]) !== lca && g.node(pathV).maxRank < node.rank) {\n          pathIdx++;\n        }\n\n        if (pathV === lca) {\n          ascending = false;\n        }\n      }\n\n      if (!ascending) {\n        while (pathIdx < path.length - 1 && g.node(pathV = path[pathIdx + 1]).minRank <= node.rank) {\n          pathIdx++;\n        }\n        pathV = path[pathIdx];\n      }\n\n      g.setParent(v, pathV);\n      v = g.successors(v)[0];\n    }\n  });\n}\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 442:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findType1Conflicts = findType1Conflicts;\nexports.findType2Conflicts = findType2Conflicts;\nexports.findOtherInnerSegmentNode = findOtherInnerSegmentNode;\nexports.addConflict = addConflict;\nexports.hasConflict = hasConflict;\nexports.verticalAlignment = verticalAlignment;\nexports.horizontalCompaction = horizontalCompaction;\nexports.buildBlockGraph = buildBlockGraph;\nexports.findSmallestWidthAlignment = findSmallestWidthAlignment;\nexports.alignCoordinates = alignCoordinates;\nexports.balance = balance;\nexports.positionX = positionX;\nexports.sep = sep;\nexports.width = width;\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _cienaGraphlib = __webpack_require__(398);\n\nvar _util = __webpack_require__(397);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * This module provides coordinate assignment based on Brandes and Köpf, \"Fast\n * and Simple Horizontal Coordinate Assignment.\"\n */\n\n/*\n * Marks all edges in the graph with a type-1 conflict with the \"type1Conflict\"\n * property. A type-1 conflict is one where a non-inner segment crosses an\n * inner segment. An inner segment is an edge with both incident nodes marked\n * with the \"dummy\" property.\n *\n * This algorithm scans layer by layer, starting with the second, for type-1\n * conflicts between the current layer and the previous layer. For each layer\n * it scans the nodes from left to right until it reaches one that is incident\n * on an inner segment. It then scans predecessors to determine if they have\n * edges that cross that inner segment. At the end a final scan is done for all\n * nodes on the current rank to see if they cross the last visited inner\n * segment.\n *\n * This algorithm (safely) assumes that a dummy node will only be incident on a\n * single node in the layers being scanned.\n */\nfunction findType1Conflicts(g, layering) {\n  var conflicts = {};\n\n  function visitLayer(prevLayer, layer) {\n    // last visited node in the previous layer that is incident on an inner\n    // segment.\n    var k0 = 0;\n    // Tracks the last node in this layer scanned for crossings with a type-1\n    // segment.\n    var scanPos = 0;\n    var prevLayerLength = prevLayer.length;\n    var lastNode = _lodash2.default.last(layer);\n\n    _lodash2.default.forEach(layer, function (v, i) {\n      var w = findOtherInnerSegmentNode(g, v);\n      var k1 = w ? g.node(w).order : prevLayerLength;\n\n      if (w || v === lastNode) {\n        _lodash2.default.forEach(layer.slice(scanPos, i + 1), function (scanNode) {\n          _lodash2.default.forEach(g.predecessors(scanNode), function (u) {\n            var uLabel = g.node(u);\n            var uPos = uLabel.order;\n            if ((uPos < k0 || k1 < uPos) && !(uLabel.dummy && g.node(scanNode).dummy)) {\n              addConflict(conflicts, u, scanNode);\n            }\n          });\n        });\n        scanPos = i + 1;\n        k0 = k1;\n      }\n    });\n\n    return layer;\n  }\n\n  _lodash2.default.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findType2Conflicts(g, layering) {\n  var conflicts = {};\n\n  function scan(south, southPos, southEnd, prevNorthBorder, nextNorthBorder) {\n    var v;\n    _lodash2.default.forEach(_lodash2.default.range(southPos, southEnd), function (i) {\n      v = south[i];\n      if (g.node(v).dummy) {\n        _lodash2.default.forEach(g.predecessors(v), function (u) {\n          var uNode = g.node(u);\n          if (uNode.dummy && (uNode.order < prevNorthBorder || uNode.order > nextNorthBorder)) {\n            addConflict(conflicts, u, v);\n          }\n        });\n      }\n    });\n  }\n\n  function visitLayer(north, south) {\n    var prevNorthPos = -1;\n    var nextNorthPos;\n    var southPos = 0;\n\n    _lodash2.default.forEach(south, function (v, southLookahead) {\n      if (g.node(v).dummy === 'border') {\n        var predecessors = g.predecessors(v);\n        if (predecessors.length) {\n          nextNorthPos = g.node(predecessors[0]).order;\n          scan(south, southPos, southLookahead, prevNorthPos, nextNorthPos);\n          southPos = southLookahead;\n          prevNorthPos = nextNorthPos;\n        }\n      }\n      scan(south, southPos, south.length, nextNorthPos, north.length);\n    });\n\n    return south;\n  }\n\n  _lodash2.default.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findOtherInnerSegmentNode(g, v) {\n  if (g.node(v).dummy) {\n    return _lodash2.default.find(g.predecessors(v), function (u) {\n      return g.node(u).dummy;\n    });\n  }\n}\n\nfunction addConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n\n  var conflictsV = conflicts[v];\n  if (!conflictsV) {\n    conflicts[v] = conflictsV = {};\n  }\n  conflictsV[w] = true;\n}\n\nfunction hasConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return _lodash2.default.has(conflicts[v], w);\n}\n\n/*\n * Try to align nodes into vertical \"blocks\" where possible. This algorithm\n * attempts to align a node with one of its median neighbors. If the edge\n * connecting a neighbor is a type-1 conflict then we ignore that possibility.\n * If a previous node has already formed a block with a node after the node\n * we're trying to form a block with, we also ignore that possibility - our\n * blocks would be split in that scenario.\n */\nfunction verticalAlignment(g, layering, conflicts, neighborFn) {\n  var root = {};\n  var align = {};\n  var pos = {};\n\n  // We cache the position here based on the layering because the graph and\n  // layering may be out of sync. The layering matrix is manipulated to\n  // generate different extreme alignments.\n  _lodash2.default.forEach(layering, function (layer) {\n    _lodash2.default.forEach(layer, function (v, order) {\n      root[v] = v;\n      align[v] = v;\n      pos[v] = order;\n    });\n  });\n\n  _lodash2.default.forEach(layering, function (layer) {\n    var prevIdx = -1;\n    _lodash2.default.forEach(layer, function (v) {\n      var ws = neighborFn(v);\n      if (ws.length) {\n        ws = _lodash2.default.sortBy(ws, function (w) {\n          return pos[w];\n        });\n        var mp = (ws.length - 1) / 2;\n        for (var i = Math.floor(mp), il = Math.ceil(mp); i <= il; ++i) {\n          var w = ws[i];\n          if (align[v] === v && prevIdx < pos[w] && !hasConflict(conflicts, v, w)) {\n            align[w] = v;\n            align[v] = root[v] = root[w];\n            prevIdx = pos[w];\n          }\n        }\n      }\n    });\n  });\n\n  return { root: root, align: align };\n}\n\nfunction horizontalCompaction(g, layering, root, align, reverseSep) {\n  // This portion of the algorithm differs from BK due to a number of problems.\n  // Instead of their algorithm we construct a new block graph and do two\n  // sweeps. The first sweep places blocks with the smallest possible\n  // coordinates. The second sweep removes unused space by moving blocks to the\n  // greatest coordinates without violating separation.\n  var xs = {};\n  var blockG = buildBlockGraph(g, layering, root, reverseSep);\n\n  // First pass, assign smallest coordinates via DFS\n  var visited = {};\n  function pass1(v) {\n    if (!_lodash2.default.has(visited, v)) {\n      visited[v] = true;\n      xs[v] = _lodash2.default.reduce(blockG.inEdges(v), function (max, e) {\n        pass1(e.v);\n        return Math.max(max, xs[e.v] + blockG.edge(e));\n      }, 0);\n    }\n  }\n  _lodash2.default.forEach(blockG.nodes(), pass1);\n\n  var borderType = reverseSep ? 'borderLeft' : 'borderRight';\n  function pass2(v) {\n    if (visited[v] !== 2) {\n      visited[v]++;\n      var node = g.node(v);\n      var min = _lodash2.default.reduce(blockG.outEdges(v), function (min, e) {\n        pass2(e.w);\n        return Math.min(min, xs[e.w] - blockG.edge(e));\n      }, Number.POSITIVE_INFINITY);\n      if (min !== Number.POSITIVE_INFINITY && node.borderType !== borderType) {\n        xs[v] = Math.max(xs[v], min);\n      }\n    }\n  }\n  _lodash2.default.forEach(blockG.nodes(), pass2);\n\n  // Assign x coordinates to all nodes\n  _lodash2.default.forEach(align, function (v) {\n    xs[v] = xs[root[v]];\n  });\n\n  return xs;\n}\n\nfunction buildBlockGraph(g, layering, root, reverseSep) {\n  var blockGraph = new _cienaGraphlib.Graph();\n  var graphLabel = g.graph();\n  var sepFn = sep(graphLabel.nodesep, graphLabel.edgesep, reverseSep);\n\n  _lodash2.default.forEach(layering, function (layer) {\n    var u;\n    _lodash2.default.forEach(layer, function (v) {\n      var vRoot = root[v];\n      blockGraph.setNode(vRoot);\n      if (u) {\n        var uRoot = root[u];\n        var prevMax = blockGraph.edge(uRoot, vRoot);\n        blockGraph.setEdge(uRoot, vRoot, Math.max(sepFn(g, v, u), prevMax || 0));\n      }\n      u = v;\n    });\n  });\n\n  return blockGraph;\n}\n\n/*\n * Returns the alignment that has the smallest width of the given alignments.\n */\nfunction findSmallestWidthAlignment(g, xss) {\n  var vals = _lodash2.default.values(xss);\n\n  return _lodash2.default.minBy(vals, function (xs) {\n    var maxVals = [];\n    var minVals = [];\n\n    _lodash2.default.forIn(xs, function (x, v) {\n      var halfWidth = width(g, v) / 2;\n\n      maxVals.push(x + halfWidth);\n      minVals.push(x - halfWidth);\n    });\n\n    return _lodash2.default.max(maxVals) - _lodash2.default.min(minVals);\n  });\n}\n\n/*\n * Align the coordinates of each of the layout alignments such that\n * left-biased alignments have their minimum coordinate at the same point as\n * the minimum coordinate of the smallest width alignment and right-biased\n * alignments have their maximum coordinate at the same point as the maximum\n * coordinate of the smallest width alignment.\n */\nfunction alignCoordinates(xss, alignTo) {\n  var vals = _lodash2.default.values(alignTo);\n  var alignToMin = _lodash2.default.min(vals);\n  var alignToMax = _lodash2.default.max(vals);\n\n  _lodash2.default.forEach(['u', 'd'], function (vert) {\n    _lodash2.default.forEach(['l', 'r'], function (horiz) {\n      var alignment = vert + horiz;\n      var xs = xss[alignment];\n      var delta;\n      if (xs === alignTo) return;\n\n      var xsVals = _lodash2.default.values(xs);\n      delta = horiz === 'l' ? alignToMin - _lodash2.default.min(xsVals) : alignToMax - _lodash2.default.max(xsVals);\n\n      if (delta) {\n        xss[alignment] = _lodash2.default.mapValues(xs, function (x) {\n          return x + delta;\n        });\n      }\n    });\n  });\n}\n\nfunction balance(xss, align) {\n  return _lodash2.default.mapValues(xss.ul, function (ignore, v) {\n    if (align) {\n      return xss[align.toLowerCase()][v];\n    } else {\n      var xs = _lodash2.default.sortBy(_lodash2.default.map(xss, v));\n      return (xs[1] + xs[2]) / 2;\n    }\n  });\n}\n\nfunction positionX(g) {\n  var layering = (0, _util.buildLayerMatrix)(g);\n  var conflicts = _lodash2.default.merge(findType1Conflicts(g, layering), findType2Conflicts(g, layering));\n\n  var xss = {};\n  var adjustedLayering;\n  _lodash2.default.forEach(['u', 'd'], function (vert) {\n    adjustedLayering = vert === 'u' ? layering : _lodash2.default.values(layering).reverse();\n    _lodash2.default.forEach(['l', 'r'], function (horiz) {\n      if (horiz === 'r') {\n        adjustedLayering = _lodash2.default.map(adjustedLayering, function (inner) {\n          return _lodash2.default.values(inner).reverse();\n        });\n      }\n\n      var neighborFn = _lodash2.default.bind(vert === 'u' ? g.predecessors : g.successors, g);\n      var align = verticalAlignment(g, adjustedLayering, conflicts, neighborFn);\n      var xs = horizontalCompaction(g, adjustedLayering, align.root, align.align, horiz === 'r');\n      if (horiz === 'r') {\n        xs = _lodash2.default.mapValues(xs, function (x) {\n          return -x;\n        });\n      }\n      xss[vert + horiz] = xs;\n    });\n  });\n\n  var smallestWidth = findSmallestWidthAlignment(g, xss);\n  alignCoordinates(xss, smallestWidth);\n  return balance(xss, g.graph().align);\n}\n\nfunction sep(nodeSep, edgeSep, reverseSep) {\n  return function (g, v, w) {\n    var vLabel = g.node(v);\n    var wLabel = g.node(w);\n    var sum = 0;\n    var delta;\n\n    sum += vLabel.width / 2;\n    if (_lodash2.default.has(vLabel, 'labelpos')) {\n      switch (vLabel.labelpos.toLowerCase()) {\n        case 'l':\n          delta = -vLabel.width / 2;break;\n        case 'r':\n          delta = vLabel.width / 2;break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    sum += (vLabel.dummy ? edgeSep : nodeSep) / 2;\n    sum += (wLabel.dummy ? edgeSep : nodeSep) / 2;\n\n    sum += wLabel.width / 2;\n    if (_lodash2.default.has(wLabel, 'labelpos')) {\n      switch (wLabel.labelpos.toLowerCase()) {\n        case 'l':\n          delta = wLabel.width / 2;break;\n        case 'r':\n          delta = -wLabel.width / 2;break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    return sum;\n  };\n}\n\nfunction width(g, v) {\n  return g.node(v).width;\n}\n\nexports.default = {\n  alignCoordinates: alignCoordinates,\n  balance: balance,\n  buildBlockGraph: buildBlockGraph,\n  findOtherInnerSegmentNode: findOtherInnerSegmentNode,\n  findSmallestWidthAlignment: findSmallestWidthAlignment,\n  findType1Conflicts: findType1Conflicts,\n  findType2Conflicts: findType2Conflicts,\n  hasConflict: hasConflict,\n  horizontalCompaction: horizontalCompaction,\n  positionX: positionX,\n  sep: sep,\n  verticalAlignment: verticalAlignment,\n  width: width\n};\n\n/***/ }),\n\n/***/ 443:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = position;\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _util = __webpack_require__(397);\n\nvar _bk = __webpack_require__(442);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction positionY(g) {\n  var layering = (0, _util.buildLayerMatrix)(g);\n  var rankSep = g.graph().ranksep;\n  var prevY = 0;\n  _lodash2.default.forEach(layering, function (layer) {\n    var maxHeight = _lodash2.default.max(_lodash2.default.map(layer, function (v) {\n      return g.node(v).height;\n    }));\n    _lodash2.default.forEach(layer, function (v) {\n      g.node(v).y = prevY + maxHeight / 2;\n    });\n    prevY += maxHeight + rankSep;\n  });\n}\n\nfunction position(g) {\n  g = (0, _util.asNonCompoundGraph)(g);\n\n  positionY(g);\n  _lodash2.default.forEach((0, _bk.positionX)(g), function (x, v) {\n    g.node(v).x = x;\n  });\n}\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 444:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rank;\n\nvar _util = __webpack_require__(402);\n\nvar _feasibleTree = __webpack_require__(406);\n\nvar _feasibleTree2 = _interopRequireDefault(_feasibleTree);\n\nvar _networkSimplex = __webpack_require__(445);\n\nvar _networkSimplex2 = _interopRequireDefault(_networkSimplex);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// A fast and simple ranker, but results are far from optimal.\nvar longestPathRanker = _util.longestPath;\n\nfunction tightTreeRanker(g) {\n  (0, _util.longestPath)(g);\n  (0, _feasibleTree2.default)(g);\n}\n\nfunction networkSimplexRanker(g) {\n  (0, _networkSimplex2.default)(g);\n}\n\n/*\n * Assigns a rank to each node in the input graph that respects the \"minlen\"\n * constraint specified on edges between nodes.\n *\n * This basic structure is derived from Gansner, et al., \"A Technique for\n * Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a connected DAG\n *    2. Graph nodes must be objects\n *    3. Graph edges must have \"weight\" and \"minlen\" attributes\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have a \"rank\" attribute based on the results of the\n *       algorithm. Ranks can start at any index (including negative), we'll\n *       fix them up later.\n */\nfunction rank(g) {\n  switch (g.graph().ranker) {\n    case 'network-simplex':\n      networkSimplexRanker(g);break;\n    case 'tight-tree':\n      tightTreeRanker(g);break;\n    case 'longest-path':\n      longestPathRanker(g);break;\n    default:\n      networkSimplexRanker(g);\n  }\n}\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 445:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = networkSimplex;\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _cienaGraphlib = __webpack_require__(398);\n\nvar _feasibleTree = __webpack_require__(406);\n\nvar _feasibleTree2 = _interopRequireDefault(_feasibleTree);\n\nvar _util = __webpack_require__(402);\n\nvar _util2 = __webpack_require__(397);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar preorder = _cienaGraphlib.alg.preorder,\n    postorder = _cienaGraphlib.alg.postorder;\n\n\n// Expose some internals for testing purposes\nnetworkSimplex.initLowLimValues = initLowLimValues;\nnetworkSimplex.initCutValues = initCutValues;\nnetworkSimplex.calcCutValue = calcCutValue;\nnetworkSimplex.leaveEdge = leaveEdge;\nnetworkSimplex.enterEdge = enterEdge;\nnetworkSimplex.exchangeEdges = exchangeEdges;\n\n/*\n * Initializes cut values for all edges in the tree.\n */\nfunction initCutValues(t, g) {\n  var vs = postorder(t, t.nodes());\n  vs = vs.slice(0, vs.length - 1);\n  _lodash2.default.forEach(vs, function (v) {\n    assignCutValue(t, g, v);\n  });\n}\n\nfunction assignCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  t.edge(child, parent).cutvalue = calcCutValue(t, g, child);\n}\n\n/*\n * Given the tight tree, its graph, and a child in the graph calculate and\n * return the cut value for the edge between the child and its parent.\n */\nfunction calcCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  // True if the child is on the tail end of the edge in the directed graph\n  var childIsTail = true;\n  // The graph's view of the tree edge we're inspecting\n  var graphEdge = g.edge(child, parent);\n  // The accumulated cut value for the edge between this node and its parent\n  var cutValue = 0;\n\n  if (!graphEdge) {\n    childIsTail = false;\n    graphEdge = g.edge(parent, child);\n  }\n\n  cutValue = graphEdge.weight;\n\n  _lodash2.default.forEach(g.nodeEdges(child), function (e) {\n    var isOutEdge = e.v === child;\n    var other = isOutEdge ? e.w : e.v;\n\n    if (other !== parent) {\n      var pointsToHead = isOutEdge === childIsTail;\n      var otherWeight = g.edge(e).weight;\n\n      cutValue += pointsToHead ? otherWeight : -otherWeight;\n      if (isTreeEdge(t, child, other)) {\n        var otherCutValue = t.edge(child, other).cutvalue;\n        cutValue += pointsToHead ? -otherCutValue : otherCutValue;\n      }\n    }\n  });\n\n  return cutValue;\n}\n\nfunction initLowLimValues(tree, root) {\n  if (arguments.length < 2) {\n    root = tree.nodes()[0];\n  }\n  dfsAssignLowLim(tree, {}, 1, root);\n}\n\nfunction dfsAssignLowLim(tree, visited, nextLim, v, parent) {\n  var low = nextLim;\n  var label = tree.node(v);\n\n  visited[v] = true;\n  _lodash2.default.forEach(tree.neighbors(v), function (w) {\n    if (!_lodash2.default.has(visited, w)) {\n      nextLim = dfsAssignLowLim(tree, visited, nextLim, w, v);\n    }\n  });\n\n  label.low = low;\n  label.lim = nextLim++;\n  if (parent) {\n    label.parent = parent;\n  } else {\n    // TODO should be able to remove this when we incrementally update low lim\n    delete label.parent;\n  }\n\n  return nextLim;\n}\n\nfunction leaveEdge(tree) {\n  return _lodash2.default.find(tree.edges(), function (e) {\n    return tree.edge(e).cutvalue < 0;\n  });\n}\n\nfunction enterEdge(t, g, edge) {\n  var v = edge.v;\n  var w = edge.w;\n\n  // For the rest of this function we assume that v is the tail and w is the\n  // head, so if we don't have this edge in the graph we should flip it to\n  // match the correct orientation.\n  if (!g.hasEdge(v, w)) {\n    v = edge.w;\n    w = edge.v;\n  }\n\n  var vLabel = t.node(v);\n  var wLabel = t.node(w);\n  var tailLabel = vLabel;\n  var flip = false;\n\n  // If the root is in the tail of the edge then we need to flip the logic that\n  // checks for the head and tail nodes in the candidates function below.\n  if (vLabel.lim > wLabel.lim) {\n    tailLabel = wLabel;\n    flip = true;\n  }\n\n  var candidates = _lodash2.default.filter(g.edges(), function (edge) {\n    return flip === isDescendant(t, t.node(edge.v), tailLabel) && flip !== isDescendant(t, t.node(edge.w), tailLabel);\n  });\n\n  return _lodash2.default.minBy(candidates, function (edge) {\n    return (0, _util.slack)(g, edge);\n  });\n}\n\nfunction exchangeEdges(t, g, e, f) {\n  var v = e.v;\n  var w = e.w;\n  t.removeEdge(v, w);\n  t.setEdge(f.v, f.w, {});\n  initLowLimValues(t);\n  initCutValues(t, g);\n  updateRanks(t, g);\n}\n\nfunction updateRanks(t, g) {\n  var root = _lodash2.default.find(t.nodes(), function (v) {\n    return !g.node(v).parent;\n  });\n  var vs = preorder(t, root);\n  vs = vs.slice(1);\n  _lodash2.default.forEach(vs, function (v) {\n    var parent = t.node(v).parent;\n    var edge = g.edge(v, parent);\n    var flipped = false;\n\n    if (!edge) {\n      edge = g.edge(parent, v);\n      flipped = true;\n    }\n\n    g.node(v).rank = g.node(parent).rank + (flipped ? edge.minlen : -edge.minlen);\n  });\n}\n\n/*\n * Returns true if the edge is in the tree.\n */\nfunction isTreeEdge(tree, u, v) {\n  return tree.hasEdge(u, v);\n}\n\n/*\n * Returns true if the specified node is descendant of the root node per the\n * assigned low and lim attributes in the tree.\n */\nfunction isDescendant(tree, vLabel, rootLabel) {\n  return rootLabel.low <= vLabel.lim && vLabel.lim <= rootLabel.lim;\n}\n\n/*\n * The network simplex algorithm assigns ranks to each node in the input graph\n * and iteratively improves the ranking to reduce the length of edges.\n *\n * Preconditions:\n *\n *    1. The input graph must be a DAG.\n *    2. All nodes in the graph must have an object value.\n *    3. All edges in the graph must have \"minlen\" and \"weight\" attributes.\n *\n * Postconditions:\n *\n *    1. All nodes in the graph will have an assigned \"rank\" attribute that has\n *       been optimized by the network simplex algorithm. Ranks start at 0.\n *\n *\n * A rough sketch of the algorithm is as follows:\n *\n *    1. Assign initial ranks to each node. We use the longest path algorithm,\n *       which assigns ranks to the lowest position possible. In general this\n *       leads to very wide bottom ranks and unnecessarily long edges.\n *    2. Construct a feasible tight tree. A tight tree is one such that all\n *       edges in the tree have no slack (difference between length of edge\n *       and minlen for the edge). This by itself greatly improves the assigned\n *       rankings by shorting edges.\n *    3. Iteratively find edges that have negative cut values. Generally a\n *       negative cut value indicates that the edge could be removed and a new\n *       tree edge could be added to produce a more compact graph.\n *\n * Much of the algorithms here are derived from Gansner, et al., \"A Technique\n * for Drawing Directed Graphs.\" The structure of the file roughly follows the\n * structure of the overall algorithm.\n */\nfunction networkSimplex(g) {\n  g = (0, _util2.simplify)(g);\n  (0, _util.longestPath)(g);\n  var t = (0, _feasibleTree2.default)(g);\n  initLowLimValues(t);\n  initCutValues(t, g);\n\n  var e, f;\n  while (e = leaveEdge(t)) {\n    f = enterEdge(t, g, e);\n    exchangeEdges(t, g, e, f);\n  }\n}\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 446:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (g) {\n  var visited = {};\n  var cmpts = [];\n  var cmpt;\n\n  function dfs(v) {\n    if (_lodash2.default.has(visited, v)) return;\n    visited[v] = true;\n    cmpt.push(v);\n    _lodash2.default.each(g.successors(v), dfs);\n    _lodash2.default.each(g.predecessors(v), dfs);\n  }\n\n  _lodash2.default.each(g.nodes(), function (v) {\n    cmpt = [];\n    dfs(v);\n    if (cmpt.length) {\n      cmpts.push(cmpt);\n    }\n  });\n\n  return cmpts;\n};\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 447:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (g, weightFunc, edgeFunc) {\n  return _lodash2.default.transform(g.nodes(), function (acc, v) {\n    acc[v] = (0, _dijkstra2.default)(g, v, weightFunc, edgeFunc);\n  }, {});\n};\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _dijkstra = __webpack_require__(408);\n\nvar _dijkstra2 = _interopRequireDefault(_dijkstra);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 448:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (g) {\n  return _lodash2.default.filter((0, _tarjan2.default)(g), function (cmpt) {\n    return cmpt.length > 1 || cmpt.length === 1 && g.hasEdge(cmpt[0], cmpt[0]);\n  });\n};\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _tarjan = __webpack_require__(409);\n\nvar _tarjan2 = _interopRequireDefault(_tarjan);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 449:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (g, weightFn, edgeFn) {\n  weightFn = weightFn || DEFAULT_WEIGHT_FUNC;\n  edgeFn = edgeFn || function (v) {\n    return g.outEdges(v);\n  };\n  return runFloydWarshall(g, weightFn, edgeFn);\n};\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DEFAULT_WEIGHT_FUNC = _lodash2.default.constant(1);\n\nfunction runFloydWarshall(g, weightFn, edgeFn) {\n  var results = {};\n  var nodes = g.nodes();\n\n  nodes.forEach(function (v) {\n    results[v] = {};\n    results[v][v] = { distance: 0 };\n    nodes.forEach(function (w) {\n      if (v !== w) {\n        results[v][w] = { distance: Number.POSITIVE_INFINITY };\n      }\n    });\n    edgeFn(v).forEach(function (edge) {\n      var w = edge.v === v ? edge.w : edge.v;\n      var d = weightFn(edge);\n      results[v][w] = { distance: d, predecessor: v };\n    });\n  });\n\n  nodes.forEach(function (k) {\n    var rowK = results[k];\n    nodes.forEach(function (i) {\n      var rowI = results[i];\n      nodes.forEach(function (j) {\n        var ik = rowI[k];\n        var kj = rowK[j];\n        var ij = rowI[j];\n        var altDistance = ik.distance + kj.distance;\n        if (altDistance < ij.distance) {\n          ij.distance = altDistance;\n          ij.predecessor = kj.predecessor;\n        }\n      });\n    });\n  });\n\n  return results;\n}\n\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 450:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.topsort = exports.tarjan = exports.prim = exports.preorder = exports.postorder = exports.isAcyclic = exports.floydWarshall = exports.findCycles = exports.dijkstraAll = exports.dijkstra = exports.components = undefined;\n\nvar _components = __webpack_require__(446);\n\nvar _components2 = _interopRequireDefault(_components);\n\nvar _dijkstra = __webpack_require__(408);\n\nvar _dijkstra2 = _interopRequireDefault(_dijkstra);\n\nvar _dijkstraAll = __webpack_require__(447);\n\nvar _dijkstraAll2 = _interopRequireDefault(_dijkstraAll);\n\nvar _findCycles = __webpack_require__(448);\n\nvar _findCycles2 = _interopRequireDefault(_findCycles);\n\nvar _floydWarshall = __webpack_require__(449);\n\nvar _floydWarshall2 = _interopRequireDefault(_floydWarshall);\n\nvar _isAcyclic = __webpack_require__(451);\n\nvar _isAcyclic2 = _interopRequireDefault(_isAcyclic);\n\nvar _postorder = __webpack_require__(452);\n\nvar _postorder2 = _interopRequireDefault(_postorder);\n\nvar _preorder = __webpack_require__(453);\n\nvar _preorder2 = _interopRequireDefault(_preorder);\n\nvar _prim = __webpack_require__(454);\n\nvar _prim2 = _interopRequireDefault(_prim);\n\nvar _tarjan = __webpack_require__(409);\n\nvar _tarjan2 = _interopRequireDefault(_tarjan);\n\nvar _topsort = __webpack_require__(410);\n\nvar _topsort2 = _interopRequireDefault(_topsort);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.components = _components2.default;\nexports.dijkstra = _dijkstra2.default;\nexports.dijkstraAll = _dijkstraAll2.default;\nexports.findCycles = _findCycles2.default;\nexports.floydWarshall = _floydWarshall2.default;\nexports.isAcyclic = _isAcyclic2.default;\nexports.postorder = _postorder2.default;\nexports.preorder = _preorder2.default;\nexports.prim = _prim2.default;\nexports.tarjan = _tarjan2.default;\nexports.topsort = _topsort2.default;\nexports.default = {\n  components: _components2.default,\n  dijkstra: _dijkstra2.default,\n  dijkstraAll: _dijkstraAll2.default,\n  findCycles: _findCycles2.default,\n  floydWarshall: _floydWarshall2.default,\n  isAcyclic: _isAcyclic2.default,\n  postorder: _postorder2.default,\n  preorder: _preorder2.default,\n  prim: _prim2.default,\n  tarjan: _tarjan2.default,\n  topsort: _topsort2.default\n};\n\n/***/ }),\n\n/***/ 451:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (g) {\n  try {\n    (0, _topsort2.default)(g);\n  } catch (e) {\n    if (e instanceof _topsort2.default.CycleException) {\n      return false;\n    }\n    throw e;\n  }\n  return true;\n};\n\nvar _topsort = __webpack_require__(410);\n\nvar _topsort2 = _interopRequireDefault(_topsort);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 452:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (g, vs) {\n  return (0, _dfs2.default)(g, vs, 'post');\n};\n\nvar _dfs = __webpack_require__(407);\n\nvar _dfs2 = _interopRequireDefault(_dfs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 453:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (g, vs) {\n  return (0, _dfs2.default)(g, vs, 'pre');\n};\n\nvar _dfs = __webpack_require__(407);\n\nvar _dfs2 = _interopRequireDefault(_dfs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 454:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (g, weightFunc) {\n  var result = new _graph2.default();\n  var parents = {};\n  var pq = new _priorityQueue2.default();\n  var v;\n\n  function updateNeighbors(edge) {\n    var w = edge.v === v ? edge.w : edge.v;\n    var pri = pq.priority(w);\n    if (pri !== undefined) {\n      var edgeWeight = weightFunc(edge);\n      if (edgeWeight < pri) {\n        parents[w] = v;\n        pq.decrease(w, edgeWeight);\n      }\n    }\n  }\n\n  if (g.nodeCount() === 0) {\n    return result;\n  }\n\n  _lodash2.default.each(g.nodes(), function (v) {\n    pq.add(v, Number.POSITIVE_INFINITY);\n    result.setNode(v);\n  });\n\n  // Start from an arbitrary node\n  pq.decrease(g.nodes()[0], 0);\n\n  var init = false;\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n    if (_lodash2.default.has(parents, v)) {\n      result.setEdge(v, parents[v]);\n    } else if (init) {\n      throw new Error('Input graph is not connected: ' + g);\n    } else {\n      init = true;\n    }\n\n    g.nodeEdges(v).forEach(updateNeighbors);\n  }\n\n  return result;\n};\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _graph = __webpack_require__(403);\n\nvar _graph2 = _interopRequireDefault(_graph);\n\nvar _priorityQueue = __webpack_require__(411);\n\nvar _priorityQueue2 = _interopRequireDefault(_priorityQueue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 455:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.read = read;\nexports.write = write;\n\nvar _lodash = __webpack_require__(2);\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _graph = __webpack_require__(403);\n\nvar _graph2 = _interopRequireDefault(_graph);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction writeNodes(g) {\n  return _lodash2.default.map(g.nodes(), function (v) {\n    var nodeValue = g.node(v);\n    var parent = g.parent(v);\n    var node = { v: v };\n    if (!_lodash2.default.isUndefined(nodeValue)) {\n      node.value = nodeValue;\n    }\n    if (!_lodash2.default.isUndefined(parent)) {\n      node.parent = parent;\n    }\n    return node;\n  });\n}\n\nfunction writeEdges(g) {\n  return _lodash2.default.map(g.edges(), function (e) {\n    var edgeValue = g.edge(e);\n    var edge = { v: e.v, w: e.w };\n    if (!_lodash2.default.isUndefined(e.name)) {\n      edge.name = e.name;\n    }\n    if (!_lodash2.default.isUndefined(edgeValue)) {\n      edge.value = edgeValue;\n    }\n    return edge;\n  });\n}\n\nfunction read(json) {\n  var g = new _graph2.default(json.options).setGraph(json.value);\n  _lodash2.default.each(json.nodes, function (entry) {\n    g.setNode(entry.v, entry.value);\n    if (entry.parent) {\n      g.setParent(entry.v, entry.parent);\n    }\n  });\n  _lodash2.default.each(json.edges, function (entry) {\n    g.setEdge({ v: entry.v, w: entry.w, name: entry.name }, entry.value);\n  });\n  return g;\n}\n\nfunction write(g) {\n  var json = {\n    options: {\n      directed: g.isDirected(),\n      multigraph: g.isMultigraph(),\n      compound: g.isCompound()\n    },\n    nodes: writeNodes(g),\n    edges: writeEdges(g)\n  };\n  if (!_lodash2.default.isUndefined(g.graph())) {\n    json.value = _lodash2.default.clone(g.graph());\n  }\n  return json;\n}\n\nexports.default = {\n  write: write,\n  read: read\n};\n\n/***/ }),\n\n/***/ 456:\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(115);\n__webpack_require__(114);\nmodule.exports = __webpack_require__(459);\n\n/***/ }),\n\n/***/ 457:\n/***/ (function(module, exports, __webpack_require__) {\n\n// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = __webpack_require__(72)\n  , TAG = __webpack_require__(14)('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function(it, key){\n  try {\n    return it[key];\n  } catch(e){ /* empty */ }\n};\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n/***/ }),\n\n/***/ 458:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar classof   = __webpack_require__(457)\n  , ITERATOR  = __webpack_require__(14)('iterator')\n  , Iterators = __webpack_require__(45);\nmodule.exports = __webpack_require__(22).getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n/***/ }),\n\n/***/ 459:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar anObject = __webpack_require__(23)\n  , get      = __webpack_require__(458);\nmodule.exports = __webpack_require__(22).getIterator = function(it){\n  var iterFn = get(it);\n  if(typeof iterFn != 'function')throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n/***/ }),\n\n/***/ 460:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(394)();\n// imports\n\n\n// module\nexports.push([module.i, \".dagre-d3-output .content{-webkit-box-flex:1;-ms-flex:1;flex:1;overflow:auto}.dagre-d3-output .content .rendered{-webkit-box-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;min-width:0;min-height:0}.dagre-d3-output .cluster rect{fill:#ddd}.dagre-d3-output .cluster .node-label{width:auto}.dagre-d3-output .cluster h3{margin:0;padding-top:3px;font-size:14px}.dagre-d3-output .cluster.level-0 rect{fill:#dadada}.dagre-d3-output .cluster.level-1 rect{fill:#bababa}.dagre-d3-output .cluster.level-2 rect{fill:#aaa}.dagre-d3-output text{font-weight:300;font-family:Helvetica Neue,Helvetica,Arial,sans-serf;font-size:14px}.dagre-d3-output .node rect{stroke:#999;fill:#fff;stroke-width:1.5px}.dagre-d3-output .edgePath path{stroke:#333;stroke-width:1.5px}.dagre-d3-output .edgePath.attack path{stroke:red}.dagre-d3-output .edgePath.attack marker{fill:red}.dagre-d3-output .edgePath.support path{stroke:green}.dagre-d3-output .edgePath.support marker{fill:green}.dagre-d3-output .edgePath.undercut path{stroke:purple}.dagre-d3-output .edgePath.undercut marker{fill:purple}.dagre-d3-output .node{cursor:pointer;display:block;position:static;margin:0;white-space:normal;width:200px;height:auto;text-align:center;color:#000}.dagre-d3-output .node .node-label{white-space:normal;padding:5px}.dagre-d3-output .node p{padding:0;margin:0;font-weight:400;font-size:12px;display:block}.dagre-d3-output .node h3{padding:0;margin:0;font-size:14px;font-weight:700;color:#264260;display:block}.dagre-d3-output .node.argument rect{fill:#6495ed;stroke:#000;stroke-width:2px}.dagre-d3-output .node.argument text{fill:#000}.dagre-d3-output .node.statement rect{fill:#fff;stroke:#6495ed;stroke-width:3px}.dagre-d3-output .node.statement text{fill:#000}.dagre-d3-output .node-label{text-align:center;width:150px}.dagre-d3-output .node-label h3{font-weight:700}.dagre-d3-output .node.statement.tag7 rect{stroke:#666}.dagre-d3-output .node.argument.tag7 rect{fill:#666}.dagre-d3-output .node.statement.tag6 rect{stroke:#a6761d}.dagre-d3-output .node.argument.tag6 rect{fill:#a6761d}.dagre-d3-output .node.statement.tag5 rect{stroke:#e6ab02}.dagre-d3-output .node.argument.tag5 rect{fill:#e6ab02}.dagre-d3-output .node.statement.tag4 rect{stroke:#66a61e}.dagre-d3-output .node.argument.tag4 rect{fill:#66a61e}.dagre-d3-output .node.statement.tag3 rect{stroke:#e7298a}.dagre-d3-output .node.argument.tag3 rect{fill:#e7298a}.dagre-d3-output .node.statement.tag2 rect{stroke:#7570b3}.dagre-d3-output .node.argument.tag2 rect{fill:#7570b3}.dagre-d3-output .node.statement.tag1 rect{stroke:#d95f02}.dagre-d3-output .node.argument.tag1 rect{fill:#d95f02}.dagre-d3-output .node.statement.tag0 rect{stroke:#1b9e77}.dagre-d3-output .node.argument.tag0 rect{fill:#1b9e77}\", \"\", {\"version\":3,\"sources\":[\"/Users/cvoigt/Documents/workspace/argdown/src/components/DagreD3Output.vue\"],\"names\":[],\"mappings\":\"AACA,0BACE,mBAAoB,AAChB,WAAY,AACR,OAAQ,AAChB,aAAe,CAChB,AACD,oCACI,mBAAoB,AAChB,WAAY,AACR,OAAQ,AAChB,oBAAqB,AACrB,oBAAqB,AACrB,aAAc,AACd,4BAA6B,AAC7B,6BAA8B,AAC1B,0BAA2B,AACvB,sBAAuB,AAE/B,YAAa,AACb,YAAc,CACjB,AACD,+BACE,SAAW,CACZ,AACD,sCACE,UAAY,CACb,AACD,6BACE,SAAU,AACV,gBAAiB,AACjB,cAAgB,CACjB,AACD,uCACE,YAAc,CACf,AACD,uCACE,YAAc,CACf,AACD,uCACE,SAAW,CACZ,AACD,sBACE,gBAAiB,AACjB,qDAA2D,AAC3D,cAAgB,CACjB,AACD,4BACE,YAAa,AACb,UAAW,AACX,kBAAoB,CACrB,AACD,gCACE,YAAa,AACb,kBAAoB,CACrB,AACD,uCACE,UAAY,CACb,AACD,yCACE,QAAU,CACX,AACD,wCACE,YAAc,CACf,AACD,0CACE,UAAY,CACb,AACD,yCACE,aAAe,CAChB,AACD,2CACE,WAAa,CACd,AACD,uBACE,eAAgB,AAChB,cAAe,AACf,gBAAiB,AACjB,SAAU,AACV,mBAAoB,AACpB,YAAa,AACb,YAAa,AACb,kBAAmB,AACnB,UAAY,CACb,AACD,mCACI,mBAAoB,AACpB,WAAa,CAChB,AACD,yBACI,UAAa,AACb,SAAU,AACV,gBAAoB,AACpB,eAAgB,AAChB,aAAe,CAClB,AACD,0BACI,UAAa,AACb,SAAU,AACV,eAAgB,AAChB,gBAAkB,AAClB,cAAe,AACf,aAAe,CAClB,AACD,qCACE,aAAqB,AACrB,YAAc,AACd,gBAAkB,CACnB,AACD,qCACE,SAAY,CACb,AACD,sCACE,UAAY,AACZ,eAAuB,AACvB,gBAAkB,CACnB,AACD,sCACE,SAAY,CACb,AACD,6BACE,kBAAmB,AACnB,WAAa,CACd,AACD,gCACI,eAAkB,CACrB,AACD,2CACE,WAAgB,CACjB,AACD,0CACE,SAAc,CACf,AACD,2CACE,cAAgB,CACjB,AACD,0CACE,YAAc,CACf,AACD,2CACE,cAAgB,CACjB,AACD,0CACE,YAAc,CACf,AACD,2CACE,cAAgB,CACjB,AACD,0CACE,YAAc,CACf,AACD,2CACE,cAAgB,CACjB,AACD,0CACE,YAAc,CACf,AACD,2CACE,cAAgB,CACjB,AACD,0CACE,YAAc,CACf,AACD,2CACE,cAAgB,CACjB,AACD,0CACE,YAAc,CACf,AACD,2CACE,cAAgB,CACjB,AACD,0CACE,YAAc,CACf\",\"file\":\"DagreD3Output.vue\",\"sourcesContent\":[\"\\n.dagre-d3-output .content {\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n  overflow: auto;\\n}\\n.dagre-d3-output .content .rendered {\\n    -webkit-box-flex: 1;\\n        -ms-flex: 1;\\n            flex: 1;\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: column;\\n            flex-direction: column;\\n    /* Firefox bug fix styles */\\n    min-width: 0;\\n    min-height: 0;\\n}\\n.dagre-d3-output .cluster rect {\\n  fill: #ddd;\\n}\\n.dagre-d3-output .cluster .node-label {\\n  width: auto;\\n}\\n.dagre-d3-output .cluster h3 {\\n  margin: 0;\\n  padding-top: 3px;\\n  font-size: 14px;\\n}\\n.dagre-d3-output .cluster.level-0 rect {\\n  fill: #dadada;\\n}\\n.dagre-d3-output .cluster.level-1 rect {\\n  fill: #bababa;\\n}\\n.dagre-d3-output .cluster.level-2 rect {\\n  fill: #aaa;\\n}\\n.dagre-d3-output text {\\n  font-weight: 300;\\n  font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serf;\\n  font-size: 14px;\\n}\\n.dagre-d3-output .node rect {\\n  stroke: #999;\\n  fill: #fff;\\n  stroke-width: 1.5px;\\n}\\n.dagre-d3-output .edgePath path {\\n  stroke: #333;\\n  stroke-width: 1.5px;\\n}\\n.dagre-d3-output .edgePath.attack path {\\n  stroke: red;\\n}\\n.dagre-d3-output .edgePath.attack marker {\\n  fill: red;\\n}\\n.dagre-d3-output .edgePath.support path {\\n  stroke: green;\\n}\\n.dagre-d3-output .edgePath.support marker {\\n  fill: green;\\n}\\n.dagre-d3-output .edgePath.undercut path {\\n  stroke: purple;\\n}\\n.dagre-d3-output .edgePath.undercut marker {\\n  fill: purple;\\n}\\n.dagre-d3-output .node {\\n  cursor: pointer;\\n  display: block;\\n  position: static;\\n  margin: 0;\\n  white-space: normal;\\n  width: 200px;\\n  height: auto;\\n  text-align: center;\\n  color: #000;\\n}\\n.dagre-d3-output .node .node-label {\\n    white-space: normal;\\n    padding: 5px;\\n}\\n.dagre-d3-output .node p {\\n    padding: 0px;\\n    margin: 0;\\n    font-weight: normal;\\n    font-size: 12px;\\n    display: block;\\n}\\n.dagre-d3-output .node h3 {\\n    padding: 0px;\\n    margin: 0;\\n    font-size: 14px;\\n    font-weight: bold;\\n    color: #264260;\\n    display: block;\\n}\\n.dagre-d3-output .node.argument rect {\\n  fill: cornflowerblue;\\n  stroke: black;\\n  stroke-width: 2px;\\n}\\n.dagre-d3-output .node.argument text {\\n  fill: black;\\n}\\n.dagre-d3-output .node.statement rect {\\n  fill: white;\\n  stroke: cornflowerblue;\\n  stroke-width: 3px;\\n}\\n.dagre-d3-output .node.statement text {\\n  fill: black;\\n}\\n.dagre-d3-output .node-label {\\n  text-align: center;\\n  width: 150px;\\n}\\n.dagre-d3-output .node-label h3 {\\n    font-weight: bold;\\n}\\n.dagre-d3-output .node.statement.tag7 rect {\\n  stroke: #666666;\\n}\\n.dagre-d3-output .node.argument.tag7 rect {\\n  fill: #666666;\\n}\\n.dagre-d3-output .node.statement.tag6 rect {\\n  stroke: #a6761d;\\n}\\n.dagre-d3-output .node.argument.tag6 rect {\\n  fill: #a6761d;\\n}\\n.dagre-d3-output .node.statement.tag5 rect {\\n  stroke: #e6ab02;\\n}\\n.dagre-d3-output .node.argument.tag5 rect {\\n  fill: #e6ab02;\\n}\\n.dagre-d3-output .node.statement.tag4 rect {\\n  stroke: #66a61e;\\n}\\n.dagre-d3-output .node.argument.tag4 rect {\\n  fill: #66a61e;\\n}\\n.dagre-d3-output .node.statement.tag3 rect {\\n  stroke: #e7298a;\\n}\\n.dagre-d3-output .node.argument.tag3 rect {\\n  fill: #e7298a;\\n}\\n.dagre-d3-output .node.statement.tag2 rect {\\n  stroke: #7570b3;\\n}\\n.dagre-d3-output .node.argument.tag2 rect {\\n  fill: #7570b3;\\n}\\n.dagre-d3-output .node.statement.tag1 rect {\\n  stroke: #d95f02;\\n}\\n.dagre-d3-output .node.argument.tag1 rect {\\n  fill: #d95f02;\\n}\\n.dagre-d3-output .node.statement.tag0 rect {\\n  stroke: #1b9e77;\\n}\\n.dagre-d3-output .node.argument.tag0 rect {\\n  fill: #1b9e77;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 462:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar util = __webpack_require__(396);\n\nmodule.exports = {\n  'default': normal,\n  'normal': normal,\n  'vee': vee,\n  'undirected': undirected\n};\n\nfunction normal(parent, id, edge, type) {\n  var marker = parent.append('marker').attr('id', id).attr('viewBox', '0 0 10 10').attr('refX', 9).attr('refY', 5).attr('markerUnits', 'strokeWidth').attr('markerWidth', 8).attr('markerHeight', 6).attr('orient', 'auto');\n\n  var path = marker.append('path').attr('d', 'M 0 0 L 10 5 L 0 10 z').style('stroke-width', 1).style('stroke-dasharray', '1,0');\n  util.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n\nfunction vee(parent, id, edge, type) {\n  var marker = parent.append('marker').attr('id', id).attr('viewBox', '0 0 10 10').attr('refX', 9).attr('refY', 5).attr('markerUnits', 'strokeWidth').attr('markerWidth', 8).attr('markerHeight', 6).attr('orient', 'auto');\n\n  var path = marker.append('path').attr('d', 'M 0 0 L 10 5 L 0 10 L 4 5 z').style('stroke-width', 1).style('stroke-dasharray', '1,0');\n  util.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n\nfunction undirected(parent, id, edge, type) {\n  var marker = parent.append('marker').attr('id', id).attr('viewBox', '0 0 10 10').attr('refX', 9).attr('refY', 5).attr('markerUnits', 'strokeWidth').attr('markerWidth', 8).attr('markerHeight', 6).attr('orient', 'auto');\n\n  var path = marker.append('path').attr('d', 'M 0 5 L 10 5').style('stroke-width', 1).style('stroke-dasharray', '1,0');\n  util.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n\n/***/ }),\n\n/***/ 463:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar util = __webpack_require__(396);\nvar addLabel = __webpack_require__(405);\nvar d3 = __webpack_require__(399);\n\nmodule.exports = createClusters;\n\nfunction createClusters(selection, g) {\n  var clusters = g.nodes().filter(function (v) {\n    return util.isSubgraph(g, v);\n  });\n  var svgClusters = selection.selectAll('g.cluster').data(clusters, function (v) {\n    return v;\n  });\n\n  svgClusters.selectAll('*').remove();\n  svgClusters.enter().append('g').attr('class', 'cluster').attr('id', function (v) {\n    var node = g.node(v);\n    return node.id;\n  }).style('opacity', 0);\n\n  util.applyTransition(svgClusters, g).style('opacity', 1);\n\n  svgClusters.each(function (v) {\n    var node = g.node(v);\n    var thisGroup = d3.select(this);\n    d3.select(this).append('rect');\n    util.applyClass(thisGroup, node['class'], 'cluster');\n\n    var labelGroup = thisGroup.append('g').attr('class', 'label');\n    addLabel(labelGroup, node, node.clusterLabelPos);\n  });\n\n  svgClusters.selectAll('rect').each(function (c) {\n    var node = g.node(c);\n    var domCluster = d3.select(this);\n    util.applyStyle(domCluster, node.style);\n  });\n\n  util.applyTransition(svgClusters.exit(), g).style('opacity', 0).remove();\n\n  return svgClusters;\n}\n\n/***/ }),\n\n/***/ 464:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _ = __webpack_require__(400);\nvar addLabel = __webpack_require__(405);\nvar util = __webpack_require__(396);\nvar d3 = __webpack_require__(399);\n\nmodule.exports = createEdgeLabels;\n\nfunction createEdgeLabels(selection, g) {\n  var svgEdgeLabels = selection.selectAll('g.edgeLabel').data(g.edges(), function (e) {\n    return util.edgeToId(e);\n  }).classed('update', true);\n\n  svgEdgeLabels.selectAll('*').remove();\n  svgEdgeLabels.enter().append('g').classed('edgeLabel', true).style('opacity', 0);\n  svgEdgeLabels.each(function (e) {\n    var edge = g.edge(e);\n    var label = addLabel(d3.select(this), g.edge(e), 0, 0).classed('label', true);\n    var bbox = label.node().getBBox();\n\n    if (edge.labelId) {\n      label.attr('id', edge.labelId);\n    }\n    if (!_.has(edge, 'width')) {\n      edge.width = bbox.width;\n    }\n    if (!_.has(edge, 'height')) {\n      edge.height = bbox.height;\n    }\n  });\n\n  util.applyTransition(svgEdgeLabels.exit(), g).style('opacity', 0).remove();\n\n  return svgEdgeLabels;\n}\n\n/***/ }),\n\n/***/ 465:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _ = __webpack_require__(400);\nvar intersectNode = __webpack_require__(414);\nvar util = __webpack_require__(396);\nvar d3 = __webpack_require__(399);\nmodule.exports = createEdgePaths;\n\nfunction createEdgePaths(selection, g, arrows) {\n  var svgPaths = selection.selectAll('g.edgePath').data(g.edges(), function (e) {\n    return util.edgeToId(e);\n  }).classed('update', true);\n\n  enter(svgPaths, g);\n  exit(svgPaths, g);\n\n  util.applyTransition(svgPaths, g).style('opacity', 1\n\n  // Save DOM element in the path group, and set ID and class\n  );svgPaths.each(function (e) {\n    var domEdge = d3.select(this);\n    var edge = g.edge(e);\n    edge.elem = this;\n\n    if (edge.id) {\n      domEdge.attr('id', edge.id);\n    }\n\n    util.applyClass(domEdge, edge['class'], (domEdge.classed('update') ? 'update ' : '') + 'edgePath');\n  });\n\n  svgPaths.selectAll('path.path').each(function (e) {\n    var edge = g.edge(e);\n    edge.arrowheadId = _.uniqueId('arrowhead');\n\n    var domEdge = d3.select(this).attr('marker-end', function () {\n      return 'url(' + makeFragmentRef(location.href, edge.arrowheadId) + ')';\n    }).style('fill', 'none');\n\n    util.applyTransition(domEdge, g).attr('d', function (e) {\n      return calcPoints(g, e);\n    });\n\n    util.applyStyle(domEdge, edge.style);\n  });\n\n  svgPaths.selectAll('defs *').remove();\n  svgPaths.selectAll('defs').each(function (e) {\n    var edge = g.edge(e);\n    var arrowhead = arrows[edge.arrowhead];\n    arrowhead(d3.select(this), edge.arrowheadId, edge, 'arrowhead');\n  });\n\n  return svgPaths;\n}\n\nfunction makeFragmentRef(url, fragmentId) {\n  var baseUrl = url.split('#')[0];\n  return baseUrl + '#' + fragmentId;\n}\n\nfunction calcPoints(g, e) {\n  var edge = g.edge(e);\n  var tail = g.node(e.v);\n  var head = g.node(e.w);\n  var points = edge.points.slice(1, edge.points.length - 1);\n  points.unshift(intersectNode(tail, points[0]));\n  points.push(intersectNode(head, points[points.length - 1]));\n\n  return createLine(edge, points);\n}\n\nfunction createLine(edge, points) {\n  var line = d3.svg.line().x(function (d) {\n    return d.x;\n  }).y(function (d) {\n    return d.y;\n  });\n\n  if (_.has(edge, 'lineInterpolate')) {\n    line.interpolate(edge.lineInterpolate);\n  }\n\n  if (_.has(edge, 'lineTension')) {\n    line.tension(Number(edge.lineTension));\n  }\n\n  return line(points);\n}\n\nfunction getCoords(elem) {\n  var bbox = elem.getBBox();\n  var matrix = elem.ownerSVGElement.getScreenCTM().inverse().multiply(elem.getScreenCTM()).translate(bbox.width / 2, bbox.height / 2);\n  return { x: matrix.e, y: matrix.f };\n}\n\nfunction enter(svgPaths, g) {\n  var svgPathsEnter = svgPaths.enter().append('g').attr('class', 'edgePath').style('opacity', 0);\n  svgPathsEnter.append('path').attr('class', 'path').attr('d', function (e) {\n    var edge = g.edge(e);\n    var sourceElem = g.node(e.v).elem;\n    var points = _.range(edge.points.length).map(function () {\n      return getCoords(sourceElem);\n    });\n    return createLine(edge, points);\n  });\n  svgPathsEnter.append('defs');\n}\n\nfunction exit(svgPaths, g) {\n  var svgPathExit = svgPaths.exit();\n  util.applyTransition(svgPathExit, g).style('opacity', 0).remove();\n\n  util.applyTransition(svgPathExit.select('path.path'), g).attr('d', function (e) {\n    var source = g.node(e.v);\n\n    if (source) {\n      var points = _.range(this.getTotalLength()).map(function () {\n        return source;\n      });\n      return createLine({}, points);\n    } else {\n      return d3.select(this).attr('d');\n    }\n  });\n}\n\n/***/ }),\n\n/***/ 466:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _ = __webpack_require__(400);\nvar addLabel = __webpack_require__(405);\nvar util = __webpack_require__(396);\nvar d3 = __webpack_require__(399);\n\nmodule.exports = createNodes;\n\nfunction createNodes(selection, g, shapes) {\n  var simpleNodes = g.nodes().filter(function (v) {\n    return !util.isSubgraph(g, v);\n  });\n  var svgNodes = selection.selectAll('g.node').data(simpleNodes, function (v) {\n    return v;\n  }).classed('update', true);\n\n  svgNodes.selectAll('*').remove();\n  svgNodes.enter().append('g').attr('class', 'node').style('opacity', 0);\n  svgNodes.each(function (v) {\n    var node = g.node(v);\n    var thisGroup = d3.select(this);\n    var labelGroup = thisGroup.append('g').attr('class', 'label');\n    var labelDom = addLabel(labelGroup, node);\n    var shape = shapes[node.shape];\n    var bbox = _.pick(labelDom.node().getBBox(), 'width', 'height');\n\n    node.elem = this;\n\n    if (node.id) {\n      thisGroup.attr('id', node.id);\n    }\n    if (node.labelId) {\n      labelGroup.attr('id', node.labelId);\n    }\n    util.applyClass(thisGroup, node['class'], (thisGroup.classed('update') ? 'update ' : '') + 'node');\n\n    if (_.has(node, 'width')) {\n      bbox.width = node.width;\n    }\n    if (_.has(node, 'height')) {\n      bbox.height = node.height;\n    }\n\n    bbox.width += node.paddingLeft + node.paddingRight;\n    bbox.height += node.paddingTop + node.paddingBottom;\n    labelGroup.attr('transform', 'translate(' + (node.paddingLeft - node.paddingRight) / 2 + ',' + (node.paddingTop - node.paddingBottom) / 2 + ')');\n\n    var shapeSvg = shape(d3.select(this), bbox, node);\n    util.applyStyle(shapeSvg, node.style);\n\n    var shapeBBox = shapeSvg.node().getBBox();\n    node.width = shapeBBox.width;\n    node.height = shapeBBox.height;\n  });\n\n  util.applyTransition(svgNodes.exit(), g).style('opacity', 0).remove();\n\n  return svgNodes;\n}\n\n/***/ }),\n\n/***/ 467:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = __webpack_require__(398) || window.graphlib;\n\n/***/ }),\n\n/***/ 468:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * @license\n * Copyright (c) 2012-2013 Chris Pettitt\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the 'Software'), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nmodule.exports = {\n  graphlib: __webpack_require__(467),\n  dagre: __webpack_require__(412),\n  intersect: __webpack_require__(469),\n  render: __webpack_require__(477),\n  util: __webpack_require__(396),\n  version: __webpack_require__(479)\n};\n\n/***/ }),\n\n/***/ 469:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {\n  node: __webpack_require__(414),\n  circle: __webpack_require__(413),\n  ellipse: __webpack_require__(404),\n  polygon: __webpack_require__(415),\n  rect: __webpack_require__(416)\n};\n\n/***/ }),\n\n/***/ 470:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = intersectLine;\n\n/*\n * Returns the point at which two lines, p and q, intersect or returns\n * undefined if they do not intersect.\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1 = void 0,\n      a2 = void 0,\n      b1 = void 0,\n      b2 = void 0,\n      c1 = void 0,\n      c2 = void 0;\n  var r1 = void 0,\n      r2 = void 0,\n      r3 = void 0,\n      r4 = void 0;\n  var denom = void 0,\n      offset = void 0,\n      num = void 0;\n  var x = void 0,\n      y = void 0;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = p2.x * p1.y - p1.x * p2.y;\n\n  // Compute r3 and r4.\n  r3 = a1 * q1.x + b1 * q1.y + c1;\n  r4 = a1 * q2.x + b1 * q2.y + c1;\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if (r3 !== 0 && r4 !== 0 && sameSign(r3, r4)) {\n    return; /* DONT_INTERSECT */\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = q2.x * q1.y - q1.x * q2.y;\n\n  // Compute r1 and r2\n  r1 = a2 * p1.x + b2 * p1.y + c2;\n  r2 = a2 * p2.x + b2 * p2.y + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if (r1 !== 0 && r2 !== 0 && sameSign(r1, r2)) {\n    return; /* DONT_INTERSECT */\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = a1 * b2 - a2 * b1;\n  if (denom === 0) {\n    return; /* COLLINEAR */\n  }\n\n  offset = Math.abs(denom / 2\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  );num = b1 * c2 - b2 * c1;\n  x = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  num = a2 * c1 - a1 * c2;\n  y = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  return { x: x, y: y };\n}\n\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n\n/***/ }),\n\n/***/ 471:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar util = __webpack_require__(396);\n\nmodule.exports = addHtmlLabel;\n\nfunction addHtmlLabel(root, node) {\n  var fo = root.append('foreignObject').attr('width', '100000');\n\n  var div = fo.append('xhtml:div');\n  div.attr('xmlns', 'http://www.w3.org/1999/xhtml');\n\n  var label = node.label;\n  switch (typeof label === 'undefined' ? 'undefined' : _typeof(label)) {\n    case 'function':\n      div.insert(label);\n      break;\n    case 'object':\n      // Currently we assume this is a DOM object.\n      div.insert(function () {\n        return label;\n      });\n      break;\n    default:\n      div.html(label);\n  }\n\n  util.applyStyle(div, node.labelStyle);\n  div.style('display', 'inline-block'\n  // Fix for firefox\n  );div.style('white-space', 'nowrap');\n\n  var client = div[0][0].getBoundingClientRect();\n  fo.attr('width', client.width).attr('height', client.height);\n\n  return fo;\n}\n\n/***/ }),\n\n/***/ 472:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar util = __webpack_require__(396);\n\nmodule.exports = addSVGLabel;\n\nfunction addSVGLabel(root, node) {\n  var domNode = root;\n\n  domNode.node().appendChild(node.label);\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\n/***/ }),\n\n/***/ 473:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar util = __webpack_require__(396);\n\nmodule.exports = addTextLabel;\n\n/*\n * Attaches a text label to the specified root. Handles escape sequences.\n */\nfunction addTextLabel(root, node) {\n  var domNode = root.append('text');\n\n  var lines = processEscapeSequences(node.label).split('\\n');\n  for (var i = 0; i < lines.length; i++) {\n    domNode.append('tspan').attr('xml:space', 'preserve').attr('dy', '1em').attr('x', '1').text(lines[i]);\n  }\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\nfunction processEscapeSequences(text) {\n  var newText = '';\n  var escaped = false;\n  var ch = void 0;\n  for (var i = 0; i < text.length; ++i) {\n    ch = text[i];\n    if (escaped) {\n      switch (ch) {\n        case 'n':\n          newText += '\\n';\n          break;\n        default:\n          newText += ch;\n      }\n      escaped = false;\n    } else if (ch === '\\\\') {\n      escaped = true;\n    } else {\n      newText += ch;\n    }\n  }\n  return newText;\n}\n\n/***/ }),\n\n/***/ 474:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar util = __webpack_require__(396);\nvar d3 = __webpack_require__(399);\n\nmodule.exports = positionClusters;\n\nfunction positionClusters(selection, g) {\n  var created = selection.filter(function () {\n    return !d3.select(this).classed('update');\n  });\n\n  function translate(v) {\n    var node = g.node(v);\n    return 'translate(' + node.x + ',' + node.y + ')';\n  }\n\n  created.attr('transform', translate);\n\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n\n  util.applyTransition(created.selectAll('rect'), g).attr('width', function (v) {\n    return g.node(v).width;\n  }).attr('height', function (v) {\n    return g.node(v).height;\n  }).attr('x', function (v) {\n    var node = g.node(v);\n    return -node.width / 2;\n  }).attr('y', function (v) {\n    var node = g.node(v);\n    return -node.height / 2;\n  });\n}\n\n/***/ }),\n\n/***/ 475:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar util = __webpack_require__(396);\nvar d3 = __webpack_require__(399);\nvar _ = __webpack_require__(400);\n\nmodule.exports = positionEdgeLabels;\n\nfunction positionEdgeLabels(selection, g) {\n  var created = selection.filter(function () {\n    return !d3.select(this).classed('update');\n  });\n\n  function translate(e) {\n    var edge = g.edge(e);\n    return _.has(edge, 'x') ? 'translate(' + edge.x + ',' + edge.y + ')' : '';\n  }\n\n  created.attr('transform', translate);\n\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n}\n\n/***/ }),\n\n/***/ 476:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar util = __webpack_require__(396);\nvar d3 = __webpack_require__(399);\n\nmodule.exports = positionNodes;\n\nfunction positionNodes(selection, g) {\n  var created = selection.filter(function () {\n    return !d3.select(this).classed('update');\n  });\n\n  function translate(v) {\n    var node = g.node(v);\n    return 'translate(' + node.x + ',' + node.y + ')';\n  }\n\n  created.attr('transform', translate);\n\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n}\n\n/***/ }),\n\n/***/ 477:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _ = __webpack_require__(400);\nvar layout = __webpack_require__(412).layout;\n\nmodule.exports = render;\n\n// This design is based on http://bost.ocks.org/mike/chart/.\nfunction render() {\n  var createNodes = __webpack_require__(466);\n  var createClusters = __webpack_require__(463);\n  var createEdgeLabels = __webpack_require__(464);\n  var createEdgePaths = __webpack_require__(465);\n  var positionNodes = __webpack_require__(476);\n  var positionEdgeLabels = __webpack_require__(475);\n  var positionClusters = __webpack_require__(474);\n  var shapes = __webpack_require__(478);\n  var arrows = __webpack_require__(462);\n\n  var fn = function fn(svg, g) {\n    preProcessGraph(g);\n\n    var outputGroup = createOrSelectGroup(svg, 'output');\n    var clustersGroup = createOrSelectGroup(outputGroup, 'clusters');\n    var edgePathsGroup = createOrSelectGroup(outputGroup, 'edgePaths');\n    var edgeLabels = createEdgeLabels(createOrSelectGroup(outputGroup, 'edgeLabels'), g);\n    var nodes = createNodes(createOrSelectGroup(outputGroup, 'nodes'), g, shapes);\n\n    layout(g);\n\n    positionNodes(nodes, g);\n    positionEdgeLabels(edgeLabels, g);\n    createEdgePaths(edgePathsGroup, g, arrows);\n\n    var clusters = createClusters(clustersGroup, g);\n    positionClusters(clusters, g);\n\n    postProcessGraph(g);\n  };\n\n  fn.createNodes = function (value) {\n    if (!arguments.length) {\n      return createNodes;\n    }\n    createNodes = value;\n    return fn;\n  };\n\n  fn.createClusters = function (value) {\n    if (!arguments.length) {\n      return createClusters;\n    }\n    createClusters = value;\n    return fn;\n  };\n\n  fn.createEdgeLabels = function (value) {\n    if (!arguments.length) {\n      return createEdgeLabels;\n    }\n    createEdgeLabels = value;\n    return fn;\n  };\n\n  fn.createEdgePaths = function (value) {\n    if (!arguments.length) {\n      return createEdgePaths;\n    }\n    createEdgePaths = value;\n    return fn;\n  };\n\n  fn.shapes = function (value) {\n    if (!arguments.length) {\n      return shapes;\n    }\n    shapes = value;\n    return fn;\n  };\n\n  fn.arrows = function (value) {\n    if (!arguments.length) {\n      return arrows;\n    }\n    arrows = value;\n    return fn;\n  };\n\n  return fn;\n}\n\nvar NODE_DEFAULT_ATTRS = {\n  paddingLeft: 10,\n  paddingRight: 10,\n  paddingTop: 10,\n  paddingBottom: 10,\n  rx: 0,\n  ry: 0,\n  shape: 'rect'\n};\n\nvar EDGE_DEFAULT_ATTRS = {\n  arrowhead: 'normal',\n  lineInterpolate: 'linear'\n};\n\nfunction preProcessGraph(g) {\n  g.nodes().forEach(function (v) {\n    var node = g.node(v);\n    if (!_.has(node, 'label') && !g.children(v).length) {\n      node.label = v;\n    }\n\n    if (_.has(node, 'paddingX')) {\n      _.defaults(node, {\n        paddingLeft: node.paddingX,\n        paddingRight: node.paddingX\n      });\n    }\n\n    if (_.has(node, 'paddingY')) {\n      _.defaults(node, {\n        paddingTop: node.paddingY,\n        paddingBottom: node.paddingY\n      });\n    }\n\n    if (_.has(node, 'padding')) {\n      _.defaults(node, {\n        paddingLeft: node.padding,\n        paddingRight: node.padding,\n        paddingTop: node.padding,\n        paddingBottom: node.padding\n      });\n    }\n\n    _.defaults(node, NODE_DEFAULT_ATTRS);\n\n    _.each(['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom'], function (k) {\n      node[k] = Number(node[k]);\n    }\n\n    // Save dimensions for restore during post-processing\n    );if (_.has(node, 'width')) {\n      node._prevWidth = node.width;\n    }\n    if (_.has(node, 'height')) {\n      node._prevHeight = node.height;\n    }\n  });\n\n  g.edges().forEach(function (e) {\n    var edge = g.edge(e);\n    if (!_.has(edge, 'label')) {\n      edge.label = '';\n    }\n    _.defaults(edge, EDGE_DEFAULT_ATTRS);\n  });\n}\n\nfunction postProcessGraph(g) {\n  _.each(g.nodes(), function (v) {\n    var node = g.node(v\n\n    // Restore original dimensions\n    );if (_.has(node, '_prevWidth')) {\n      node.width = node._prevWidth;\n    } else {\n      delete node.width;\n    }\n\n    if (_.has(node, '_prevHeight')) {\n      node.height = node._prevHeight;\n    } else {\n      delete node.height;\n    }\n\n    delete node._prevWidth;\n    delete node._prevHeight;\n  });\n}\n\nfunction createOrSelectGroup(root, name) {\n  var selection = root.select('g.' + name);\n  if (selection.empty()) {\n    selection = root.append('g').attr('class', name);\n  }\n  return selection;\n}\n\n/***/ }),\n\n/***/ 478:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar intersectRect = __webpack_require__(416);\nvar intersectEllipse = __webpack_require__(404);\nvar intersectCircle = __webpack_require__(413);\nvar intersectPolygon = __webpack_require__(415);\n\nmodule.exports = {\n  rect: rect,\n  ellipse: ellipse,\n  circle: circle,\n  diamond: diamond\n};\n\nfunction rect(parent, bbox, node) {\n  var shapeSvg = parent.insert('rect', ':first-child').attr('rx', node.rx).attr('ry', node.ry).attr('x', -bbox.width / 2).attr('y', -bbox.height / 2).attr('width', bbox.width).attr('height', bbox.height);\n\n  node.intersect = function (point) {\n    return intersectRect(node, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction ellipse(parent, bbox, node) {\n  var rx = bbox.width / 2;\n  var ry = bbox.height / 2;\n  var shapeSvg = parent.insert('ellipse', ':first-child').attr('x', -bbox.width / 2).attr('y', -bbox.height / 2).attr('rx', rx).attr('ry', ry);\n\n  node.intersect = function (point) {\n    return intersectEllipse(node, rx, ry, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction circle(parent, bbox, node) {\n  var r = Math.max(bbox.width, bbox.height) / 2;\n  var shapeSvg = parent.insert('circle', ':first-child').attr('x', -bbox.width / 2).attr('y', -bbox.height / 2).attr('r', r);\n\n  node.intersect = function (point) {\n    return intersectCircle(node, r, point);\n  };\n\n  return shapeSvg;\n}\n\n// Circumscribe an ellipse for the bounding box with a diamond shape. I derived\n// the function to calculate the diamond shape from:\n// http://mathforum.org/kb/message.jspa?messageID=3750236\nfunction diamond(parent, bbox, node) {\n  var w = bbox.width * Math.SQRT2 / 2;\n  var h = bbox.height * Math.SQRT2 / 2;\n  var points = [{ x: 0, y: -h }, { x: -w, y: 0 }, { x: 0, y: h }, { x: w, y: 0 }];\n  var shapeSvg = parent.insert('polygon', ':first-child').attr('points', points.map(function (p) {\n    return p.x + ',' + p.y;\n  }).join(' '));\n\n  node.intersect = function (p) {\n    return intersectPolygon(node, points, p);\n  };\n\n  return shapeSvg;\n}\n\n/***/ }),\n\n/***/ 479:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = '0.5.0';\n\n/***/ }),\n\n/***/ 480:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(460);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(395)(\"5415d007\", content, true);\n\n/***/ }),\n\n/***/ 484:\n/***/ (function(module, exports) {\n\nmodule.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    ref: \"output\",\n    staticClass: \"dagre-d3-output map-output output\"\n  }, [_c('div', {\n    staticClass: \"content\"\n  }, [_c('div', {\n    staticClass: \"rendered\"\n  }, [_c('svg', {\n    ref: \"svg\",\n    attrs: {\n      \"width\": \"100%\",\n      \"height\": \"100%\"\n    }\n  }, [_c('g', {\n    staticStyle: {\n      \"transform\": \"translate(0, 10px)\"\n    }\n  })])])])])\n},staticRenderFns: []}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/0.86552f2f98fbcb939462.js","\n/* styles */\nrequire(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"id\\\":\\\"data-v-42290744\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./DagreD3Output.vue\")\n\nvar Component = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")(\n  /* script */\n  require(\"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./DagreD3Output.vue\"),\n  /* template */\n  require(\"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-42290744\\\"}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./DagreD3Output.vue\"),\n  /* scopeId */\n  null,\n  /* cssModules */\n  null\n)\n\nmodule.exports = Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/DagreD3Output.vue\n// module id = 116\n// module chunks = 0","'use strict';\n\nvar _ = require('./lodash'\n\n// Public utility functions\n);module.exports = {\n  isSubgraph: isSubgraph,\n  edgeToId: edgeToId,\n  applyStyle: applyStyle,\n  applyClass: applyClass,\n  applyTransition: applyTransition\n\n  /*\n   * Returns true if the specified node in the graph is a subgraph node. A\n   * subgraph node is one that contains other nodes.\n   */\n};function isSubgraph(g, v) {\n  return !!g.children(v).length;\n}\n\nfunction edgeToId(e) {\n  return escapeId(e.v) + ':' + escapeId(e.w) + ':' + escapeId(e.name);\n}\n\nvar ID_DELIM = /:/g;\nfunction escapeId(str) {\n  return str ? String(str).replace(ID_DELIM, '\\\\:') : '';\n}\n\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr('style', styleFn);\n  }\n}\n\nfunction applyClass(dom, classFn, otherClasses) {\n  if (classFn) {\n    dom.attr('class', classFn).attr('class', otherClasses + ' ' + dom.attr('class'));\n  }\n}\n\nfunction applyTransition(selection, g) {\n  var graph = g.graph();\n\n  if (_.isPlainObject(graph)) {\n    var transition = graph.transition;\n    if (_.isFunction(transition)) {\n      return transition(selection);\n    }\n  }\n\n  return selection;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/util.js\n// module id = 396\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addDummyNode = addDummyNode;\nexports.simplify = simplify;\nexports.asNonCompoundGraph = asNonCompoundGraph;\nexports.successorWeights = successorWeights;\nexports.predecessorWeights = predecessorWeights;\nexports.intersectRect = intersectRect;\nexports.buildLayerMatrix = buildLayerMatrix;\nexports.normalizeRanks = normalizeRanks;\nexports.removeEmptyRanks = removeEmptyRanks;\nexports.addBorderNode = addBorderNode;\nexports.maxRank = maxRank;\nexports.partition = partition;\nexports.time = time;\nexports.notime = notime;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _cienaGraphlib = require('ciena-graphlib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Adds a dummy node to the graph and return v.\n */\nfunction addDummyNode(g, type, attrs, name) {\n  var v;\n  do {\n    v = _lodash2.default.uniqueId(name);\n  } while (g.hasNode(v));\n\n  attrs.dummy = type;\n  g.setNode(v, attrs);\n  return v;\n}\n\n/*\n * Returns a new graph with only simple edges. Handles aggregation of data\n * associated with multi-edges.\n */\nfunction simplify(g) {\n  var simplified = new _cienaGraphlib.Graph().setGraph(g.graph());\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    simplified.setNode(v, g.node(v));\n  });\n  _lodash2.default.forEach(g.edges(), function (e) {\n    var simpleLabel = simplified.edge(e.v, e.w) || { weight: 0, minlen: 1 };\n    var label = g.edge(e);\n    simplified.setEdge(e.v, e.w, {\n      weight: simpleLabel.weight + label.weight,\n      minlen: Math.max(simpleLabel.minlen, label.minlen)\n    });\n  });\n  return simplified;\n}\n\nfunction asNonCompoundGraph(g) {\n  var simplified = new _cienaGraphlib.Graph({ multigraph: g.isMultigraph() }).setGraph(g.graph());\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    if (!g.children(v).length) {\n      simplified.setNode(v, g.node(v));\n    }\n  });\n  _lodash2.default.forEach(g.edges(), function (e) {\n    simplified.setEdge(e, g.edge(e));\n  });\n  return simplified;\n}\n\nfunction successorWeights(g) {\n  var weightMap = _lodash2.default.map(g.nodes(), function (v) {\n    var sucs = {};\n    _lodash2.default.forEach(g.outEdges(v), function (e) {\n      sucs[e.w] = (sucs[e.w] || 0) + g.edge(e).weight;\n    });\n    return sucs;\n  });\n  return _lodash2.default.zipObject(g.nodes(), weightMap);\n}\n\nfunction predecessorWeights(g) {\n  var weightMap = _lodash2.default.map(g.nodes(), function (v) {\n    var preds = {};\n    _lodash2.default.forEach(g.inEdges(v), function (e) {\n      preds[e.v] = (preds[e.v] || 0) + g.edge(e).weight;\n    });\n    return preds;\n  });\n  return _lodash2.default.zipObject(g.nodes(), weightMap);\n}\n\n/*\n * Finds where a line starting at point ({x, y}) would intersect a rectangle\n * ({x, y, width, height}) if it were pointing at the rectangle's center.\n */\nfunction intersectRect(rect, point) {\n  var x = rect.x;\n  var y = rect.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = rect.width / 2;\n  var h = rect.height / 2;\n\n  if (!dx && !dy) {\n    throw new Error('Not possible to find intersection inside of the rectangle');\n  }\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = w * dy / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n\n/*\n * Given a DAG with each node assigned \"rank\" and \"order\" properties, this\n * function will produce a matrix with the ids of each node.\n */\nfunction buildLayerMatrix(g) {\n  var layering = _lodash2.default.map(_lodash2.default.range(maxRank(g) + 1), function () {\n    return [];\n  });\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    var rank = node.rank;\n    if (!_lodash2.default.isUndefined(rank)) {\n      layering[rank][node.order] = v;\n    }\n  });\n  return layering;\n}\n\n/*\n * Adjusts the ranks for all nodes in the graph such that all nodes v have\n * rank(v) >= 0 and at least one node w has rank(w) = 0.\n */\nfunction normalizeRanks(g) {\n  var min = _lodash2.default.min(_lodash2.default.map(g.nodes(), function (v) {\n    return g.node(v).rank;\n  }));\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (_lodash2.default.has(node, 'rank')) {\n      node.rank -= min;\n    }\n  });\n}\n\nfunction removeEmptyRanks(g) {\n  // Ranks may not start at 0, so we need to offset them\n  var offset = _lodash2.default.min(_lodash2.default.map(g.nodes(), function (v) {\n    return g.node(v).rank;\n  }));\n\n  var layers = [];\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    var rank = g.node(v).rank - offset;\n    if (!layers[rank]) {\n      layers[rank] = [];\n    }\n    layers[rank].push(v);\n  });\n\n  var delta = 0;\n  var nodeRankFactor = g.graph().nodeRankFactor;\n  _lodash2.default.forEach(layers, function (vs, i) {\n    if (_lodash2.default.isUndefined(vs) && i % nodeRankFactor !== 0) {\n      --delta;\n    } else if (delta) {\n      _lodash2.default.forEach(vs, function (v) {\n        g.node(v).rank += delta;\n      });\n    }\n  });\n}\n\nfunction addBorderNode(g, prefix, rank, order) {\n  var node = {\n    width: 0,\n    height: 0\n  };\n  if (arguments.length >= 4) {\n    node.rank = rank;\n    node.order = order;\n  }\n  return addDummyNode(g, 'border', node, prefix);\n}\n\nfunction maxRank(g) {\n  return _lodash2.default.max(_lodash2.default.map(g.nodes(), function (v) {\n    var rank = g.node(v).rank;\n    if (!_lodash2.default.isUndefined(rank)) {\n      return rank;\n    }\n  }));\n}\n\n/*\n * Partition a collection into two groups: `lhs` and `rhs`. If the supplied\n * function returns true for an entry it goes into `lhs`. Otherwise it goes\n * into `rhs.\n */\nfunction partition(collection, fn) {\n  var result = { lhs: [], rhs: [] };\n  _lodash2.default.forEach(collection, function (value) {\n    if (fn(value)) {\n      result.lhs.push(value);\n    } else {\n      result.rhs.push(value);\n    }\n  });\n  return result;\n}\n\n/*\n * Returns a new function that wraps `fn` with a timer. The wrapper logs the\n * time it takes to execute the function.\n */\nfunction time(name, fn) {\n  var start = _lodash2.default.now();\n  try {\n    return fn();\n  } finally {\n    console.log(name + ' time: ' + (_lodash2.default.now() - start) + 'ms');\n  }\n}\n\nfunction notime(name, fn) {\n  return fn();\n}\n\nexports.default = {\n  addBorderNode: addBorderNode,\n  addDummyNode: addDummyNode,\n  asNonCompoundGraph: asNonCompoundGraph,\n  buildLayerMatrix: buildLayerMatrix,\n  intersectRect: intersectRect,\n  maxRank: maxRank,\n  partition: partition,\n  predecessorWeights: predecessorWeights,\n  normalizeRanks: normalizeRanks,\n  notime: notime,\n  removeEmptyRanks: removeEmptyRanks,\n  simplify: simplify,\n  successorWeights: successorWeights,\n  time: time\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-dagre/lib/util.js\n// module id = 397\n// module chunks = 0","/**\n * Copyright (c) 2014, Chris Pettitt\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its contributors\n * may be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n var alg = require('./lib/alg')\n var Graph = require('./lib/graph')\n var json = require('./lib/json')\n\n module.exports = {\n   alg: alg,\n   Graph: Graph,\n   json: json\n }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-graphlib/index.js\n// module id = 398\n// module chunks = 0","'use strict';\n\nmodule.exports = require('d3') || window.d3;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/d3.js\n// module id = 399\n// module chunks = 0","'use strict';\n\nmodule.exports = require('lodash') || window._;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/lodash.js\n// module id = 400\n// module chunks = 0","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/d3.js\n// module id = 401\n// module chunks = 0 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.longestPath = longestPath;\nexports.slack = slack;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Initializes ranks for the input graph using the longest path algorithm. This\n * algorithm scales well and is fast in practice, it yields rather poor\n * solutions. Nodes are pushed to the lowest layer possible, leaving the bottom\n * ranks wide and leaving edges longer than necessary. However, due to its\n * speed, this algorithm is good for getting an initial ranking that can be fed\n * into other algorithms.\n *\n * This algorithm does not normalize layers because it will be used by other\n * algorithms in most cases. If using this algorithm directly, be sure to\n * run normalize at the end.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG.\n *    2. Input graph node labels can be assigned properties.\n *\n * Post-conditions:\n *\n *    1. Each node will be assign an (unnormalized) \"rank\" property.\n */\nfunction longestPath(g) {\n  var visited = {};\n\n  function dfs(v) {\n    var label = g.node(v);\n    if (_lodash2.default.has(visited, v)) {\n      return label.rank;\n    }\n    visited[v] = true;\n\n    var rank = _lodash2.default.min(_lodash2.default.map(g.outEdges(v), function (e) {\n      return dfs(e.w) - g.edge(e).minlen;\n    }));\n\n    if (rank === Number.POSITIVE_INFINITY || // return value of _.map([]) for Lodash 3\n    rank === undefined || // return value of _.map([]) for Lodash 4\n    rank === null // return value of _.map([null])\n    ) {\n        rank = 0;\n      }\n\n    return label.rank = rank;\n  }\n\n  _lodash2.default.forEach(g.sources(), dfs);\n}\n\n/*\n * Returns the amount of slack for the given edge. The slack is defined as the\n * difference between the length of the edge and its minimum length.\n */\nfunction slack(g, e) {\n  return g.node(e.w).rank - g.node(e.v).rank - g.edge(e).minlen;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-dagre/lib/rank/util.js\n// module id = 402\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DEFAULT_EDGE_NAME = '\\x00';\nvar GRAPH_NODE = '\\x00';\nvar EDGE_KEY_DELIM = '\\x01';\n\n// Implementation notes:\n//\n//  * Node id query functions should return string ids for the nodes\n//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n//    composed of enough information to uniquely identify an edge: {v, w, name}.\n//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n//    reference edges. This is because we need a performant way to look these\n//    edges up and, object properties, which have string keys, are the closest\n//    we're going to get to a performant hashtable in JavaScript.\n\nfunction Graph(opts) {\n  this._isDirected = _lodash2.default.has(opts, 'directed') ? opts.directed : true;\n  this._isMultigraph = _lodash2.default.has(opts, 'multigraph') ? opts.multigraph : false;\n  this._isCompound = _lodash2.default.has(opts, 'compound') ? opts.compound : false;\n\n  // Label for the graph itself\n  this._label = undefined;\n\n  // Defaults to be set when creating a new node\n  this._defaultNodeLabelFn = _lodash2.default.constant(undefined);\n\n  // Defaults to be set when creating a new edge\n  this._defaultEdgeLabelFn = _lodash2.default.constant(undefined);\n\n  // v -> label\n  this._nodes = {};\n\n  if (this._isCompound) {\n    // v -> parent\n    this._parent = {};\n\n    // v -> children\n    this._children = {};\n    this._children[GRAPH_NODE] = {};\n  }\n\n  // v -> edgeObj\n  this._in = {};\n\n  // u -> v -> Number\n  this._preds = {};\n\n  // v -> edgeObj\n  this._out = {};\n\n  // v -> w -> Number\n  this._sucs = {};\n\n  // e -> edgeObj\n  this._edgeObjs = {};\n\n  // e -> label\n  this._edgeLabels = {};\n}\n\n/* Number of nodes in the graph. Should only be changed by the implementation. */\nGraph.prototype._nodeCount = 0;\n\n/* Number of edges in the graph. Should only be changed by the implementation. */\nGraph.prototype._edgeCount = 0;\n\n/* === Graph functions ========= */\n\nGraph.prototype.isDirected = function () {\n  return this._isDirected;\n};\n\nGraph.prototype.isMultigraph = function () {\n  return this._isMultigraph;\n};\n\nGraph.prototype.isCompound = function () {\n  return this._isCompound;\n};\n\nGraph.prototype.setGraph = function (label) {\n  this._label = label;\n  return this;\n};\n\nGraph.prototype.graph = function () {\n  return this._label;\n};\n\n/* === Node functions ========== */\n\nGraph.prototype.setDefaultNodeLabel = function (newDefault) {\n  if (!_lodash2.default.isFunction(newDefault)) {\n    newDefault = _lodash2.default.constant(newDefault);\n  }\n  this._defaultNodeLabelFn = newDefault;\n  return this;\n};\n\nGraph.prototype.nodeCount = function () {\n  return this._nodeCount;\n};\n\nGraph.prototype.nodes = function () {\n  return _lodash2.default.keys(this._nodes);\n};\n\nGraph.prototype.sources = function () {\n  return _lodash2.default.filter(this.nodes(), _lodash2.default.bind(function (v) {\n    return _lodash2.default.isEmpty(this._in[v]);\n  }, this));\n};\n\nGraph.prototype.sinks = function () {\n  return _lodash2.default.filter(this.nodes(), _lodash2.default.bind(function (v) {\n    return _lodash2.default.isEmpty(this._out[v]);\n  }, this));\n};\n\nGraph.prototype.setNodes = function (vs, value) {\n  var args = arguments;\n  _lodash2.default.each(vs, _lodash2.default.bind(function (v) {\n    if (args.length > 1) {\n      this.setNode(v, value);\n    } else {\n      this.setNode(v);\n    }\n  }, this));\n  return this;\n};\n\nGraph.prototype.setNode = function (v, value) {\n  if (_lodash2.default.has(this._nodes, v)) {\n    if (arguments.length > 1) {\n      this._nodes[v] = value;\n    }\n    return this;\n  }\n\n  this._nodes[v] = arguments.length > 1 ? value : this._defaultNodeLabelFn(v);\n  if (this._isCompound) {\n    this._parent[v] = GRAPH_NODE;\n    this._children[v] = {};\n    this._children[GRAPH_NODE][v] = true;\n  }\n  this._in[v] = {};\n  this._preds[v] = {};\n  this._out[v] = {};\n  this._sucs[v] = {};\n  ++this._nodeCount;\n  return this;\n};\n\nGraph.prototype.node = function (v) {\n  return this._nodes[v];\n};\n\nGraph.prototype.hasNode = function (v) {\n  return _lodash2.default.has(this._nodes, v);\n};\n\nGraph.prototype.removeNode = function (v) {\n  var self = this;\n  if (_lodash2.default.has(this._nodes, v)) {\n    var removeEdge = function removeEdge(e) {\n      self.removeEdge(self._edgeObjs[e]);\n    };\n    delete this._nodes[v];\n    if (this._isCompound) {\n      this._removeFromParentsChildList(v);\n      delete this._parent[v];\n      _lodash2.default.each(this.children(v), _lodash2.default.bind(function (child) {\n        this.setParent(child);\n      }, this));\n      delete this._children[v];\n    }\n    _lodash2.default.each(_lodash2.default.keys(this._in[v]), removeEdge);\n    delete this._in[v];\n    delete this._preds[v];\n    _lodash2.default.each(_lodash2.default.keys(this._out[v]), removeEdge);\n    delete this._out[v];\n    delete this._sucs[v];\n    --this._nodeCount;\n  }\n  return this;\n};\n\nGraph.prototype.setParent = function (v, parent) {\n  if (!this._isCompound) {\n    throw new Error('Cannot set parent in a non-compound graph');\n  }\n\n  if (_lodash2.default.isUndefined(parent)) {\n    parent = GRAPH_NODE;\n  } else {\n    // Coerce parent to string\n    parent += '';\n    for (var ancestor = parent; !_lodash2.default.isUndefined(ancestor); ancestor = this.parent(ancestor)) {\n      if (ancestor === v) {\n        throw new Error('Setting ' + parent + ' as parent of ' + v + ' would create create a cycle');\n      }\n    }\n\n    this.setNode(parent);\n  }\n\n  this.setNode(v);\n  this._removeFromParentsChildList(v);\n  this._parent[v] = parent;\n  this._children[parent][v] = true;\n  return this;\n};\n\nGraph.prototype._removeFromParentsChildList = function (v) {\n  delete this._children[this._parent[v]][v];\n};\n\nGraph.prototype.parent = function (v) {\n  if (this._isCompound) {\n    var parent = this._parent[v];\n    if (parent !== GRAPH_NODE) {\n      return parent;\n    }\n  }\n};\n\nGraph.prototype.children = function (v) {\n  if (_lodash2.default.isUndefined(v)) {\n    v = GRAPH_NODE;\n  }\n\n  if (this._isCompound) {\n    var children = this._children[v];\n    if (children) {\n      return _lodash2.default.keys(children);\n    }\n  } else if (v === GRAPH_NODE) {\n    return this.nodes();\n  } else if (this.hasNode(v)) {\n    return [];\n  }\n};\n\nGraph.prototype.predecessors = function (v) {\n  var predsV = this._preds[v];\n  if (predsV) {\n    return _lodash2.default.keys(predsV);\n  }\n};\n\nGraph.prototype.successors = function (v) {\n  var sucsV = this._sucs[v];\n  if (sucsV) {\n    return _lodash2.default.keys(sucsV);\n  }\n};\n\nGraph.prototype.neighbors = function (v) {\n  var preds = this.predecessors(v);\n  if (preds) {\n    return _lodash2.default.union(preds, this.successors(v));\n  }\n};\n\nGraph.prototype.filterNodes = function (filter) {\n  var copy = new this.constructor({\n    directed: this._isDirected,\n    multigraph: this._isMultigraph,\n    compound: this._isCompound\n  });\n\n  copy.setGraph(this.graph());\n\n  _lodash2.default.each(this._nodes, _lodash2.default.bind(function (value, v) {\n    if (filter(v)) {\n      copy.setNode(v, value);\n    }\n  }, this));\n\n  _lodash2.default.each(this._edgeObjs, _lodash2.default.bind(function (e) {\n    if (copy.hasNode(e.v) && copy.hasNode(e.w)) {\n      copy.setEdge(e, this.edge(e));\n    }\n  }, this));\n\n  var self = this;\n  var parents = {};\n  function findParent(v) {\n    var parent = self.parent(v);\n    if (parent === undefined || copy.hasNode(parent)) {\n      parents[v] = parent;\n      return parent;\n    } else if (parent in parents) {\n      return parents[parent];\n    } else {\n      return findParent(parent);\n    }\n  }\n\n  if (this._isCompound) {\n    _lodash2.default.each(copy.nodes(), function (v) {\n      copy.setParent(v, findParent(v));\n    });\n  }\n\n  return copy;\n};\n\n/* === Edge functions ========== */\n\nGraph.prototype.setDefaultEdgeLabel = function (newDefault) {\n  if (!_lodash2.default.isFunction(newDefault)) {\n    newDefault = _lodash2.default.constant(newDefault);\n  }\n  this._defaultEdgeLabelFn = newDefault;\n  return this;\n};\n\nGraph.prototype.edgeCount = function () {\n  return this._edgeCount;\n};\n\nGraph.prototype.edges = function () {\n  return _lodash2.default.values(this._edgeObjs);\n};\n\nGraph.prototype.setPath = function (vs, value) {\n  var self = this;\n  var args = arguments;\n  _lodash2.default.reduce(vs, function (v, w) {\n    if (args.length > 1) {\n      self.setEdge(v, w, value);\n    } else {\n      self.setEdge(v, w);\n    }\n    return w;\n  });\n  return this;\n};\n\n/*\n * setEdge(v, w, [value, [name]])\n * setEdge({ v, w, [name] }, [value])\n */\nGraph.prototype.setEdge = function () {\n  var v, w, name, value;\n  var valueSpecified = false;\n  var arg0 = arguments[0];\n\n  if ((typeof arg0 === 'undefined' ? 'undefined' : _typeof(arg0)) === 'object' && arg0 !== null && 'v' in arg0) {\n    v = arg0.v;\n    w = arg0.w;\n    name = arg0.name;\n    if (arguments.length === 2) {\n      value = arguments[1];\n      valueSpecified = true;\n    }\n  } else {\n    v = arg0;\n    w = arguments[1];\n    name = arguments[3];\n    if (arguments.length > 2) {\n      value = arguments[2];\n      valueSpecified = true;\n    }\n  }\n\n  v = '' + v;\n  w = '' + w;\n  if (!_lodash2.default.isUndefined(name)) {\n    name = '' + name;\n  }\n\n  var e = edgeArgsToId(this._isDirected, v, w, name);\n  if (_lodash2.default.has(this._edgeLabels, e)) {\n    if (valueSpecified) {\n      this._edgeLabels[e] = value;\n    }\n    return this;\n  }\n\n  if (!_lodash2.default.isUndefined(name) && !this._isMultigraph) {\n    throw new Error('Cannot set a named edge when isMultigraph = false');\n  }\n\n  // It didn't exist, so we need to create it.\n  // First ensure the nodes exist.\n  this.setNode(v);\n  this.setNode(w);\n\n  this._edgeLabels[e] = valueSpecified ? value : this._defaultEdgeLabelFn(v, w, name);\n\n  var edgeObj = edgeArgsToObj(this._isDirected, v, w, name);\n  // Ensure we add undirected edges in a consistent way.\n  v = edgeObj.v;\n  w = edgeObj.w;\n\n  Object.freeze(edgeObj);\n  this._edgeObjs[e] = edgeObj;\n  incrementOrInitEntry(this._preds[w], v);\n  incrementOrInitEntry(this._sucs[v], w);\n  this._in[w][e] = edgeObj;\n  this._out[v][e] = edgeObj;\n  this._edgeCount++;\n  return this;\n};\n\nGraph.prototype.edge = function (v, w, name) {\n  var e = arguments.length === 1 ? edgeObjToId(this._isDirected, arguments[0]) : edgeArgsToId(this._isDirected, v, w, name);\n  return this._edgeLabels[e];\n};\n\nGraph.prototype.hasEdge = function (v, w, name) {\n  var e = arguments.length === 1 ? edgeObjToId(this._isDirected, arguments[0]) : edgeArgsToId(this._isDirected, v, w, name);\n  return _lodash2.default.has(this._edgeLabels, e);\n};\n\nGraph.prototype.removeEdge = function (v, w, name) {\n  var e = arguments.length === 1 ? edgeObjToId(this._isDirected, arguments[0]) : edgeArgsToId(this._isDirected, v, w, name);\n  var edge = this._edgeObjs[e];\n  if (edge) {\n    v = edge.v;\n    w = edge.w;\n    delete this._edgeLabels[e];\n    delete this._edgeObjs[e];\n    decrementOrRemoveEntry(this._preds[w], v);\n    decrementOrRemoveEntry(this._sucs[v], w);\n    delete this._in[w][e];\n    delete this._out[v][e];\n    this._edgeCount--;\n  }\n  return this;\n};\n\nGraph.prototype.inEdges = function (v, u) {\n  var inV = this._in[v];\n  if (inV) {\n    var edges = _lodash2.default.values(inV);\n    if (!u) {\n      return edges;\n    }\n    return _lodash2.default.filter(edges, function (edge) {\n      return edge.v === u;\n    });\n  }\n};\n\nGraph.prototype.outEdges = function (v, w) {\n  var outV = this._out[v];\n  if (outV) {\n    var edges = _lodash2.default.values(outV);\n    if (!w) {\n      return edges;\n    }\n    return _lodash2.default.filter(edges, function (edge) {\n      return edge.w === w;\n    });\n  }\n};\n\nGraph.prototype.nodeEdges = function (v, w) {\n  var inEdges = this.inEdges(v, w);\n  if (inEdges) {\n    return inEdges.concat(this.outEdges(v, w));\n  }\n};\n\nfunction incrementOrInitEntry(map, k) {\n  if (map[k]) {\n    map[k]++;\n  } else {\n    map[k] = 1;\n  }\n}\n\nfunction decrementOrRemoveEntry(map, k) {\n  if (! --map[k]) {\n    delete map[k];\n  }\n}\n\nfunction edgeArgsToId(isDirected, v_, w_, name) {\n  var v = '' + v_;\n  var w = '' + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return v + EDGE_KEY_DELIM + w + EDGE_KEY_DELIM + (_lodash2.default.isUndefined(name) ? DEFAULT_EDGE_NAME : name);\n}\n\nfunction edgeArgsToObj(isDirected, v_, w_, name) {\n  var v = '' + v_;\n  var w = '' + w_;\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  var edgeObj = { v: v, w: w };\n  if (name) {\n    edgeObj.name = name;\n  }\n  return edgeObj;\n}\n\nfunction edgeObjToId(isDirected, edgeObj) {\n  return edgeArgsToId(isDirected, edgeObj.v, edgeObj.w, edgeObj.name);\n}\n\nexports.default = Graph;\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-graphlib/lib/graph.js\n// module id = 403\n// module chunks = 0","\"use strict\";\n\nmodule.exports = intersectEllipse;\n\nfunction intersectEllipse(node, rx, ry, point) {\n  // Formulae from: http://mathworld.wolfram.com/Ellipse-LineIntersection.html\n\n  var cx = node.x;\n  var cy = node.y;\n\n  var px = cx - point.x;\n  var py = cy - point.y;\n\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n\n  var dx = Math.abs(rx * ry * px / det);\n  if (point.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs(rx * ry * py / det);\n  if (point.y < cy) {\n    dy = -dy;\n  }\n\n  return { x: cx + dx, y: cy + dy };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/intersect/intersect-ellipse.js\n// module id = 404\n// module chunks = 0","'use strict';\n\nvar addTextLabel = require('./add-text-label');\nvar addHtmlLabel = require('./add-html-label');\nvar addSVGLabel = require('./add-svg-label');\n\nmodule.exports = addLabel;\n\nfunction addLabel(root, node, location) {\n  var label = node.label;\n  var labelSvg = root.append('g'\n\n  // Allow the label to be a string, a function that returns a DOM element, or\n  // a DOM element itself.\n  );if (node.labelType === 'svg') {\n    addSVGLabel(labelSvg, node);\n  } else if (typeof label !== 'string' || node.labelType === 'html') {\n    addHtmlLabel(labelSvg, node);\n  } else {\n    addTextLabel(labelSvg, node);\n  }\n\n  var labelBBox = labelSvg.node().getBBox();\n  var y;\n  switch (location) {\n    case 'top':\n      y = -node.height / 2;\n      break;\n    case 'bottom':\n      y = node.height / 2 - labelBBox.height;\n      break;\n    default:\n      y = -labelBBox.height / 2;\n  }\n  labelSvg.attr('transform', 'translate(' + -labelBBox.width / 2 + ',' + y + ')');\n\n  return labelSvg;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/label/add-label.js\n// module id = 405\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = feasibleTree;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _cienaGraphlib = require('ciena-graphlib');\n\nvar _util = require('./util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Finds a maximal tree of tight edges and returns the number of nodes in the\n * tree.\n */\nfunction tightTree(t, g) {\n  function dfs(v) {\n    _lodash2.default.forEach(g.nodeEdges(v), function (e) {\n      var edgeV = e.v;\n      var w = v === edgeV ? e.w : edgeV;\n      if (!t.hasNode(w) && !(0, _util.slack)(g, e)) {\n        t.setNode(w, {});\n        t.setEdge(v, w, {});\n        dfs(w);\n      }\n    });\n  }\n\n  _lodash2.default.forEach(t.nodes(), dfs);\n  return t.nodeCount();\n}\n\n/*\n * Finds the edge with the smallest slack that is incident on tree and returns\n * it.\n */\nfunction findMinSlackEdge(t, g) {\n  return _lodash2.default.minBy(g.edges(), function (e) {\n    if (t.hasNode(e.v) !== t.hasNode(e.w)) {\n      return (0, _util.slack)(g, e);\n    }\n  });\n}\n\nfunction shiftRanks(t, g, delta) {\n  _lodash2.default.forEach(t.nodes(), function (v) {\n    g.node(v).rank += delta;\n  });\n}\n\n/*\n * Constructs a spanning tree with tight edges and adjusted the input node's\n * ranks to achieve this. A tight edge is one that is has a length that matches\n * its \"minlen\" attribute.\n *\n * The basic structure for this function is derived from Gansner, et al., \"A\n * Technique for Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a DAG.\n *    2. Graph must be connected.\n *    3. Graph must have at least one node.\n *    5. Graph nodes must have been previously assigned a \"rank\" property that\n *       respects the \"minlen\" property of incident edges.\n *    6. Graph edges must have a \"minlen\" property.\n *\n * Post-conditions:\n *\n *    - Graph nodes will have their rank adjusted to ensure that all edges are\n *      tight.\n *\n * Returns a tree (undirected graph) that is constructed using only \"tight\"\n * edges.\n */\nfunction feasibleTree(g) {\n  var t = new _cienaGraphlib.Graph({ directed: false });\n\n  // Choose arbitrary node from which to start our tree\n  var start = g.nodes()[0];\n  var size = g.nodeCount();\n  t.setNode(start, {});\n\n  var edge, delta;\n  while (tightTree(t, g) < size) {\n    edge = findMinSlackEdge(t, g);\n    delta = t.hasNode(edge.v) ? (0, _util.slack)(g, edge) : -(0, _util.slack)(g, edge);\n    shiftRanks(t, g, delta);\n  }\n\n  return t;\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-dagre/lib/rank/feasible-tree.js\n// module id = 406\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (g, vs, order) {\n  if (!_lodash2.default.isArray(vs)) {\n    vs = [vs];\n  }\n\n  var navigation = (g.isDirected() ? g.successors : g.neighbors).bind(g);\n\n  var acc = [];\n  var visited = {};\n  _lodash2.default.each(vs, function (v) {\n    if (!g.hasNode(v)) {\n      throw new Error('Graph does not have node: ' + v);\n    }\n\n    doDfs(g, v, order === 'post', visited, navigation, acc);\n  });\n  return acc;\n};\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction doDfs(g, v, postorder, visited, navigation, acc) {\n  if (!_lodash2.default.has(visited, v)) {\n    visited[v] = true;\n\n    if (!postorder) {\n      acc.push(v);\n    }\n    _lodash2.default.each(navigation(v), function (w) {\n      doDfs(g, w, postorder, visited, navigation, acc);\n    });\n    if (postorder) {\n      acc.push(v);\n    }\n  }\n}\n\n/*\n * A helper that preforms a pre- or post-order traversal on the input graph\n * and returns the nodes in the order they were visited. If the graph is\n * undirected then this algorithm will navigate using neighbors. If the graph\n * is directed then this algorithm will navigate using successors.\n *\n * Order must be one of \"pre\" or \"post\".\n */\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-graphlib/lib/alg/dfs.js\n// module id = 407\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (g, source, weightFn, edgeFn) {\n  weightFn = weightFn || DEFAULT_WEIGHT_FUNC;\n  edgeFn = edgeFn || function (v) {\n    return g.outEdges(v);\n  };\n  return runDijkstra(g, String(source), weightFn, edgeFn);\n};\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _priorityQueue = require('../data/priority-queue');\n\nvar _priorityQueue2 = _interopRequireDefault(_priorityQueue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DEFAULT_WEIGHT_FUNC = _lodash2.default.constant(1);\n\nfunction runDijkstra(g, source, weightFn, edgeFn) {\n  var results = {};\n  var pq = new _priorityQueue2.default();\n  var v, vEntry;\n\n  var updateNeighbors = function updateNeighbors(edge) {\n    var w = edge.v !== v ? edge.v : edge.w;\n    var wEntry = results[w];\n    var weight = weightFn(edge);\n    var distance = vEntry.distance + weight;\n\n    if (weight < 0) {\n      throw new Error('dijkstra does not allow negative edge weights. ' + 'Bad edge: ' + edge + ' Weight: ' + weight);\n    }\n\n    if (distance < wEntry.distance) {\n      wEntry.distance = distance;\n      wEntry.predecessor = v;\n      pq.decrease(w, distance);\n    }\n  };\n\n  g.nodes().forEach(function (v) {\n    var distance = v === source ? 0 : Number.POSITIVE_INFINITY;\n    results[v] = { distance: distance };\n    pq.add(v, distance);\n  });\n\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n    vEntry = results[v];\n    if (vEntry.distance === Number.POSITIVE_INFINITY) {\n      break;\n    }\n\n    edgeFn(v).forEach(updateNeighbors);\n  }\n\n  return results;\n}\n\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-graphlib/lib/alg/dijkstra.js\n// module id = 408\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (g) {\n  var index = 0;\n  var stack = [];\n  var visited = {}; // node id -> { onStack, lowlink, index }\n  var results = [];\n\n  function dfs(v) {\n    var entry = visited[v] = {\n      onStack: true,\n      lowlink: index,\n      index: index++\n    };\n    stack.push(v);\n\n    g.successors(v).forEach(function (w) {\n      if (!_lodash2.default.has(visited, w)) {\n        dfs(w);\n        entry.lowlink = Math.min(entry.lowlink, visited[w].lowlink);\n      } else if (visited[w].onStack) {\n        entry.lowlink = Math.min(entry.lowlink, visited[w].index);\n      }\n    });\n\n    if (entry.lowlink === entry.index) {\n      var cmpt = [];\n      var w;\n      do {\n        w = stack.pop();\n        visited[w].onStack = false;\n        cmpt.push(w);\n      } while (v !== w);\n      results.push(cmpt);\n    }\n  }\n\n  g.nodes().forEach(function (v) {\n    if (!_lodash2.default.has(visited, v)) {\n      dfs(v);\n    }\n  });\n\n  return results;\n};\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-graphlib/lib/alg/tarjan.js\n// module id = 409\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction CycleException() {}\n\nfunction topsort(g) {\n  var visited = {};\n  var stack = {};\n  var results = [];\n\n  function visit(node) {\n    if (_lodash2.default.has(stack, node)) {\n      throw new CycleException();\n    }\n\n    if (!_lodash2.default.has(visited, node)) {\n      stack[node] = true;\n      visited[node] = true;\n      _lodash2.default.each(g.predecessors(node), visit);\n      delete stack[node];\n      results.push(node);\n    }\n  }\n\n  _lodash2.default.each(g.sinks(), visit);\n\n  if (_lodash2.default.size(visited) !== g.nodeCount()) {\n    throw new CycleException();\n  }\n\n  return results;\n}\n\ntopsort.CycleException = CycleException;\n\nexports.default = topsort;\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-graphlib/lib/alg/topsort.js\n// module id = 410\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A min-priority queue data structure. This algorithm is derived from Cormen,\n * et al., \"Introduction to Algorithms\". The basic idea of a min-priority\n * queue is that you can efficiently (in O(1) time) get the smallest key in\n * the queue. Adding and removing elements takes O(log n) time. A key can\n * have its priority decreased in O(log n) time.\n */\nfunction PriorityQueue() {\n  this._arr = [];\n  this._keyIndices = {};\n}\n\n/**\n * Returns the number of elements in the queue. Takes `O(1)` time.\n */\nPriorityQueue.prototype.size = function () {\n  return this._arr.length;\n};\n\n/**\n * Returns the keys that are in the queue. Takes `O(n)` time.\n */\nPriorityQueue.prototype.keys = function () {\n  return this._arr.map(function (x) {\n    return x.key;\n  });\n};\n\n/**\n * Returns `true` if **key** is in the queue and `false` if not.\n */\nPriorityQueue.prototype.has = function (key) {\n  return _lodash2.default.has(this._keyIndices, key);\n};\n\n/**\n * Returns the priority for **key**. If **key** is not present in the queue\n * then this function returns `undefined`. Takes `O(1)` time.\n *\n * @param {Object} key\n */\nPriorityQueue.prototype.priority = function (key) {\n  var index = this._keyIndices[key];\n  if (index !== undefined) {\n    return this._arr[index].priority;\n  }\n};\n\n/**\n * Returns the key for the minimum element in this queue. If the queue is\n * empty this function throws an Error. Takes `O(1)` time.\n */\nPriorityQueue.prototype.min = function () {\n  if (this.size() === 0) {\n    throw new Error('Queue underflow');\n  }\n  return this._arr[0].key;\n};\n\n/**\n * Inserts a new key into the priority queue. If the key already exists in\n * the queue this function returns `false`; otherwise it will return `true`.\n * Takes `O(n)` time.\n *\n * @param {Object} key the key to add\n * @param {Number} priority the initial priority for the key\n */\nPriorityQueue.prototype.add = function (key, priority) {\n  var keyIndices = this._keyIndices;\n  key = String(key);\n  if (!_lodash2.default.has(keyIndices, key)) {\n    var arr = this._arr;\n    var index = arr.length;\n    keyIndices[key] = index;\n    arr.push({ key: key, priority: priority });\n    this._decrease(index);\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes and returns the smallest key in the queue. Takes `O(log n)` time.\n */\nPriorityQueue.prototype.removeMin = function () {\n  this._swap(0, this._arr.length - 1);\n  var min = this._arr.pop();\n  delete this._keyIndices[min.key];\n  this._heapify(0);\n  return min.key;\n};\n\n/**\n * Decreases the priority for **key** to **priority**. If the new priority is\n * greater than the previous priority, this function will throw an Error.\n *\n * @param {Object} key the key for which to raise priority\n * @param {Number} priority the new priority for the key\n */\nPriorityQueue.prototype.decrease = function (key, priority) {\n  var index = this._keyIndices[key];\n  if (priority > this._arr[index].priority) {\n    throw new Error('New priority is greater than current priority. ' + 'Key: ' + key + ' Old: ' + this._arr[index].priority + ' New: ' + priority);\n  }\n  this._arr[index].priority = priority;\n  this._decrease(index);\n};\n\nPriorityQueue.prototype._heapify = function (i) {\n  var arr = this._arr;\n  var l = 2 * i;\n  var r = l + 1;\n  var largest = i;\n  if (l < arr.length) {\n    largest = arr[l].priority < arr[largest].priority ? l : largest;\n    if (r < arr.length) {\n      largest = arr[r].priority < arr[largest].priority ? r : largest;\n    }\n    if (largest !== i) {\n      this._swap(i, largest);\n      this._heapify(largest);\n    }\n  }\n};\n\nPriorityQueue.prototype._decrease = function (index) {\n  var arr = this._arr;\n  var priority = arr[index].priority;\n  var parent;\n  while (index !== 0) {\n    parent = index >> 1;\n    if (arr[parent].priority < priority) {\n      break;\n    }\n    this._swap(index, parent);\n    index = parent;\n  }\n};\n\nPriorityQueue.prototype._swap = function (i, j) {\n  var arr = this._arr;\n  var keyIndices = this._keyIndices;\n  var origArrI = arr[i];\n  var origArrJ = arr[j];\n  arr[i] = origArrJ;\n  arr[j] = origArrI;\n  keyIndices[origArrJ.key] = i;\n  keyIndices[origArrI.key] = j;\n};\n\nexports.default = PriorityQueue;\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-graphlib/lib/data/priority-queue.js\n// module id = 411\n// module chunks = 0","'use strict';\n\nmodule.exports = require('ciena-dagre') || window.dagre;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/dagre.js\n// module id = 412\n// module chunks = 0","'use strict';\n\nvar intersectEllipse = require('./intersect-ellipse');\n\nmodule.exports = intersectCircle;\n\nfunction intersectCircle(node, rx, point) {\n  return intersectEllipse(node, rx, rx, point);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/intersect/intersect-circle.js\n// module id = 413\n// module chunks = 0","\"use strict\";\n\nmodule.exports = intersectNode;\n\nfunction intersectNode(node, point) {\n  return node.intersect(point);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/intersect/intersect-node.js\n// module id = 414\n// module chunks = 0","'use strict';\n\nvar intersectLine = require('./intersect-line');\n\nmodule.exports = intersectPolygon;\n\n/*\n * Returns the point ({x, y}) at which the point argument intersects with the\n * node argument assuming that it has the shape specified by polygon.\n */\nfunction intersectPolygon(node, polyPoints, point) {\n  var x1 = node.x;\n  var y1 = node.y;\n\n  var intersections = [];\n\n  var minX = Number.POSITIVE_INFINITY;\n  var minY = Number.POSITIVE_INFINITY;\n  polyPoints.forEach(function (entry) {\n    minX = Math.min(minX, entry.x);\n    minY = Math.min(minY, entry.y);\n  });\n\n  var left = x1 - node.width / 2 - minX;\n  var top = y1 - node.height / 2 - minY;\n\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect = intersectLine(node, point, { x: left + p1.x, y: top + p1.y }, { x: left + p2.x, y: top + p2.y });\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n\n  if (!intersections.length) {\n    console.log('NO INTERSECTION FOUND, RETURN NODE CENTER', node);\n    return node;\n  }\n\n  if (intersections.length > 1) {\n    // More intersections, find the one nearest to edge end point\n    intersections.sort(function (p, q) {\n      var pdx = p.x - point.x;\n      var pdy = p.y - point.y;\n      var distp = Math.sqrt(pdx * pdx + pdy * pdy);\n\n      var qdx = q.x - point.x;\n      var qdy = q.y - point.y;\n      var distq = Math.sqrt(qdx * qdx + qdy * qdy);\n\n      return distp < distq ? -1 : distp === distq ? 0 : 1;\n    });\n  }\n  return intersections[0];\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/intersect/intersect-polygon.js\n// module id = 415\n// module chunks = 0","\"use strict\";\n\nmodule.exports = intersectRect;\n\nfunction intersectRect(node, point) {\n  var x = node.x;\n  var y = node.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : w * dy / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/intersect/intersect-rect.js\n// module id = 416\n// module chunks = 0","<template>\n  <div ref=\"output\" class=\"dagre-d3-output map-output output\">\n    <div class=\"content\">\n      <div class=\"rendered\">\n        <svg ref=\"svg\" width=\"100%\" height=\"100%\">\n          <g style=\"transform: translate(0, 10px)\">\n          </g>\n        </svg>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as dagreD3 from 'dagre-d3'\nimport * as d3 from 'd3'\n\nexport default {\n  name: 'dagre-d3-output',\n  computed: {\n    map: function () {\n      // console.log('map called!')\n      this.updateSVG()\n      this.$store.getters.argdownData\n      return this.$store.getters.map\n    },\n    rankDir: function () {\n      // console.log('rankDir called!')\n      this.updateSVG()\n      return this.$store.state.config.dagre.rankDir\n    },\n    nodeSep: function () {\n      // console.log('nodeSep called!')\n      this.updateSVG()\n      return this.$store.state.config.dagre.nodeSep\n    },\n    rankSep: function () {\n      // console.log('nodeSep called!')\n      this.updateSVG()\n      return this.$store.state.config.dagre.rankSep\n    }\n  },\n  watch: {\n    map: function () {\n      // console.log('map watcher called!')\n    },\n    rankDir: function () {\n      // console.log('rankDir watcher called!')\n    },\n    nodeSep: function () {\n    },\n    rankSep: function () {\n    }\n  },\n  mounted: function () {\n    this.updateSVG()\n  },\n  methods: {\n    addNode: function (node, g, currentGroup) {\n      const nodeProperties = {\n        labelType: 'html',\n        class: node.type,\n        paddingBottom: 0,\n        paddingTop: 0,\n        paddingLeft: 0,\n        paddingRight: 0\n      }\n      nodeProperties.label = '<div class=\"node-label\">'\n      if (node.labelTitle) {\n        nodeProperties.label += '<h3>' + node.labelTitle + '</h3>'\n      }\n      if (node.labelText && (node.type === 'statement' || node.type === 'argument')) {\n        nodeProperties.label += '<p>' + node.labelText + '</p>'\n      }\n      if (node.tags) {\n        for (let tag of node.tags) {\n          nodeProperties.class += ' '\n          nodeProperties.class += this.$store.getters.tagsDictionary[tag].cssClass\n        }\n      }\n      nodeProperties.label += '</div>'\n\n      if (node.type === 'group') {\n        nodeProperties.clusterLabelPos = 'top'\n        nodeProperties.class += ' level-' + node.level\n      }\n      g.setNode(node.id, nodeProperties)\n      if (currentGroup) {\n        g.setParent(node.id, currentGroup.id)\n      }\n      if (node.type === 'group') {\n        for (let child of node.nodes) {\n          this.addNode(child, g, node)\n        }\n      }\n    },\n    updateSVG: function () {\n      // console.log('updateSVG called!')\n      const map = this.$store.getters.map\n\n      if (!this.$refs.svg || !map || !map.nodes || !map.edges) {\n        // console.log('svg or map undefined')\n        return\n      }\n      // Create the input graph\n      const g = new dagreD3.graphlib.Graph({ compound: true })\n        .setGraph({\n          rankdir: this.$store.state.config.dagre.rankDir,\n          rankSep: this.$store.state.config.dagre.rankSep,\n          nodeSep: this.$store.state.config.dagre.nodeSep,\n          marginx: 20,\n          marginy: 20\n        })\n        .setDefaultEdgeLabel(function () { return {} })\n\n      for (let node of map.nodes) {\n        this.addNode(node, g)\n      }\n\n      for (let edge of map.edges) {\n        g.setEdge(edge.from.id, edge.to.id, { class: edge.type })\n      }\n\n      const nodes = g.nodes()\n\n      for (let v of nodes) {\n        const node = g.node(v)\n        // Round the corners of the nodes\n        node.rx = node.ry = 5\n      }\n\n      // Create the renderer\n      const render = new dagreD3.render() // eslint-disable-line new-cap\n\n      // const layout = dagreD3.layout().rankSep(50).rankDir('BT')\n\n      // Set up an SVG group so that we can translate the final graph.\n      const svg = d3.select(this.$refs.svg)\n      svg.selectAll('*').remove()\n\n      svg.append('g')\n      const svgGroup = svg.select('g')\n      // console.log('svg ' + svg)\n      // console.log('svgGroup ' + svgGroup)\n\n      var zoom = d3.behavior.zoom().on('zoom', function () {\n        svgGroup.attr('transform', 'translate(' + d3.event.translate + ')' + 'scale(' + d3.event.scale + ')')\n      })\n      svg.call(zoom)\n\n      // Run the renderer. This is what draws the final graph.\n      render(svgGroup, g)\n      // renderer.layout(layout).run(svgGroup, g)\n      // Center the graph\n      let initialScale = 0.75\n      let getSvgWidth = function () {\n        let positionInfo = svg.node().getBoundingClientRect()\n        return positionInfo.width\n      }\n      zoom\n        .translate([(getSvgWidth() - g.graph().width * initialScale) / 2, 20])\n        .scale(initialScale)\n        .event(svg)\n      svgGroup.attr('height', g.graph().height * initialScale + 40)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.dagre-d3-output{\n  .content{\n    flex: 1;\n    overflow: auto;   \n    .rendered{\n      flex:1;\n      display:flex;\n      flex-direction:column;\n      /* Firefox bug fix styles */\n      min-width:0;\n      min-height:0;\n    } \n  }\n  .cluster {\n    rect{\n      fill: #ddd;      \n    }\n    .node-label{\n      width:auto;\n    }\n    h3{\n      margin:0;\n      padding-top:3px;\n      font-size:14px;\n    }\n    &.level-0 rect{\n      fill:#dadada;\n    }\n    &.level-1 rect{\n      fill:#bababa;\n    }\n    &.level-2 rect{\n      fill:#aaa;\n    }\n  }\n\n  text {\n    font-weight: 300;\n    font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serf;\n    font-size: 14px;\n  }\n\n  .node rect {\n    stroke: #999;\n    fill: #fff;\n    stroke-width: 1.5px;\n  }\n\n  .edgePath path {\n    stroke: #333;\n    stroke-width: 1.5px;\n  }    \n  .edgePath.attack {\n    path{\n      stroke: red;\n    }\n    marker{\n      fill: red;\n    }\n  }\n  .edgePath.support {\n    path{\n      stroke: green;\n    }\n    marker{\n      fill: green;\n    }\n  }\n  .edgePath.undercut {\n    path{\n      stroke: purple;\n    }\n    marker{\n      fill: purple;\n    }\n  }  \n  .node{\n  cursor:pointer;\n  display:block;\n  position:static;\n  margin:0;\n  white-space: normal;\n  width:200px;\n  height:auto;\n  text-align:center;\n  color:#000;\n  .node-label{\n    white-space:normal;\n    padding:5px;\n  }\np{\n  padding: 0px;\n  margin:0;\n  font-weight:normal;\n  font-size:12px;\n  display:block;\n} \nh3{\n  padding: 0px;\n  margin:0;\n  font-size:14px;\n  font-weight:bold;\n  color:#264260;\n  display:block;\n}   \n  }\n  .node.argument{\n    rect{\n      fill: cornflowerblue;  \n      stroke: black;\n      stroke-width: 2px;\n    }\n    text{\n      fill: black;\n    }\n  }\n  .node.statement{\n    rect{\n      fill: white;  \n      stroke: cornflowerblue;\n      stroke-width: 3px;\n    }\n    text{\n      fill: black;\n    }\n  }  \n  .node-label{\n    text-align:center;\n    width: 150px;\n    \n    h3{\n        font-weight:bold;\n    }\n  }\n  .node.statement.tag7 rect{\n    stroke:#666666;\n  }\n  .node.argument.tag7 rect{\n    fill:#666666;\n  }\n  .node.statement.tag6 rect{\n    stroke:#a6761d;\n  }\n  .node.argument.tag6 rect{\n    fill:#a6761d;\n  }\n  .node.statement.tag5 rect{\n    stroke:#e6ab02;\n  }\n  .node.argument.tag5 rect{\n    fill:#e6ab02;\n  }\n  .node.statement.tag4 rect{\n    stroke:#66a61e;\n  }\n  .node.argument.tag4 rect{\n    fill:#66a61e;\n  }\n  .node.statement.tag3 rect{\n    stroke:#e7298a;\n  }\n  .node.argument.tag3 rect{\n    fill:#e7298a;\n  }\n  .node.statement.tag2 rect{\n    stroke:#7570b3;\n  }\n  .node.argument.tag2 rect{\n    fill:#7570b3;\n  }\n  .node.statement.tag1 rect{\n    stroke:#d95f02;\n  }\n  .node.argument.tag1 rect{\n    fill:#d95f02;\n  }\n  .node.statement.tag0 rect{\n    stroke:#1b9e77;\n  }\n  .node.argument.tag0 rect{\n    fill:#1b9e77;\n  }\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// DagreD3Output.vue?a21ccfdc","module.exports = { \"default\": require(\"core-js/library/fn/get-iterator\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/get-iterator.js\n// module id = 421\n// module chunks = 0","/*\nCopyright (c) 2012-2014 Chris Pettitt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\nimport {debugOrdering} from './lib/debug'\n\nexport var debug = {\n  debugOrdering\n}\n\nexport {default as layout} from './lib/layout'\n\nimport {\n  addBorderNode,\n  addDummyNode,\n  asNonCompoundGraph,\n  buildLayerMatrix,\n  intersectRect,\n  maxRank,\n  normalizeRanks,\n  notime,\n  partition,\n  predecessorWeights,\n  removeEmptyRanks,\n  simplify,\n  successorWeights,\n  time\n} from './lib/util'\n\nexport var util = {\n  addBorderNode,\n  addDummyNode,\n  asNonCompoundGraph,\n  buildLayerMatrix,\n  intersectRect,\n  maxRank,\n  normalizeRanks,\n  notime,\n  partition,\n  predecessorWeights,\n  removeEmptyRanks,\n  simplify,\n  successorWeights,\n  time\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-dagre/index.js\n// module id = 422\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.undo = undo;\nexports.run = run;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _greedyFas = require('./greedy-fas');\n\nvar _greedyFas2 = _interopRequireDefault(_greedyFas);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction dfsFAS(g) {\n  var fas = [];\n  var stack = {};\n  var visited = {};\n\n  function dfs(v) {\n    if (_lodash2.default.has(visited, v)) {\n      return;\n    }\n    visited[v] = true;\n    stack[v] = true;\n    _lodash2.default.forEach(g.outEdges(v), function (e) {\n      if (_lodash2.default.has(stack, e.w)) {\n        fas.push(e);\n      } else {\n        dfs(e.w);\n      }\n    });\n    delete stack[v];\n  }\n\n  _lodash2.default.forEach(g.nodes(), dfs);\n  return fas;\n}\n\nfunction undo(g) {\n  _lodash2.default.forEach(g.edges(), function (e) {\n    var label = g.edge(e);\n    if (label.reversed) {\n      g.removeEdge(e);\n\n      var forwardName = label.forwardName;\n      delete label.reversed;\n      delete label.forwardName;\n      g.setEdge(e.w, e.v, label, forwardName);\n    }\n  });\n}\n\nfunction run(g) {\n  var fas = g.graph().acyclicer === 'greedy' ? (0, _greedyFas2.default)(g, weightFn(g)) : dfsFAS(g);\n  _lodash2.default.forEach(fas, function (e) {\n    var label = g.edge(e);\n    g.removeEdge(e);\n    label.forwardName = e.name;\n    label.reversed = true;\n    g.setEdge(e.w, e.v, label, _lodash2.default.uniqueId('rev'));\n  });\n\n  function weightFn(g) {\n    return function (e) {\n      return g.edge(e).weight;\n    };\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-dagre/lib/acyclic.js\n// module id = 423\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (g) {\n  function dfs(v) {\n    var children = g.children(v);\n    var node = g.node(v);\n    if (children.length) {\n      _lodash2.default.forEach(children, dfs);\n    }\n\n    if (_lodash2.default.has(node, 'minRank')) {\n      node.borderLeft = [];\n      node.borderRight = [];\n      for (var rank = node.minRank, maxRank = node.maxRank + 1; rank < maxRank; ++rank) {\n        addBorderNode(g, 'borderLeft', '_bl', v, node, rank);\n        addBorderNode(g, 'borderRight', '_br', v, node, rank);\n      }\n    }\n  }\n\n  _lodash2.default.forEach(g.children(), dfs);\n};\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _util = require('./util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addBorderNode(g, prop, prefix, sg, sgNode, rank) {\n  var label = { width: 0, height: 0, rank: rank, borderType: prop };\n  var prev = sgNode[prop][rank - 1];\n  var curr = (0, _util.addDummyNode)(g, 'border', label, prefix);\n  sgNode[prop][rank] = curr;\n  g.setParent(curr, sg);\n  if (prev) {\n    g.setEdge(prev, curr, { weight: 1 });\n  }\n}\n\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-dagre/lib/add-border-segments.js\n// module id = 424\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.adjust = adjust;\nexports.undo = undo;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction swapWidthHeight(g) {\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    swapWidthHeightOne(g.node(v));\n  });\n  _lodash2.default.forEach(g.edges(), function (e) {\n    swapWidthHeightOne(g.edge(e));\n  });\n}\n\nfunction swapWidthHeightOne(attrs) {\n  var w = attrs.width;\n  attrs.width = attrs.height;\n  attrs.height = w;\n}\n\nfunction reverseY(g) {\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    reverseYOne(g.node(v));\n  });\n\n  _lodash2.default.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _lodash2.default.forEach(edge.points, reverseYOne);\n    if (_lodash2.default.has(edge, 'y')) {\n      reverseYOne(edge);\n    }\n  });\n}\n\nfunction reverseYOne(attrs) {\n  attrs.y = -attrs.y;\n}\n\nfunction swapXY(g) {\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    swapXYOne(g.node(v));\n  });\n\n  _lodash2.default.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _lodash2.default.forEach(edge.points, swapXYOne);\n    if (_lodash2.default.has(edge, 'x')) {\n      swapXYOne(edge);\n    }\n  });\n}\n\nfunction swapXYOne(attrs) {\n  var x = attrs.x;\n  attrs.x = attrs.y;\n  attrs.y = x;\n}\n\nfunction adjust(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === 'lr' || rankDir === 'rl') {\n    swapWidthHeight(g);\n  }\n}\n\nfunction undo(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n  if (rankDir === 'bt' || rankDir === 'rl') {\n    reverseY(g);\n  }\n\n  if (rankDir === 'lr' || rankDir === 'rl') {\n    swapXY(g);\n    swapWidthHeight(g);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-dagre/lib/coordinate-system.js\n// module id = 425\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n * Simple doubly linked list implementation derived from Cormen, et al.,\n * \"Introduction to Algorithms\".\n */\n\nfunction List() {\n  var sentinel = {};\n  sentinel._next = sentinel._prev = sentinel;\n  this._sentinel = sentinel;\n}\n\nList.prototype.dequeue = function () {\n  var sentinel = this._sentinel;\n  var entry = sentinel._prev;\n  if (entry !== sentinel) {\n    unlink(entry);\n    return entry;\n  }\n};\n\nList.prototype.enqueue = function (entry) {\n  var sentinel = this._sentinel;\n  if (entry._prev && entry._next) {\n    unlink(entry);\n  }\n  entry._next = sentinel._next;\n  sentinel._next._prev = entry;\n  sentinel._next = entry;\n  entry._prev = sentinel;\n};\n\nList.prototype.toString = function () {\n  var strs = [];\n  var sentinel = this._sentinel;\n  var curr = sentinel._prev;\n  while (curr !== sentinel) {\n    strs.push(JSON.stringify(curr, filterOutLinks));\n    curr = curr._prev;\n  }\n  return '[' + strs.join(', ') + ']';\n};\n\nfunction unlink(entry) {\n  entry._prev._next = entry._next;\n  entry._next._prev = entry._prev;\n  delete entry._next;\n  delete entry._prev;\n}\n\nfunction filterOutLinks(k, v) {\n  if (k !== '_next' && k !== '_prev') {\n    return v;\n  }\n}\n\nexports.default = List;\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-dagre/lib/data/list.js\n// module id = 426\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.debugOrdering = debugOrdering;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _util = require('./util');\n\nvar _cienaGraphlib = require('ciena-graphlib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction debugOrdering(g) {\n  var layerMatrix = (0, _util.buildLayerMatrix)(g);\n\n  var h = new _cienaGraphlib.Graph({ compound: true, multigraph: true }).setGraph({});\n\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    h.setNode(v, { label: v });\n    h.setParent(v, 'layer' + g.node(v).rank);\n  });\n\n  _lodash2.default.forEach(g.edges(), function (e) {\n    h.setEdge(e.v, e.w, {}, e.name);\n  });\n\n  _lodash2.default.forEach(layerMatrix, function (layer, i) {\n    var layerV = 'layer' + i;\n    h.setNode(layerV, { rank: 'same' });\n    _lodash2.default.reduce(layer, function (u, v) {\n      h.setEdge(u, v, { style: 'invis' });\n      return v;\n    });\n  });\n\n  return h;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-dagre/lib/debug.js\n// module id = 427\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (g, weightFn) {\n  if (g.nodeCount() <= 1) {\n    return [];\n  }\n  var state = buildState(g, weightFn || DEFAULT_WEIGHT_FN);\n  var results = doGreedyFAS(state.graph, state.buckets, state.zeroIdx);\n\n  // Expand multi-edges\n  return _lodash2.default.flatten(_lodash2.default.map(results, function (e) {\n    return g.outEdges(e.v, e.w);\n  }), true);\n};\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _cienaGraphlib = require('ciena-graphlib');\n\nvar _list = require('./data/list');\n\nvar _list2 = _interopRequireDefault(_list);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DEFAULT_WEIGHT_FN = _lodash2.default.constant(1);\n\nfunction doGreedyFAS(g, buckets, zeroIdx) {\n  var results = [];\n  var sources = buckets[buckets.length - 1];\n  var sinks = buckets[0];\n\n  var entry;\n  while (g.nodeCount()) {\n    while (entry = sinks.dequeue()) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    while (entry = sources.dequeue()) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n    if (g.nodeCount()) {\n      for (var i = buckets.length - 2; i > 0; --i) {\n        entry = buckets[i].dequeue();\n        if (entry) {\n          results = results.concat(removeNode(g, buckets, zeroIdx, entry, true));\n          break;\n        }\n      }\n    }\n  }\n\n  return results;\n}\n\nfunction removeNode(g, buckets, zeroIdx, entry, collectPredecessors) {\n  var results = collectPredecessors ? [] : undefined;\n\n  _lodash2.default.forEach(g.inEdges(entry.v), function (edge) {\n    var weight = g.edge(edge);\n    var uEntry = g.node(edge.v);\n\n    if (collectPredecessors) {\n      results.push({ v: edge.v, w: edge.w });\n    }\n\n    uEntry.out -= weight;\n    assignBucket(buckets, zeroIdx, uEntry);\n  });\n\n  _lodash2.default.forEach(g.outEdges(entry.v), function (edge) {\n    var weight = g.edge(edge);\n    var w = edge.w;\n    var wEntry = g.node(w);\n    wEntry['in'] -= weight;\n    assignBucket(buckets, zeroIdx, wEntry);\n  });\n\n  g.removeNode(entry.v);\n\n  return results;\n}\n\nfunction buildState(g, weightFn) {\n  var fasGraph = new _cienaGraphlib.Graph();\n  var maxIn = 0;\n  var maxOut = 0;\n\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    fasGraph.setNode(v, { v: v, 'in': 0, out: 0 });\n  });\n\n  // Aggregate weights on nodes, but also sum the weights across multi-edges\n  // into a single edge for the fasGraph.\n  _lodash2.default.forEach(g.edges(), function (e) {\n    var prevWeight = fasGraph.edge(e.v, e.w) || 0;\n    var weight = weightFn(e);\n    var edgeWeight = prevWeight + weight;\n    fasGraph.setEdge(e.v, e.w, edgeWeight);\n    maxOut = Math.max(maxOut, fasGraph.node(e.v).out += weight);\n    maxIn = Math.max(maxIn, fasGraph.node(e.w)['in'] += weight);\n  });\n\n  var buckets = _lodash2.default.range(maxOut + maxIn + 3).map(function () {\n    return new _list2.default();\n  });\n  var zeroIdx = maxIn + 1;\n\n  _lodash2.default.forEach(fasGraph.nodes(), function (v) {\n    assignBucket(buckets, zeroIdx, fasGraph.node(v));\n  });\n\n  return { graph: fasGraph, buckets: buckets, zeroIdx: zeroIdx };\n}\n\nfunction assignBucket(buckets, zeroIdx, entry) {\n  if (!entry.out) {\n    buckets[0].enqueue(entry);\n  } else if (!entry['in']) {\n    buckets[buckets.length - 1].enqueue(entry);\n  } else {\n    buckets[entry.out - entry['in'] + zeroIdx].enqueue(entry);\n  }\n}\n\n/*\n * A greedy heuristic for finding a feedback arc set for a graph. A feedback\n * arc set is a set of edges that can be removed to make a graph acyclic.\n * The algorithm comes from: P. Eades, X. Lin, and W. F. Smyth, \"A fast and\n * effective heuristic for the feedback arc set problem.\" This implementation\n * adjusts that from the paper to allow for weighted edges.\n */\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-dagre/lib/greedy-fas.js\n// module id = 428\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = layout;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _acyclic = require('./acyclic');\n\nvar _normalize = require('./normalize');\n\nvar _rank = require('./rank');\n\nvar _rank2 = _interopRequireDefault(_rank);\n\nvar _util = require('./util');\n\nvar _parentDummyChains = require('./parent-dummy-chains');\n\nvar _parentDummyChains2 = _interopRequireDefault(_parentDummyChains);\n\nvar _nestingGraph = require('./nesting-graph');\n\nvar _addBorderSegments = require('./add-border-segments');\n\nvar _addBorderSegments2 = _interopRequireDefault(_addBorderSegments);\n\nvar _coordinateSystem = require('./coordinate-system');\n\nvar _order = require('./order');\n\nvar _order2 = _interopRequireDefault(_order);\n\nvar _position = require('./position');\n\nvar _position2 = _interopRequireDefault(_position);\n\nvar _cienaGraphlib = require('ciena-graphlib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction runLayout(g, time) {\n  time('    makeSpaceForEdgeLabels', function () {\n    makeSpaceForEdgeLabels(g);\n  });\n  time('    removeSelfEdges', function () {\n    removeSelfEdges(g);\n  });\n  time('    acyclic', function () {\n    (0, _acyclic.run)(g);\n  });\n  time('    nestingGraph.run', function () {\n    (0, _nestingGraph.run)(g);\n  });\n  time('    rank', function () {\n    (0, _rank2.default)((0, _util.asNonCompoundGraph)(g));\n  });\n  time('    injectEdgeLabelProxies', function () {\n    injectEdgeLabelProxies(g);\n  });\n  time('    removeEmptyRanks', function () {\n    (0, _util.removeEmptyRanks)(g);\n  });\n  time('    nestingGraph.cleanup', function () {\n    (0, _nestingGraph.cleanup)(g);\n  });\n  time('    normalizeRanks', function () {\n    (0, _util.normalizeRanks)(g);\n  });\n  time('    assignRankMinMax', function () {\n    assignRankMinMax(g);\n  });\n  time('    removeEdgeLabelProxies', function () {\n    removeEdgeLabelProxies(g);\n  });\n  time('    normalize.run', function () {\n    (0, _normalize.run)(g);\n  });\n  time('    parentDummyChains', function () {\n    (0, _parentDummyChains2.default)(g);\n  });\n  time('    addBorderSegments', function () {\n    (0, _addBorderSegments2.default)(g);\n  });\n  time('    order', function () {\n    (0, _order2.default)(g);\n  });\n  time('    insertSelfEdges', function () {\n    insertSelfEdges(g);\n  });\n  time('    adjustCoordinateSystem', function () {\n    (0, _coordinateSystem.adjust)(g);\n  });\n  time('    position', function () {\n    (0, _position2.default)(g);\n  });\n  time('    positionSelfEdges', function () {\n    positionSelfEdges(g);\n  });\n  time('    removeBorderNodes', function () {\n    removeBorderNodes(g);\n  });\n  time('    normalize.undo', function () {\n    (0, _normalize.undo)(g);\n  });\n  time('    fixupEdgeLabelCoords', function () {\n    fixupEdgeLabelCoords(g);\n  });\n  time('    undoCoordinateSystem', function () {\n    (0, _coordinateSystem.undo)(g);\n  });\n  time('    translateGraph', function () {\n    translateGraph(g);\n  });\n  time('    assignNodeIntersects', function () {\n    assignNodeIntersects(g);\n  });\n  time('    reversePoints', function () {\n    reversePointsForReversedEdges(g);\n  });\n  time('    acyclic.undo', function () {\n    (0, _acyclic.undo)(g);\n  });\n}\n\n/*\n * Copies final layout information from the layout graph back to the input\n * graph. This process only copies whitelisted attributes from the layout graph\n * to the input graph, so it serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction updateInputGraph(inputGraph, layoutGraph) {\n  _lodash2.default.forEach(inputGraph.nodes(), function (v) {\n    var inputLabel = inputGraph.node(v);\n    var layoutLabel = layoutGraph.node(v);\n\n    if (inputLabel) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n\n      if (layoutGraph.children(v).length) {\n        inputLabel.width = layoutLabel.width;\n        inputLabel.height = layoutLabel.height;\n      }\n    }\n  });\n\n  _lodash2.default.forEach(inputGraph.edges(), function (e) {\n    var inputLabel = inputGraph.edge(e);\n    var layoutLabel = layoutGraph.edge(e);\n\n    inputLabel.points = layoutLabel.points;\n    if (_lodash2.default.has(layoutLabel, 'x')) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n    }\n  });\n\n  inputGraph.graph().width = layoutGraph.graph().width;\n  inputGraph.graph().height = layoutGraph.graph().height;\n}\n\nvar graphNumAttrs = ['nodesep', 'edgesep', 'ranksep', 'marginx', 'marginy'];\nvar graphDefaults = { ranksep: 50, edgesep: 20, nodesep: 50, rankdir: 'tb' };\nvar graphAttrs = ['acyclicer', 'ranker', 'rankdir', 'align'];\nvar nodeNumAttrs = ['width', 'height'];\nvar nodeDefaults = { width: 0, height: 0 };\nvar edgeNumAttrs = ['minlen', 'weight', 'width', 'height', 'labeloffset'];\nvar edgeDefaults = {\n  minlen: 1,\n  weight: 1,\n  width: 0,\n  height: 0,\n  labeloffset: 10,\n  labelpos: 'r'\n};\nvar edgeAttrs = ['labelpos'];\n\n/*\n * Constructs a new graph from the input graph, which can be used for layout.\n * This process copies only whitelisted attributes from the input graph to the\n * layout graph. Thus this function serves as a good place to determine what\n * attributes can influence layout.\n */\nfunction buildLayoutGraph(inputGraph) {\n  var g = new _cienaGraphlib.Graph({ multigraph: true, compound: true });\n  var graph = canonicalize(inputGraph.graph());\n\n  g.setGraph(_lodash2.default.merge({}, graphDefaults, selectNumberAttrs(graph, graphNumAttrs), _lodash2.default.pick(graph, graphAttrs)));\n\n  _lodash2.default.forEach(inputGraph.nodes(), function (v) {\n    var node = canonicalize(inputGraph.node(v));\n    g.setNode(v, _lodash2.default.defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults));\n    g.setParent(v, inputGraph.parent(v));\n  });\n\n  _lodash2.default.forEach(inputGraph.edges(), function (e) {\n    var edge = canonicalize(inputGraph.edge(e));\n    g.setEdge(e, _lodash2.default.merge({}, edgeDefaults, selectNumberAttrs(edge, edgeNumAttrs), _lodash2.default.pick(edge, edgeAttrs)));\n  });\n\n  return g;\n}\n\n/*\n * This idea comes from the Gansner paper: to account for edge labels in our\n * layout we split each rank in half by doubling minlen and halving ranksep.\n * Then we can place labels at these mid-points between nodes.\n *\n * We also add some minimal padding to the width to push the label for the edge\n * away from the edge itself a bit.\n */\nfunction makeSpaceForEdgeLabels(g) {\n  var graph = g.graph();\n  graph.ranksep /= 2;\n  _lodash2.default.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    edge.minlen *= 2;\n    if (edge.labelpos.toLowerCase() !== 'c') {\n      if (graph.rankdir === 'TB' || graph.rankdir === 'BT') {\n        edge.width += edge.labeloffset;\n      } else {\n        edge.height += edge.labeloffset;\n      }\n    }\n  });\n}\n\n/*\n * Creates temporary dummy nodes that capture the rank in which each edge's\n * label is going to, if it has one of non-zero width and height. We do this\n * so that we can safely remove empty ranks while preserving balance for the\n * label's position.\n */\nfunction injectEdgeLabelProxies(g) {\n  _lodash2.default.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.width && edge.height) {\n      var v = g.node(e.v);\n      var w = g.node(e.w);\n      var label = { rank: (w.rank - v.rank) / 2 + v.rank, e: e };\n      (0, _util.addDummyNode)(g, 'edge-proxy', label, '_ep');\n    }\n  });\n}\n\nfunction assignRankMinMax(g) {\n  var maxRank = 0;\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.borderTop) {\n      node.minRank = g.node(node.borderTop).rank;\n      node.maxRank = g.node(node.borderBottom).rank;\n      maxRank = _lodash2.default.max(maxRank, node.maxRank);\n    }\n  });\n  g.graph().maxRank = maxRank;\n}\n\nfunction removeEdgeLabelProxies(g) {\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'edge-proxy') {\n      g.edge(node.e).labelRank = node.rank;\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction translateGraph(g) {\n  var minX = Number.POSITIVE_INFINITY;\n  var maxX = 0;\n  var minY = Number.POSITIVE_INFINITY;\n  var maxY = 0;\n  var graphLabel = g.graph();\n  var marginX = graphLabel.marginx || 0;\n  var marginY = graphLabel.marginy || 0;\n\n  function getExtremes(attrs) {\n    var x = attrs.x;\n    var y = attrs.y;\n    var w = attrs.width;\n    var h = attrs.height;\n    minX = Math.min(minX, x - w / 2);\n    maxX = Math.max(maxX, x + w / 2);\n    minY = Math.min(minY, y - h / 2);\n    maxY = Math.max(maxY, y + h / 2);\n  }\n\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    getExtremes(g.node(v));\n  });\n  _lodash2.default.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (_lodash2.default.has(edge, 'x')) {\n      getExtremes(edge);\n    }\n  });\n\n  minX -= marginX;\n  minY -= marginY;\n\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    node.x -= minX;\n    node.y -= minY;\n  });\n\n  _lodash2.default.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    _lodash2.default.forEach(edge.points, function (p) {\n      p.x -= minX;\n      p.y -= minY;\n    });\n    if (_lodash2.default.has(edge, 'x')) {\n      edge.x -= minX;\n    }\n    if (_lodash2.default.has(edge, 'y')) {\n      edge.y -= minY;\n    }\n  });\n\n  graphLabel.width = maxX - minX + marginX;\n  graphLabel.height = maxY - minY + marginY;\n}\n\nfunction assignNodeIntersects(g) {\n  _lodash2.default.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    var nodeV = g.node(e.v);\n    var nodeW = g.node(e.w);\n    var p1;\n    var p2;\n    if (!edge.points) {\n      edge.points = [];\n      p1 = nodeW;\n      p2 = nodeV;\n    } else {\n      p1 = edge.points[0];\n      p2 = edge.points[edge.points.length - 1];\n    }\n    edge.points.unshift((0, _util.intersectRect)(nodeV, p1));\n    edge.points.push((0, _util.intersectRect)(nodeW, p2));\n  });\n}\n\nfunction fixupEdgeLabelCoords(g) {\n  _lodash2.default.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (_lodash2.default.has(edge, 'x')) {\n      if (edge.labelpos === 'l' || edge.labelpos === 'r') {\n        edge.width -= edge.labeloffset;\n      }\n      switch (edge.labelpos) {\n        case 'l':\n          edge.x -= edge.width / 2 + edge.labeloffset;break;\n        case 'r':\n          edge.x += edge.width / 2 + edge.labeloffset;break;\n      }\n    }\n  });\n}\n\nfunction reversePointsForReversedEdges(g) {\n  _lodash2.default.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.reversed) {\n      edge.points.reverse();\n    }\n  });\n}\n\nfunction removeBorderNodes(g) {\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    if (g.children(v).length) {\n      var node = g.node(v);\n      var t = g.node(node.borderTop);\n      var b = g.node(node.borderBottom);\n      var l = g.node(_lodash2.default.last(node.borderLeft));\n      var r = g.node(_lodash2.default.last(node.borderRight));\n\n      node.width = Math.abs(r.x - l.x);\n      node.height = Math.abs(b.y - t.y);\n      node.x = l.x + node.width / 2;\n      node.y = t.y + node.height / 2;\n    }\n  });\n\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    if (g.node(v).dummy === 'border') {\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction removeSelfEdges(g) {\n  _lodash2.default.forEach(g.edges(), function (e) {\n    if (e.v === e.w) {\n      var node = g.node(e.v);\n      if (!node.selfEdges) {\n        node.selfEdges = [];\n      }\n      node.selfEdges.push({ e: e, label: g.edge(e) });\n      g.removeEdge(e);\n    }\n  });\n}\n\nfunction insertSelfEdges(g) {\n  var layers = (0, _util.buildLayerMatrix)(g);\n  _lodash2.default.forEach(layers, function (layer) {\n    var orderShift = 0;\n    _lodash2.default.forEach(layer, function (v, i) {\n      var node = g.node(v);\n      node.order = i + orderShift;\n      _lodash2.default.forEach(node.selfEdges, function (selfEdge) {\n        (0, _util.addDummyNode)(g, 'selfedge', {\n          width: selfEdge.label.width,\n          height: selfEdge.label.height,\n          rank: node.rank,\n          order: i + ++orderShift,\n          e: selfEdge.e,\n          label: selfEdge.label\n        }, '_se');\n      });\n      delete node.selfEdges;\n    });\n  });\n}\n\nfunction positionSelfEdges(g) {\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    if (node.dummy === 'selfedge') {\n      var selfNode = g.node(node.e.v);\n      var x = selfNode.x + selfNode.width / 2;\n      var y = selfNode.y;\n      var dx = node.x - x;\n      var dy = selfNode.height / 2;\n      g.setEdge(node.e, node.label);\n      g.removeNode(v);\n      node.label.points = [{ x: x + 2 * dx / 3, y: y - dy }, { x: x + 5 * dx / 6, y: y - dy }, { x: x + dx, y: y }, { x: x + 5 * dx / 6, y: y + dy }, { x: x + 2 * dx / 3, y: y + dy }];\n      node.label.x = node.x;\n      node.label.y = node.y;\n    }\n  });\n}\n\nfunction selectNumberAttrs(obj, attrs) {\n  return _lodash2.default.mapValues(_lodash2.default.pick(obj, attrs), Number);\n}\n\nfunction canonicalize(attrs) {\n  var newAttrs = {};\n  _lodash2.default.forEach(attrs, function (v, k) {\n    newAttrs[k.toLowerCase()] = v;\n  });\n  return newAttrs;\n}\n\nfunction layout(g, opts) {\n  var timeFn = opts && opts.debugTiming ? _util.time : _util.notime;\n  timeFn('layout', function () {\n    var layoutGraph = timeFn('  buildLayoutGraph', function () {\n      return buildLayoutGraph(g);\n    });\n    timeFn('  runLayout', function () {\n      runLayout(layoutGraph, timeFn);\n    });\n    timeFn('  updateInputGraph', function () {\n      updateInputGraph(g, layoutGraph);\n    });\n  });\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-dagre/lib/layout.js\n// module id = 429\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cleanup = cleanup;\nexports.run = run;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _util = require('./util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction dfs(g, root, nodeSep, weight, height, depths, v) {\n  var children = g.children(v);\n  if (!children.length) {\n    if (v !== root) {\n      g.setEdge(root, v, { weight: 0, minlen: nodeSep });\n    }\n    return;\n  }\n\n  var top = (0, _util.addBorderNode)(g, '_bt');\n  var bottom = (0, _util.addBorderNode)(g, '_bb');\n  var label = g.node(v);\n\n  g.setParent(top, v);\n  label.borderTop = top;\n  g.setParent(bottom, v);\n  label.borderBottom = bottom;\n\n  _lodash2.default.forEach(children, function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n\n    var childNode = g.node(child);\n    var childTop = childNode.borderTop ? childNode.borderTop : child;\n    var childBottom = childNode.borderBottom ? childNode.borderBottom : child;\n    var thisWeight = childNode.borderTop ? weight : 2 * weight;\n    var minlen = childTop !== childBottom ? 1 : height - depths[v] + 1;\n\n    g.setEdge(top, childTop, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true\n    });\n\n    g.setEdge(childBottom, bottom, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true\n    });\n  });\n\n  if (!g.parent(v)) {\n    g.setEdge(root, top, { weight: 0, minlen: height + depths[v] });\n  }\n}\n\nfunction sumWeights(g) {\n  return _lodash2.default.reduce(g.edges(), function (acc, e) {\n    return acc + g.edge(e).weight;\n  }, 0);\n}\n\nfunction treeDepths(g) {\n  var depths = {};\n  function dfs(v, depth) {\n    var children = g.children(v);\n    if (children && children.length) {\n      _lodash2.default.forEach(children, function (child) {\n        dfs(child, depth + 1);\n      });\n    }\n    depths[v] = depth;\n  }\n  _lodash2.default.forEach(g.children(), function (v) {\n    dfs(v, 1);\n  });\n  return depths;\n}\n\nfunction cleanup(g) {\n  var graphLabel = g.graph();\n  g.removeNode(graphLabel.nestingRoot);\n  delete graphLabel.nestingRoot;\n  _lodash2.default.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    if (edge.nestingEdge) {\n      g.removeEdge(e);\n    }\n  });\n}\n\n/*\n * A nesting graph creates dummy nodes for the tops and bottoms of subgraphs,\n * adds appropriate edges to ensure that all cluster nodes are placed between\n * these boundries, and ensures that the graph is connected.\n *\n * In addition we ensure, through the use of the minlen property, that nodes\n * and subgraph border nodes to not end up on the same rank.\n *\n * Preconditions:\n *\n *    1. Input graph is a DAG\n *    2. Nodes in the input graph has a minlen attribute\n *\n * Postconditions:\n *\n *    1. Input graph is connected.\n *    2. Dummy nodes are added for the tops and bottoms of subgraphs.\n *    3. The minlen attribute for nodes is adjusted to ensure nodes do not\n *       get placed on the same rank as subgraph border nodes.\n *\n * The nesting graph idea comes from Sander, \"Layout of Compound Directed\n * Graphs.\"\n */\nfunction run(g) {\n  var root = (0, _util.addDummyNode)(g, 'root', {}, '_root');\n  var depths = treeDepths(g);\n  var height = _lodash2.default.max(_lodash2.default.values(depths)) - 1; // Note: depths is an Object not an array\n  var nodeSep = 2 * height + 1;\n\n  g.graph().nestingRoot = root;\n\n  // Multiply minlen by nodeSep to align nodes on non-border ranks.\n  _lodash2.default.forEach(g.edges(), function (e) {\n    g.edge(e).minlen *= nodeSep;\n  });\n\n  // Calculate a weight that is sufficient to keep subgraphs vertically compact\n  var weight = sumWeights(g) + 1;\n\n  // Create border nodes and link them up\n  _lodash2.default.forEach(g.children(), function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n  });\n\n  // Save the multiplier for node layers for later removal of empty border\n  // layers.\n  g.graph().nodeRankFactor = nodeSep;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-dagre/lib/nesting-graph.js\n// module id = 430\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.run = run;\nexports.undo = undo;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _util = require('./util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction normalizeEdge(g, e) {\n  var v = e.v;\n  var vRank = g.node(v).rank;\n  var w = e.w;\n  var wRank = g.node(w).rank;\n  var name = e.name;\n  var edgeLabel = g.edge(e);\n  var labelRank = edgeLabel.labelRank;\n\n  if (wRank === vRank + 1) return;\n\n  g.removeEdge(e);\n\n  var dummy, attrs, i;\n  for (i = 0, ++vRank; vRank < wRank; ++i, ++vRank) {\n    edgeLabel.points = [];\n    attrs = {\n      width: 0,\n      height: 0,\n      edgeLabel: edgeLabel,\n      edgeObj: e,\n      rank: vRank\n    };\n    dummy = (0, _util.addDummyNode)(g, 'edge', attrs, '_d');\n    if (vRank === labelRank) {\n      attrs.width = edgeLabel.width;\n      attrs.height = edgeLabel.height;\n      attrs.dummy = 'edge-label';\n      attrs.labelpos = edgeLabel.labelpos;\n    }\n    g.setEdge(v, dummy, { weight: edgeLabel.weight }, name);\n    if (i === 0) {\n      g.graph().dummyChains.push(dummy);\n    }\n    v = dummy;\n  }\n\n  g.setEdge(v, w, { weight: edgeLabel.weight }, name);\n}\n\n/*\n * Breaks any long edges in the graph into short segments that span 1 layer\n * each. This operation is undoable with the denormalize function.\n *\n * Pre-conditions:\n *\n *    1. The input graph is a DAG.\n *    2. Each node in the graph has a \"rank\" property.\n *\n * Post-condition:\n *\n *    1. All edges in the graph have a length of 1.\n *    2. Dummy nodes are added where edges have been split into segments.\n *    3. The graph is augmented with a \"dummyChains\" attribute which contains\n *       the first dummy in each chain of dummy nodes produced.\n */\nfunction run(g) {\n  g.graph().dummyChains = [];\n  _lodash2.default.forEach(g.edges(), function (edge) {\n    normalizeEdge(g, edge);\n  });\n}\n\nfunction undo(g) {\n  _lodash2.default.forEach(g.graph().dummyChains, function (v) {\n    var node = g.node(v);\n    var origLabel = node.edgeLabel;\n    var w;\n    g.setEdge(node.edgeObj, origLabel);\n    while (node.dummy) {\n      w = g.successors(v)[0];\n      g.removeNode(v);\n      origLabel.points.push({ x: node.x, y: node.y });\n      if (node.dummy === 'edge-label') {\n        origLabel.x = node.x;\n        origLabel.y = node.y;\n        origLabel.width = node.width;\n        origLabel.height = node.height;\n      }\n      v = w;\n      node = g.node(v);\n    }\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-dagre/lib/normalize.js\n// module id = 431\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addSubgraphConstraints;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction addSubgraphConstraints(g, cg, vs) {\n  var prev = {};\n  var rootPrev;\n\n  _lodash2.default.forEach(vs, function (v) {\n    var child = g.parent(v);\n    var parent;\n    var prevChild;\n    while (child) {\n      parent = g.parent(child);\n      if (parent) {\n        prevChild = prev[parent];\n        prev[parent] = child;\n      } else {\n        prevChild = rootPrev;\n        rootPrev = child;\n      }\n      if (prevChild && prevChild !== child) {\n        cg.setEdge(prevChild, child);\n        return;\n      }\n      child = parent;\n    }\n  });\n\n  /*\n  function dfs(v) {\n    var children = v ? g.children(v) : g.children();\n    if (children.length) {\n      var min = Number.POSITIVE_INFINITY,\n          subgraphs = [];\n      _.forEach(children, function(child) {\n        var childMin = dfs(child);\n        if (g.children(child).length) {\n          subgraphs.push({ v: child, order: childMin });\n        }\n        min = Math.min(min, childMin);\n      });\n      _.reduce(_.sortBy(subgraphs, \"order\"), function(prev, curr) {\n        cg.setEdge(prev.v, curr.v);\n        return curr;\n      });\n      return min;\n    }\n    return g.node(v).order;\n  }\n  dfs(undefined);\n  */\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-dagre/lib/order/add-subgraph-constraints.js\n// module id = 432\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = barycenter;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction barycenter(g, movable) {\n  return _lodash2.default.map(movable, function (v) {\n    var inV = g.inEdges(v);\n    if (!inV.length) {\n      return { v: v };\n    } else {\n      var result = _lodash2.default.reduce(inV, function (acc, e) {\n        var edge = g.edge(e);\n        var nodeU = g.node(e.v);\n        return {\n          sum: acc.sum + edge.weight * nodeU.order,\n          weight: acc.weight + edge.weight\n        };\n      }, { sum: 0, weight: 0 });\n\n      return {\n        v: v,\n        barycenter: result.sum / result.weight,\n        weight: result.weight\n      };\n    }\n  });\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-dagre/lib/order/barycenter.js\n// module id = 433\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = buildLayerGraph;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _cienaGraphlib = require('ciena-graphlib');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction createRootNode(g) {\n  var v;\n  while (g.hasNode(v = _lodash2.default.uniqueId('_root'))) {}\n  return v;\n}\n\n/*\n * Constructs a graph that can be used to sort a layer of nodes. The graph will\n * contain all base and subgraph nodes from the request layer in their original\n * hierarchy and any edges that are incident on these nodes and are of the type\n * requested by the \"relationship\" parameter.\n *\n * Nodes from the requested rank that do not have parents are assigned a root\n * node in the output graph, which is set in the root graph attribute. This\n * makes it easy to walk the hierarchy of movable nodes during ordering.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG\n *    2. Base nodes in the input graph have a rank attribute\n *    3. Subgraph nodes in the input graph has minRank and maxRank attributes\n *    4. Edges have an assigned weight\n *\n * Post-conditions:\n *\n *    1. Output graph has all nodes in the movable rank with preserved\n *       hierarchy.\n *    2. Root nodes in the movable layer are made children of the node\n *       indicated by the root attribute of the graph.\n *    3. Non-movable nodes incident on movable nodes, selected by the\n *       relationship parameter, are included in the graph (without hierarchy).\n *    4. Edges incident on movable nodes, selected by the relationship\n *       parameter, are added to the output graph.\n *    5. The weights for copied edges are aggregated as need, since the output\n *       graph is not a multi-graph.\n */\nfunction buildLayerGraph(g, rank, relationship) {\n  var root = createRootNode(g);\n  var result = new _cienaGraphlib.Graph({ compound: true }).setGraph({ root: root }).setDefaultNodeLabel(function (v) {\n    return g.node(v);\n  });\n\n  _lodash2.default.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    var parent = g.parent(v);\n\n    if (node.rank === rank || node.minRank <= rank && rank <= node.maxRank) {\n      result.setNode(v);\n      result.setParent(v, parent || root);\n\n      // This assumes we have only short edges!\n      _lodash2.default.forEach(g[relationship](v), function (e) {\n        var u = e.v === v ? e.w : e.v;\n        var edge = result.edge(u, v);\n        var weight = !_lodash2.default.isUndefined(edge) ? edge.weight : 0;\n        result.setEdge(u, v, { weight: g.edge(e).weight + weight });\n      });\n\n      if (_lodash2.default.has(node, 'minRank')) {\n        result.setNode(v, {\n          borderLeft: node.borderLeft[rank],\n          borderRight: node.borderRight[rank]\n        });\n      }\n    }\n  });\n\n  return result;\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-dagre/lib/order/build-layer-graph.js\n// module id = 434\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = crossCount;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction twoLayerCrossCount(g, northLayer, southLayer) {\n  // Sort all of the edges between the north and south layers by their position\n  // in the north layer and then the south. Map these edges to the position of\n  // their head in the south layer.\n  var southPos = _lodash2.default.zipObject(southLayer, _lodash2.default.map(southLayer, function (v, i) {\n    return i;\n  }));\n  var southEntries = _lodash2.default.flatten(_lodash2.default.map(northLayer, function (v) {\n    return _lodash2.default.chain(g.outEdges(v)).map(function (e) {\n      return { pos: southPos[e.w], weight: g.edge(e).weight };\n    }).sortBy('pos').value();\n  }), true);\n\n  // Build the accumulator tree\n  var firstIndex = 1;\n  while (firstIndex < southLayer.length) {\n    firstIndex <<= 1;\n  }var treeSize = 2 * firstIndex - 1;\n  firstIndex -= 1;\n  var tree = _lodash2.default.map(new Array(treeSize), function () {\n    return 0;\n  });\n\n  // Calculate the weighted crossings\n  var cc = 0;\n  _lodash2.default.forEach(southEntries.forEach(function (entry) {\n    var index = entry.pos + firstIndex;\n    tree[index] += entry.weight;\n    var weightSum = 0;\n    while (index > 0) {\n      if (index % 2) {\n        weightSum += tree[index + 1];\n      }\n      index = index - 1 >> 1;\n      tree[index] += entry.weight;\n    }\n    cc += entry.weight * weightSum;\n  }));\n\n  return cc;\n}\n\n/*\n * A function that takes a layering (an array of layers, each with an array of\n * ordererd nodes) and a graph and returns a weighted crossing count.\n *\n * Pre-conditions:\n *\n *    1. Input graph must be simple (not a multigraph), directed, and include\n *       only simple edges.\n *    2. Edges in the input graph must have assigned weights.\n *\n * Post-conditions:\n *\n *    1. The graph and layering matrix are left unchanged.\n *\n * This algorithm is derived from Barth, et al., \"Bilayer Cross Counting.\"\n */\nfunction crossCount(g, layering) {\n  var cc = 0;\n  for (var i = 1; i < layering.length; ++i) {\n    cc += twoLayerCrossCount(g, layering[i - 1], layering[i]);\n  }\n  return cc;\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-dagre/lib/order/cross-count.js\n// module id = 435\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = order;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _initOrder = require('./init-order');\n\nvar _initOrder2 = _interopRequireDefault(_initOrder);\n\nvar _crossCount = require('./cross-count');\n\nvar _crossCount2 = _interopRequireDefault(_crossCount);\n\nvar _sortSubgraph = require('./sort-subgraph');\n\nvar _sortSubgraph2 = _interopRequireDefault(_sortSubgraph);\n\nvar _buildLayerGraph = require('./build-layer-graph');\n\nvar _buildLayerGraph2 = _interopRequireDefault(_buildLayerGraph);\n\nvar _addSubgraphConstraints = require('./add-subgraph-constraints');\n\nvar _addSubgraphConstraints2 = _interopRequireDefault(_addSubgraphConstraints);\n\nvar _cienaGraphlib = require('ciena-graphlib');\n\nvar _util = require('../util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction buildLayerGraphs(g, ranks, relationship) {\n  return _lodash2.default.map(ranks, function (rank) {\n    return (0, _buildLayerGraph2.default)(g, rank, relationship);\n  });\n}\n\nfunction sweepLayerGraphs(layerGraphs, biasRight) {\n  var cg = new _cienaGraphlib.Graph();\n  _lodash2.default.forEach(layerGraphs, function (lg) {\n    var root = lg.graph().root;\n    var sorted = (0, _sortSubgraph2.default)(lg, root, cg, biasRight);\n    _lodash2.default.forEach(sorted.vs, function (v, i) {\n      lg.node(v).order = i;\n    });\n    (0, _addSubgraphConstraints2.default)(lg, cg, sorted.vs);\n  });\n}\n\nfunction assignOrder(g, layering) {\n  _lodash2.default.forEach(layering, function (layer) {\n    _lodash2.default.forEach(layer, function (v, i) {\n      g.node(v).order = i;\n    });\n  });\n}\n\n/*\n * Applies heuristics to minimize edge crossings in the graph and sets the best\n * order solution as an order attribute on each node.\n *\n * Pre-conditions:\n *\n *    1. Graph must be DAG\n *    2. Graph nodes must be objects with a \"rank\" attribute\n *    3. Graph edges must have the \"weight\" attribute\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have an \"order\" attribute based on the results of the\n *       algorithm.\n */\nfunction order(g) {\n  var mr = (0, _util.maxRank)(g);\n  var downLayerGraphs = buildLayerGraphs(g, _lodash2.default.range(1, mr + 1), 'inEdges');\n  var upLayerGraphs = buildLayerGraphs(g, _lodash2.default.range(mr - 1, -1, -1), 'outEdges');\n\n  var layering = (0, _initOrder2.default)(g);\n  assignOrder(g, layering);\n\n  var bestCC = Number.POSITIVE_INFINITY;\n  var best;\n\n  for (var i = 0, lastBest = 0; lastBest < 4; ++i, ++lastBest) {\n    sweepLayerGraphs(i % 2 ? downLayerGraphs : upLayerGraphs, i % 4 >= 2);\n\n    layering = (0, _util.buildLayerMatrix)(g);\n    var cc = (0, _crossCount2.default)(g, layering);\n    if (cc < bestCC) {\n      lastBest = 0;\n      best = _lodash2.default.cloneDeep(layering);\n      bestCC = cc;\n    }\n  }\n\n  assignOrder(g, best);\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-dagre/lib/order/index.js\n// module id = 436\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = initOrder;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * Assigns an initial order value for each node by performing a DFS search\n * starting from nodes in the first rank. Nodes are assigned an order in their\n * rank as they are first visited.\n *\n * This approach comes from Gansner, et al., \"A Technique for Drawing Directed\n * Graphs.\"\n *\n * Returns a layering matrix with an array per layer and each layer sorted by\n * the order of its nodes.\n */\nfunction initOrder(g) {\n  var visited = {};\n  var simpleNodes = _lodash2.default.filter(g.nodes(), function (v) {\n    return !g.children(v).length;\n  });\n  var maxRank = _lodash2.default.max(_lodash2.default.map(simpleNodes, function (v) {\n    return g.node(v).rank;\n  }));\n  var layers = _lodash2.default.map(_lodash2.default.range(maxRank + 1), function () {\n    return [];\n  });\n\n  function dfs(v) {\n    if (_lodash2.default.has(visited, v)) return;\n    visited[v] = true;\n    var node = g.node(v);\n    layers[node.rank].push(v);\n    _lodash2.default.forEach(g.successors(v), dfs);\n  }\n\n  var orderedVs = _lodash2.default.sortBy(simpleNodes, function (v) {\n    return g.node(v).rank;\n  });\n  _lodash2.default.forEach(orderedVs, dfs);\n\n  return layers;\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-dagre/lib/order/init-order.js\n// module id = 437\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = resolveConflicts;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction doResolveConflicts(sourceSet) {\n  var entries = [];\n\n  function handleIn(vEntry) {\n    return function (uEntry) {\n      if (uEntry.merged) {\n        return;\n      }\n      if (_lodash2.default.isUndefined(uEntry.barycenter) || _lodash2.default.isUndefined(vEntry.barycenter) || uEntry.barycenter >= vEntry.barycenter) {\n        mergeEntries(vEntry, uEntry);\n      }\n    };\n  }\n\n  function handleOut(vEntry) {\n    return function (wEntry) {\n      wEntry['in'].push(vEntry);\n      if (--wEntry.indegree === 0) {\n        sourceSet.push(wEntry);\n      }\n    };\n  }\n\n  while (sourceSet.length) {\n    var entry = sourceSet.pop();\n    entries.push(entry);\n    _lodash2.default.forEach(entry['in'].reverse(), handleIn(entry));\n    _lodash2.default.forEach(entry.out, handleOut(entry));\n  }\n\n  return _lodash2.default.chain(entries).filter(function (entry) {\n    return !entry.merged;\n  }).map(function (entry) {\n    return _lodash2.default.pick(entry, ['vs', 'i', 'barycenter', 'weight']);\n  }).value();\n}\n\nfunction mergeEntries(target, source) {\n  var sum = 0;\n  var weight = 0;\n\n  if (target.weight) {\n    sum += target.barycenter * target.weight;\n    weight += target.weight;\n  }\n\n  if (source.weight) {\n    sum += source.barycenter * source.weight;\n    weight += source.weight;\n  }\n\n  target.vs = source.vs.concat(target.vs);\n  target.barycenter = sum / weight;\n  target.weight = weight;\n  target.i = Math.min(source.i, target.i);\n  source.merged = true;\n}\n\n/*\n * Given a list of entries of the form {v, barycenter, weight} and a\n * constraint graph this function will resolve any conflicts between the\n * constraint graph and the barycenters for the entries. If the barycenters for\n * an entry would violate a constraint in the constraint graph then we coalesce\n * the nodes in the conflict into a new node that respects the contraint and\n * aggregates barycenter and weight information.\n *\n * This implementation is based on the description in Forster, \"A Fast and\n * Simple Hueristic for Constrained Two-Level Crossing Reduction,\" thought it\n * differs in some specific details.\n *\n * Pre-conditions:\n *\n *    1. Each entry has the form {v, barycenter, weight}, or if the node has\n *       no barycenter, then {v}.\n *\n * Returns:\n *\n *    A new list of entries of the form {vs, i, barycenter, weight}. The list\n *    `vs` may either be a singleton or it may be an aggregation of nodes\n *    ordered such that they do not violate constraints from the constraint\n *    graph. The property `i` is the lowest original index of any of the\n *    elements in `vs`.\n */\nfunction resolveConflicts(entries, cg) {\n  var mappedEntries = {};\n  _lodash2.default.forEach(entries, function (entry, i) {\n    var tmp = mappedEntries[entry.v] = {\n      indegree: 0,\n      'in': [],\n      out: [],\n      vs: [entry.v],\n      i: i\n    };\n    if (!_lodash2.default.isUndefined(entry.barycenter)) {\n      tmp.barycenter = entry.barycenter;\n      tmp.weight = entry.weight;\n    }\n  });\n\n  _lodash2.default.forEach(cg.edges(), function (e) {\n    var entryV = mappedEntries[e.v];\n    var entryW = mappedEntries[e.w];\n    if (!_lodash2.default.isUndefined(entryV) && !_lodash2.default.isUndefined(entryW)) {\n      entryW.indegree++;\n      entryV.out.push(mappedEntries[e.w]);\n    }\n  });\n\n  var sourceSet = _lodash2.default.filter(mappedEntries, function (entry) {\n    return !entry.indegree;\n  });\n\n  return doResolveConflicts(sourceSet);\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-dagre/lib/order/resolve-conflicts.js\n// module id = 438\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = sortSubgraph;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _barycenter = require('./barycenter');\n\nvar _barycenter2 = _interopRequireDefault(_barycenter);\n\nvar _resolveConflicts = require('./resolve-conflicts');\n\nvar _resolveConflicts2 = _interopRequireDefault(_resolveConflicts);\n\nvar _sort = require('./sort');\n\nvar _sort2 = _interopRequireDefault(_sort);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction expandSubgraphs(entries, subgraphs) {\n  _lodash2.default.forEach(entries, function (entry) {\n    entry.vs = _lodash2.default.flatten(entry.vs.map(function (v) {\n      if (subgraphs[v]) {\n        return subgraphs[v].vs;\n      }\n      return v;\n    }), true);\n  });\n}\n\nfunction mergeBarycenters(target, other) {\n  if (!_lodash2.default.isUndefined(target.barycenter)) {\n    target.barycenter = (target.barycenter * target.weight + other.barycenter * other.weight) / (target.weight + other.weight);\n    target.weight += other.weight;\n  } else {\n    target.barycenter = other.barycenter;\n    target.weight = other.weight;\n  }\n}\n\nfunction sortSubgraph(g, v, cg, biasRight) {\n  var movable = g.children(v);\n  var node = g.node(v);\n  var bl = node ? node.borderLeft : undefined;\n  var br = node ? node.borderRight : undefined;\n  var subgraphs = {};\n\n  if (bl) {\n    movable = _lodash2.default.filter(movable, function (w) {\n      return w !== bl && w !== br;\n    });\n  }\n\n  var barycenters = (0, _barycenter2.default)(g, movable);\n  _lodash2.default.forEach(barycenters, function (entry) {\n    if (g.children(entry.v).length) {\n      var subgraphResult = sortSubgraph(g, entry.v, cg, biasRight);\n      subgraphs[entry.v] = subgraphResult;\n      if (_lodash2.default.has(subgraphResult, 'barycenter')) {\n        mergeBarycenters(entry, subgraphResult);\n      }\n    }\n  });\n\n  var entries = (0, _resolveConflicts2.default)(barycenters, cg);\n  expandSubgraphs(entries, subgraphs);\n\n  var result = (0, _sort2.default)(entries, biasRight);\n\n  if (bl) {\n    result.vs = _lodash2.default.flatten([bl, result.vs, br], true);\n    if (g.predecessors(bl).length) {\n      var blPred = g.node(g.predecessors(bl)[0]);\n      var brPred = g.node(g.predecessors(br)[0]);\n      if (!_lodash2.default.has(result, 'barycenter')) {\n        result.barycenter = 0;\n        result.weight = 0;\n      }\n      result.barycenter = (result.barycenter * result.weight + blPred.order + brPred.order) / (result.weight + 2);\n      result.weight += 2;\n    }\n  }\n\n  return result;\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-dagre/lib/order/sort-subgraph.js\n// module id = 439\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = sort;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _util = require('../util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction consumeUnsortable(vs, unsortable, index) {\n  var last;\n  while (unsortable.length && (last = _lodash2.default.last(unsortable)).i <= index) {\n    unsortable.pop();\n    vs.push(last.vs);\n    index++;\n  }\n  return index;\n}\n\nfunction compareWithBias(bias) {\n  return function (entryV, entryW) {\n    if (entryV.barycenter < entryW.barycenter) {\n      return -1;\n    } else if (entryV.barycenter > entryW.barycenter) {\n      return 1;\n    }\n\n    return !bias ? entryV.i - entryW.i : entryW.i - entryV.i;\n  };\n}\n\nfunction sort(entries, biasRight) {\n  var parts = (0, _util.partition)(entries, function (entry) {\n    return _lodash2.default.has(entry, 'barycenter');\n  });\n  var sortable = parts.lhs;\n  var unsortable = _lodash2.default.sortBy(parts.rhs, function (entry) {\n    return -entry.i;\n  });\n  var vs = [];\n  var sum = 0;\n  var weight = 0;\n  var vsIndex = 0;\n\n  sortable.sort(compareWithBias(!!biasRight));\n\n  vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n\n  _lodash2.default.forEach(sortable, function (entry) {\n    vsIndex += entry.vs.length;\n    vs.push(entry.vs);\n    sum += entry.barycenter * entry.weight;\n    weight += entry.weight;\n    vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n  });\n\n  var result = { vs: _lodash2.default.flatten(vs, true) };\n  if (weight) {\n    result.barycenter = sum / weight;\n    result.weight = weight;\n  }\n  return result;\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-dagre/lib/order/sort.js\n// module id = 440\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parentDummyChains;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Find a path from v to w through the lowest common ancestor (LCA). Return the\n// full path and the LCA.\nfunction findPath(g, postorderNums, v, w) {\n  var vPath = [];\n  var wPath = [];\n  var low = Math.min(postorderNums[v].low, postorderNums[w].low);\n  var lim = Math.max(postorderNums[v].lim, postorderNums[w].lim);\n  var parent;\n  var lca;\n\n  // Traverse up from v to find the LCA\n  parent = v;\n  do {\n    parent = g.parent(parent);\n    vPath.push(parent);\n  } while (parent && (postorderNums[parent].low > low || lim > postorderNums[parent].lim));\n  lca = parent;\n\n  // Traverse from w to LCA\n  parent = w;\n  while ((parent = g.parent(parent)) !== lca) {\n    wPath.push(parent);\n  }\n\n  return { path: vPath.concat(wPath.reverse()), lca: lca };\n}\n\nfunction postorder(g) {\n  var result = {};\n  var lim = 0;\n\n  function dfs(v) {\n    var low = lim;\n    _lodash2.default.forEach(g.children(v), dfs);\n    result[v] = { low: low, lim: lim++ };\n  }\n  _lodash2.default.forEach(g.children(), dfs);\n\n  return result;\n}\n\nfunction parentDummyChains(g) {\n  var postorderNums = postorder(g);\n\n  _lodash2.default.forEach(g.graph().dummyChains, function (v) {\n    var node = g.node(v);\n    var edgeObj = node.edgeObj;\n    var pathData = findPath(g, postorderNums, edgeObj.v, edgeObj.w);\n    var path = pathData.path;\n    var lca = pathData.lca;\n    var pathIdx = 0;\n    var pathV = path[pathIdx];\n    var ascending = true;\n\n    while (v !== edgeObj.w) {\n      node = g.node(v);\n\n      if (ascending) {\n        while ((pathV = path[pathIdx]) !== lca && g.node(pathV).maxRank < node.rank) {\n          pathIdx++;\n        }\n\n        if (pathV === lca) {\n          ascending = false;\n        }\n      }\n\n      if (!ascending) {\n        while (pathIdx < path.length - 1 && g.node(pathV = path[pathIdx + 1]).minRank <= node.rank) {\n          pathIdx++;\n        }\n        pathV = path[pathIdx];\n      }\n\n      g.setParent(v, pathV);\n      v = g.successors(v)[0];\n    }\n  });\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-dagre/lib/parent-dummy-chains.js\n// module id = 441\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findType1Conflicts = findType1Conflicts;\nexports.findType2Conflicts = findType2Conflicts;\nexports.findOtherInnerSegmentNode = findOtherInnerSegmentNode;\nexports.addConflict = addConflict;\nexports.hasConflict = hasConflict;\nexports.verticalAlignment = verticalAlignment;\nexports.horizontalCompaction = horizontalCompaction;\nexports.buildBlockGraph = buildBlockGraph;\nexports.findSmallestWidthAlignment = findSmallestWidthAlignment;\nexports.alignCoordinates = alignCoordinates;\nexports.balance = balance;\nexports.positionX = positionX;\nexports.sep = sep;\nexports.width = width;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _cienaGraphlib = require('ciena-graphlib');\n\nvar _util = require('../util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n * This module provides coordinate assignment based on Brandes and Köpf, \"Fast\n * and Simple Horizontal Coordinate Assignment.\"\n */\n\n/*\n * Marks all edges in the graph with a type-1 conflict with the \"type1Conflict\"\n * property. A type-1 conflict is one where a non-inner segment crosses an\n * inner segment. An inner segment is an edge with both incident nodes marked\n * with the \"dummy\" property.\n *\n * This algorithm scans layer by layer, starting with the second, for type-1\n * conflicts between the current layer and the previous layer. For each layer\n * it scans the nodes from left to right until it reaches one that is incident\n * on an inner segment. It then scans predecessors to determine if they have\n * edges that cross that inner segment. At the end a final scan is done for all\n * nodes on the current rank to see if they cross the last visited inner\n * segment.\n *\n * This algorithm (safely) assumes that a dummy node will only be incident on a\n * single node in the layers being scanned.\n */\nfunction findType1Conflicts(g, layering) {\n  var conflicts = {};\n\n  function visitLayer(prevLayer, layer) {\n    // last visited node in the previous layer that is incident on an inner\n    // segment.\n    var k0 = 0;\n    // Tracks the last node in this layer scanned for crossings with a type-1\n    // segment.\n    var scanPos = 0;\n    var prevLayerLength = prevLayer.length;\n    var lastNode = _lodash2.default.last(layer);\n\n    _lodash2.default.forEach(layer, function (v, i) {\n      var w = findOtherInnerSegmentNode(g, v);\n      var k1 = w ? g.node(w).order : prevLayerLength;\n\n      if (w || v === lastNode) {\n        _lodash2.default.forEach(layer.slice(scanPos, i + 1), function (scanNode) {\n          _lodash2.default.forEach(g.predecessors(scanNode), function (u) {\n            var uLabel = g.node(u);\n            var uPos = uLabel.order;\n            if ((uPos < k0 || k1 < uPos) && !(uLabel.dummy && g.node(scanNode).dummy)) {\n              addConflict(conflicts, u, scanNode);\n            }\n          });\n        });\n        scanPos = i + 1;\n        k0 = k1;\n      }\n    });\n\n    return layer;\n  }\n\n  _lodash2.default.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findType2Conflicts(g, layering) {\n  var conflicts = {};\n\n  function scan(south, southPos, southEnd, prevNorthBorder, nextNorthBorder) {\n    var v;\n    _lodash2.default.forEach(_lodash2.default.range(southPos, southEnd), function (i) {\n      v = south[i];\n      if (g.node(v).dummy) {\n        _lodash2.default.forEach(g.predecessors(v), function (u) {\n          var uNode = g.node(u);\n          if (uNode.dummy && (uNode.order < prevNorthBorder || uNode.order > nextNorthBorder)) {\n            addConflict(conflicts, u, v);\n          }\n        });\n      }\n    });\n  }\n\n  function visitLayer(north, south) {\n    var prevNorthPos = -1;\n    var nextNorthPos;\n    var southPos = 0;\n\n    _lodash2.default.forEach(south, function (v, southLookahead) {\n      if (g.node(v).dummy === 'border') {\n        var predecessors = g.predecessors(v);\n        if (predecessors.length) {\n          nextNorthPos = g.node(predecessors[0]).order;\n          scan(south, southPos, southLookahead, prevNorthPos, nextNorthPos);\n          southPos = southLookahead;\n          prevNorthPos = nextNorthPos;\n        }\n      }\n      scan(south, southPos, south.length, nextNorthPos, north.length);\n    });\n\n    return south;\n  }\n\n  _lodash2.default.reduce(layering, visitLayer);\n  return conflicts;\n}\n\nfunction findOtherInnerSegmentNode(g, v) {\n  if (g.node(v).dummy) {\n    return _lodash2.default.find(g.predecessors(v), function (u) {\n      return g.node(u).dummy;\n    });\n  }\n}\n\nfunction addConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n\n  var conflictsV = conflicts[v];\n  if (!conflictsV) {\n    conflicts[v] = conflictsV = {};\n  }\n  conflictsV[w] = true;\n}\n\nfunction hasConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n  return _lodash2.default.has(conflicts[v], w);\n}\n\n/*\n * Try to align nodes into vertical \"blocks\" where possible. This algorithm\n * attempts to align a node with one of its median neighbors. If the edge\n * connecting a neighbor is a type-1 conflict then we ignore that possibility.\n * If a previous node has already formed a block with a node after the node\n * we're trying to form a block with, we also ignore that possibility - our\n * blocks would be split in that scenario.\n */\nfunction verticalAlignment(g, layering, conflicts, neighborFn) {\n  var root = {};\n  var align = {};\n  var pos = {};\n\n  // We cache the position here based on the layering because the graph and\n  // layering may be out of sync. The layering matrix is manipulated to\n  // generate different extreme alignments.\n  _lodash2.default.forEach(layering, function (layer) {\n    _lodash2.default.forEach(layer, function (v, order) {\n      root[v] = v;\n      align[v] = v;\n      pos[v] = order;\n    });\n  });\n\n  _lodash2.default.forEach(layering, function (layer) {\n    var prevIdx = -1;\n    _lodash2.default.forEach(layer, function (v) {\n      var ws = neighborFn(v);\n      if (ws.length) {\n        ws = _lodash2.default.sortBy(ws, function (w) {\n          return pos[w];\n        });\n        var mp = (ws.length - 1) / 2;\n        for (var i = Math.floor(mp), il = Math.ceil(mp); i <= il; ++i) {\n          var w = ws[i];\n          if (align[v] === v && prevIdx < pos[w] && !hasConflict(conflicts, v, w)) {\n            align[w] = v;\n            align[v] = root[v] = root[w];\n            prevIdx = pos[w];\n          }\n        }\n      }\n    });\n  });\n\n  return { root: root, align: align };\n}\n\nfunction horizontalCompaction(g, layering, root, align, reverseSep) {\n  // This portion of the algorithm differs from BK due to a number of problems.\n  // Instead of their algorithm we construct a new block graph and do two\n  // sweeps. The first sweep places blocks with the smallest possible\n  // coordinates. The second sweep removes unused space by moving blocks to the\n  // greatest coordinates without violating separation.\n  var xs = {};\n  var blockG = buildBlockGraph(g, layering, root, reverseSep);\n\n  // First pass, assign smallest coordinates via DFS\n  var visited = {};\n  function pass1(v) {\n    if (!_lodash2.default.has(visited, v)) {\n      visited[v] = true;\n      xs[v] = _lodash2.default.reduce(blockG.inEdges(v), function (max, e) {\n        pass1(e.v);\n        return Math.max(max, xs[e.v] + blockG.edge(e));\n      }, 0);\n    }\n  }\n  _lodash2.default.forEach(blockG.nodes(), pass1);\n\n  var borderType = reverseSep ? 'borderLeft' : 'borderRight';\n  function pass2(v) {\n    if (visited[v] !== 2) {\n      visited[v]++;\n      var node = g.node(v);\n      var min = _lodash2.default.reduce(blockG.outEdges(v), function (min, e) {\n        pass2(e.w);\n        return Math.min(min, xs[e.w] - blockG.edge(e));\n      }, Number.POSITIVE_INFINITY);\n      if (min !== Number.POSITIVE_INFINITY && node.borderType !== borderType) {\n        xs[v] = Math.max(xs[v], min);\n      }\n    }\n  }\n  _lodash2.default.forEach(blockG.nodes(), pass2);\n\n  // Assign x coordinates to all nodes\n  _lodash2.default.forEach(align, function (v) {\n    xs[v] = xs[root[v]];\n  });\n\n  return xs;\n}\n\nfunction buildBlockGraph(g, layering, root, reverseSep) {\n  var blockGraph = new _cienaGraphlib.Graph();\n  var graphLabel = g.graph();\n  var sepFn = sep(graphLabel.nodesep, graphLabel.edgesep, reverseSep);\n\n  _lodash2.default.forEach(layering, function (layer) {\n    var u;\n    _lodash2.default.forEach(layer, function (v) {\n      var vRoot = root[v];\n      blockGraph.setNode(vRoot);\n      if (u) {\n        var uRoot = root[u];\n        var prevMax = blockGraph.edge(uRoot, vRoot);\n        blockGraph.setEdge(uRoot, vRoot, Math.max(sepFn(g, v, u), prevMax || 0));\n      }\n      u = v;\n    });\n  });\n\n  return blockGraph;\n}\n\n/*\n * Returns the alignment that has the smallest width of the given alignments.\n */\nfunction findSmallestWidthAlignment(g, xss) {\n  var vals = _lodash2.default.values(xss);\n\n  return _lodash2.default.minBy(vals, function (xs) {\n    var maxVals = [];\n    var minVals = [];\n\n    _lodash2.default.forIn(xs, function (x, v) {\n      var halfWidth = width(g, v) / 2;\n\n      maxVals.push(x + halfWidth);\n      minVals.push(x - halfWidth);\n    });\n\n    return _lodash2.default.max(maxVals) - _lodash2.default.min(minVals);\n  });\n}\n\n/*\n * Align the coordinates of each of the layout alignments such that\n * left-biased alignments have their minimum coordinate at the same point as\n * the minimum coordinate of the smallest width alignment and right-biased\n * alignments have their maximum coordinate at the same point as the maximum\n * coordinate of the smallest width alignment.\n */\nfunction alignCoordinates(xss, alignTo) {\n  var vals = _lodash2.default.values(alignTo);\n  var alignToMin = _lodash2.default.min(vals);\n  var alignToMax = _lodash2.default.max(vals);\n\n  _lodash2.default.forEach(['u', 'd'], function (vert) {\n    _lodash2.default.forEach(['l', 'r'], function (horiz) {\n      var alignment = vert + horiz;\n      var xs = xss[alignment];\n      var delta;\n      if (xs === alignTo) return;\n\n      var xsVals = _lodash2.default.values(xs);\n      delta = horiz === 'l' ? alignToMin - _lodash2.default.min(xsVals) : alignToMax - _lodash2.default.max(xsVals);\n\n      if (delta) {\n        xss[alignment] = _lodash2.default.mapValues(xs, function (x) {\n          return x + delta;\n        });\n      }\n    });\n  });\n}\n\nfunction balance(xss, align) {\n  return _lodash2.default.mapValues(xss.ul, function (ignore, v) {\n    if (align) {\n      return xss[align.toLowerCase()][v];\n    } else {\n      var xs = _lodash2.default.sortBy(_lodash2.default.map(xss, v));\n      return (xs[1] + xs[2]) / 2;\n    }\n  });\n}\n\nfunction positionX(g) {\n  var layering = (0, _util.buildLayerMatrix)(g);\n  var conflicts = _lodash2.default.merge(findType1Conflicts(g, layering), findType2Conflicts(g, layering));\n\n  var xss = {};\n  var adjustedLayering;\n  _lodash2.default.forEach(['u', 'd'], function (vert) {\n    adjustedLayering = vert === 'u' ? layering : _lodash2.default.values(layering).reverse();\n    _lodash2.default.forEach(['l', 'r'], function (horiz) {\n      if (horiz === 'r') {\n        adjustedLayering = _lodash2.default.map(adjustedLayering, function (inner) {\n          return _lodash2.default.values(inner).reverse();\n        });\n      }\n\n      var neighborFn = _lodash2.default.bind(vert === 'u' ? g.predecessors : g.successors, g);\n      var align = verticalAlignment(g, adjustedLayering, conflicts, neighborFn);\n      var xs = horizontalCompaction(g, adjustedLayering, align.root, align.align, horiz === 'r');\n      if (horiz === 'r') {\n        xs = _lodash2.default.mapValues(xs, function (x) {\n          return -x;\n        });\n      }\n      xss[vert + horiz] = xs;\n    });\n  });\n\n  var smallestWidth = findSmallestWidthAlignment(g, xss);\n  alignCoordinates(xss, smallestWidth);\n  return balance(xss, g.graph().align);\n}\n\nfunction sep(nodeSep, edgeSep, reverseSep) {\n  return function (g, v, w) {\n    var vLabel = g.node(v);\n    var wLabel = g.node(w);\n    var sum = 0;\n    var delta;\n\n    sum += vLabel.width / 2;\n    if (_lodash2.default.has(vLabel, 'labelpos')) {\n      switch (vLabel.labelpos.toLowerCase()) {\n        case 'l':\n          delta = -vLabel.width / 2;break;\n        case 'r':\n          delta = vLabel.width / 2;break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    sum += (vLabel.dummy ? edgeSep : nodeSep) / 2;\n    sum += (wLabel.dummy ? edgeSep : nodeSep) / 2;\n\n    sum += wLabel.width / 2;\n    if (_lodash2.default.has(wLabel, 'labelpos')) {\n      switch (wLabel.labelpos.toLowerCase()) {\n        case 'l':\n          delta = wLabel.width / 2;break;\n        case 'r':\n          delta = -wLabel.width / 2;break;\n      }\n    }\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n    delta = 0;\n\n    return sum;\n  };\n}\n\nfunction width(g, v) {\n  return g.node(v).width;\n}\n\nexports.default = {\n  alignCoordinates: alignCoordinates,\n  balance: balance,\n  buildBlockGraph: buildBlockGraph,\n  findOtherInnerSegmentNode: findOtherInnerSegmentNode,\n  findSmallestWidthAlignment: findSmallestWidthAlignment,\n  findType1Conflicts: findType1Conflicts,\n  findType2Conflicts: findType2Conflicts,\n  hasConflict: hasConflict,\n  horizontalCompaction: horizontalCompaction,\n  positionX: positionX,\n  sep: sep,\n  verticalAlignment: verticalAlignment,\n  width: width\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-dagre/lib/position/bk.js\n// module id = 442\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = position;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _util = require('../util');\n\nvar _bk = require('./bk');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction positionY(g) {\n  var layering = (0, _util.buildLayerMatrix)(g);\n  var rankSep = g.graph().ranksep;\n  var prevY = 0;\n  _lodash2.default.forEach(layering, function (layer) {\n    var maxHeight = _lodash2.default.max(_lodash2.default.map(layer, function (v) {\n      return g.node(v).height;\n    }));\n    _lodash2.default.forEach(layer, function (v) {\n      g.node(v).y = prevY + maxHeight / 2;\n    });\n    prevY += maxHeight + rankSep;\n  });\n}\n\nfunction position(g) {\n  g = (0, _util.asNonCompoundGraph)(g);\n\n  positionY(g);\n  _lodash2.default.forEach((0, _bk.positionX)(g), function (x, v) {\n    g.node(v).x = x;\n  });\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-dagre/lib/position/index.js\n// module id = 443\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rank;\n\nvar _util = require('./util');\n\nvar _feasibleTree = require('./feasible-tree');\n\nvar _feasibleTree2 = _interopRequireDefault(_feasibleTree);\n\nvar _networkSimplex = require('./network-simplex');\n\nvar _networkSimplex2 = _interopRequireDefault(_networkSimplex);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// A fast and simple ranker, but results are far from optimal.\nvar longestPathRanker = _util.longestPath;\n\nfunction tightTreeRanker(g) {\n  (0, _util.longestPath)(g);\n  (0, _feasibleTree2.default)(g);\n}\n\nfunction networkSimplexRanker(g) {\n  (0, _networkSimplex2.default)(g);\n}\n\n/*\n * Assigns a rank to each node in the input graph that respects the \"minlen\"\n * constraint specified on edges between nodes.\n *\n * This basic structure is derived from Gansner, et al., \"A Technique for\n * Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a connected DAG\n *    2. Graph nodes must be objects\n *    3. Graph edges must have \"weight\" and \"minlen\" attributes\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have a \"rank\" attribute based on the results of the\n *       algorithm. Ranks can start at any index (including negative), we'll\n *       fix them up later.\n */\nfunction rank(g) {\n  switch (g.graph().ranker) {\n    case 'network-simplex':\n      networkSimplexRanker(g);break;\n    case 'tight-tree':\n      tightTreeRanker(g);break;\n    case 'longest-path':\n      longestPathRanker(g);break;\n    default:\n      networkSimplexRanker(g);\n  }\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-dagre/lib/rank/index.js\n// module id = 444\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = networkSimplex;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _cienaGraphlib = require('ciena-graphlib');\n\nvar _feasibleTree = require('./feasible-tree');\n\nvar _feasibleTree2 = _interopRequireDefault(_feasibleTree);\n\nvar _util = require('./util');\n\nvar _util2 = require('../util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar preorder = _cienaGraphlib.alg.preorder,\n    postorder = _cienaGraphlib.alg.postorder;\n\n\n// Expose some internals for testing purposes\nnetworkSimplex.initLowLimValues = initLowLimValues;\nnetworkSimplex.initCutValues = initCutValues;\nnetworkSimplex.calcCutValue = calcCutValue;\nnetworkSimplex.leaveEdge = leaveEdge;\nnetworkSimplex.enterEdge = enterEdge;\nnetworkSimplex.exchangeEdges = exchangeEdges;\n\n/*\n * Initializes cut values for all edges in the tree.\n */\nfunction initCutValues(t, g) {\n  var vs = postorder(t, t.nodes());\n  vs = vs.slice(0, vs.length - 1);\n  _lodash2.default.forEach(vs, function (v) {\n    assignCutValue(t, g, v);\n  });\n}\n\nfunction assignCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  t.edge(child, parent).cutvalue = calcCutValue(t, g, child);\n}\n\n/*\n * Given the tight tree, its graph, and a child in the graph calculate and\n * return the cut value for the edge between the child and its parent.\n */\nfunction calcCutValue(t, g, child) {\n  var childLab = t.node(child);\n  var parent = childLab.parent;\n  // True if the child is on the tail end of the edge in the directed graph\n  var childIsTail = true;\n  // The graph's view of the tree edge we're inspecting\n  var graphEdge = g.edge(child, parent);\n  // The accumulated cut value for the edge between this node and its parent\n  var cutValue = 0;\n\n  if (!graphEdge) {\n    childIsTail = false;\n    graphEdge = g.edge(parent, child);\n  }\n\n  cutValue = graphEdge.weight;\n\n  _lodash2.default.forEach(g.nodeEdges(child), function (e) {\n    var isOutEdge = e.v === child;\n    var other = isOutEdge ? e.w : e.v;\n\n    if (other !== parent) {\n      var pointsToHead = isOutEdge === childIsTail;\n      var otherWeight = g.edge(e).weight;\n\n      cutValue += pointsToHead ? otherWeight : -otherWeight;\n      if (isTreeEdge(t, child, other)) {\n        var otherCutValue = t.edge(child, other).cutvalue;\n        cutValue += pointsToHead ? -otherCutValue : otherCutValue;\n      }\n    }\n  });\n\n  return cutValue;\n}\n\nfunction initLowLimValues(tree, root) {\n  if (arguments.length < 2) {\n    root = tree.nodes()[0];\n  }\n  dfsAssignLowLim(tree, {}, 1, root);\n}\n\nfunction dfsAssignLowLim(tree, visited, nextLim, v, parent) {\n  var low = nextLim;\n  var label = tree.node(v);\n\n  visited[v] = true;\n  _lodash2.default.forEach(tree.neighbors(v), function (w) {\n    if (!_lodash2.default.has(visited, w)) {\n      nextLim = dfsAssignLowLim(tree, visited, nextLim, w, v);\n    }\n  });\n\n  label.low = low;\n  label.lim = nextLim++;\n  if (parent) {\n    label.parent = parent;\n  } else {\n    // TODO should be able to remove this when we incrementally update low lim\n    delete label.parent;\n  }\n\n  return nextLim;\n}\n\nfunction leaveEdge(tree) {\n  return _lodash2.default.find(tree.edges(), function (e) {\n    return tree.edge(e).cutvalue < 0;\n  });\n}\n\nfunction enterEdge(t, g, edge) {\n  var v = edge.v;\n  var w = edge.w;\n\n  // For the rest of this function we assume that v is the tail and w is the\n  // head, so if we don't have this edge in the graph we should flip it to\n  // match the correct orientation.\n  if (!g.hasEdge(v, w)) {\n    v = edge.w;\n    w = edge.v;\n  }\n\n  var vLabel = t.node(v);\n  var wLabel = t.node(w);\n  var tailLabel = vLabel;\n  var flip = false;\n\n  // If the root is in the tail of the edge then we need to flip the logic that\n  // checks for the head and tail nodes in the candidates function below.\n  if (vLabel.lim > wLabel.lim) {\n    tailLabel = wLabel;\n    flip = true;\n  }\n\n  var candidates = _lodash2.default.filter(g.edges(), function (edge) {\n    return flip === isDescendant(t, t.node(edge.v), tailLabel) && flip !== isDescendant(t, t.node(edge.w), tailLabel);\n  });\n\n  return _lodash2.default.minBy(candidates, function (edge) {\n    return (0, _util.slack)(g, edge);\n  });\n}\n\nfunction exchangeEdges(t, g, e, f) {\n  var v = e.v;\n  var w = e.w;\n  t.removeEdge(v, w);\n  t.setEdge(f.v, f.w, {});\n  initLowLimValues(t);\n  initCutValues(t, g);\n  updateRanks(t, g);\n}\n\nfunction updateRanks(t, g) {\n  var root = _lodash2.default.find(t.nodes(), function (v) {\n    return !g.node(v).parent;\n  });\n  var vs = preorder(t, root);\n  vs = vs.slice(1);\n  _lodash2.default.forEach(vs, function (v) {\n    var parent = t.node(v).parent;\n    var edge = g.edge(v, parent);\n    var flipped = false;\n\n    if (!edge) {\n      edge = g.edge(parent, v);\n      flipped = true;\n    }\n\n    g.node(v).rank = g.node(parent).rank + (flipped ? edge.minlen : -edge.minlen);\n  });\n}\n\n/*\n * Returns true if the edge is in the tree.\n */\nfunction isTreeEdge(tree, u, v) {\n  return tree.hasEdge(u, v);\n}\n\n/*\n * Returns true if the specified node is descendant of the root node per the\n * assigned low and lim attributes in the tree.\n */\nfunction isDescendant(tree, vLabel, rootLabel) {\n  return rootLabel.low <= vLabel.lim && vLabel.lim <= rootLabel.lim;\n}\n\n/*\n * The network simplex algorithm assigns ranks to each node in the input graph\n * and iteratively improves the ranking to reduce the length of edges.\n *\n * Preconditions:\n *\n *    1. The input graph must be a DAG.\n *    2. All nodes in the graph must have an object value.\n *    3. All edges in the graph must have \"minlen\" and \"weight\" attributes.\n *\n * Postconditions:\n *\n *    1. All nodes in the graph will have an assigned \"rank\" attribute that has\n *       been optimized by the network simplex algorithm. Ranks start at 0.\n *\n *\n * A rough sketch of the algorithm is as follows:\n *\n *    1. Assign initial ranks to each node. We use the longest path algorithm,\n *       which assigns ranks to the lowest position possible. In general this\n *       leads to very wide bottom ranks and unnecessarily long edges.\n *    2. Construct a feasible tight tree. A tight tree is one such that all\n *       edges in the tree have no slack (difference between length of edge\n *       and minlen for the edge). This by itself greatly improves the assigned\n *       rankings by shorting edges.\n *    3. Iteratively find edges that have negative cut values. Generally a\n *       negative cut value indicates that the edge could be removed and a new\n *       tree edge could be added to produce a more compact graph.\n *\n * Much of the algorithms here are derived from Gansner, et al., \"A Technique\n * for Drawing Directed Graphs.\" The structure of the file roughly follows the\n * structure of the overall algorithm.\n */\nfunction networkSimplex(g) {\n  g = (0, _util2.simplify)(g);\n  (0, _util.longestPath)(g);\n  var t = (0, _feasibleTree2.default)(g);\n  initLowLimValues(t);\n  initCutValues(t, g);\n\n  var e, f;\n  while (e = leaveEdge(t)) {\n    f = enterEdge(t, g, e);\n    exchangeEdges(t, g, e, f);\n  }\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-dagre/lib/rank/network-simplex.js\n// module id = 445\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (g) {\n  var visited = {};\n  var cmpts = [];\n  var cmpt;\n\n  function dfs(v) {\n    if (_lodash2.default.has(visited, v)) return;\n    visited[v] = true;\n    cmpt.push(v);\n    _lodash2.default.each(g.successors(v), dfs);\n    _lodash2.default.each(g.predecessors(v), dfs);\n  }\n\n  _lodash2.default.each(g.nodes(), function (v) {\n    cmpt = [];\n    dfs(v);\n    if (cmpt.length) {\n      cmpts.push(cmpt);\n    }\n  });\n\n  return cmpts;\n};\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-graphlib/lib/alg/components.js\n// module id = 446\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (g, weightFunc, edgeFunc) {\n  return _lodash2.default.transform(g.nodes(), function (acc, v) {\n    acc[v] = (0, _dijkstra2.default)(g, v, weightFunc, edgeFunc);\n  }, {});\n};\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _dijkstra = require('./dijkstra');\n\nvar _dijkstra2 = _interopRequireDefault(_dijkstra);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-graphlib/lib/alg/dijkstra-all.js\n// module id = 447\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (g) {\n  return _lodash2.default.filter((0, _tarjan2.default)(g), function (cmpt) {\n    return cmpt.length > 1 || cmpt.length === 1 && g.hasEdge(cmpt[0], cmpt[0]);\n  });\n};\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _tarjan = require('./tarjan');\n\nvar _tarjan2 = _interopRequireDefault(_tarjan);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-graphlib/lib/alg/find-cycles.js\n// module id = 448\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (g, weightFn, edgeFn) {\n  weightFn = weightFn || DEFAULT_WEIGHT_FUNC;\n  edgeFn = edgeFn || function (v) {\n    return g.outEdges(v);\n  };\n  return runFloydWarshall(g, weightFn, edgeFn);\n};\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar DEFAULT_WEIGHT_FUNC = _lodash2.default.constant(1);\n\nfunction runFloydWarshall(g, weightFn, edgeFn) {\n  var results = {};\n  var nodes = g.nodes();\n\n  nodes.forEach(function (v) {\n    results[v] = {};\n    results[v][v] = { distance: 0 };\n    nodes.forEach(function (w) {\n      if (v !== w) {\n        results[v][w] = { distance: Number.POSITIVE_INFINITY };\n      }\n    });\n    edgeFn(v).forEach(function (edge) {\n      var w = edge.v === v ? edge.w : edge.v;\n      var d = weightFn(edge);\n      results[v][w] = { distance: d, predecessor: v };\n    });\n  });\n\n  nodes.forEach(function (k) {\n    var rowK = results[k];\n    nodes.forEach(function (i) {\n      var rowI = results[i];\n      nodes.forEach(function (j) {\n        var ik = rowI[k];\n        var kj = rowK[j];\n        var ij = rowI[j];\n        var altDistance = ik.distance + kj.distance;\n        if (altDistance < ij.distance) {\n          ij.distance = altDistance;\n          ij.predecessor = kj.predecessor;\n        }\n      });\n    });\n  });\n\n  return results;\n}\n\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-graphlib/lib/alg/floyd-warshall.js\n// module id = 449\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.topsort = exports.tarjan = exports.prim = exports.preorder = exports.postorder = exports.isAcyclic = exports.floydWarshall = exports.findCycles = exports.dijkstraAll = exports.dijkstra = exports.components = undefined;\n\nvar _components = require('./components');\n\nvar _components2 = _interopRequireDefault(_components);\n\nvar _dijkstra = require('./dijkstra');\n\nvar _dijkstra2 = _interopRequireDefault(_dijkstra);\n\nvar _dijkstraAll = require('./dijkstra-all');\n\nvar _dijkstraAll2 = _interopRequireDefault(_dijkstraAll);\n\nvar _findCycles = require('./find-cycles');\n\nvar _findCycles2 = _interopRequireDefault(_findCycles);\n\nvar _floydWarshall = require('./floyd-warshall');\n\nvar _floydWarshall2 = _interopRequireDefault(_floydWarshall);\n\nvar _isAcyclic = require('./is-acyclic');\n\nvar _isAcyclic2 = _interopRequireDefault(_isAcyclic);\n\nvar _postorder = require('./postorder');\n\nvar _postorder2 = _interopRequireDefault(_postorder);\n\nvar _preorder = require('./preorder');\n\nvar _preorder2 = _interopRequireDefault(_preorder);\n\nvar _prim = require('./prim');\n\nvar _prim2 = _interopRequireDefault(_prim);\n\nvar _tarjan = require('./tarjan');\n\nvar _tarjan2 = _interopRequireDefault(_tarjan);\n\nvar _topsort = require('./topsort');\n\nvar _topsort2 = _interopRequireDefault(_topsort);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.components = _components2.default;\nexports.dijkstra = _dijkstra2.default;\nexports.dijkstraAll = _dijkstraAll2.default;\nexports.findCycles = _findCycles2.default;\nexports.floydWarshall = _floydWarshall2.default;\nexports.isAcyclic = _isAcyclic2.default;\nexports.postorder = _postorder2.default;\nexports.preorder = _preorder2.default;\nexports.prim = _prim2.default;\nexports.tarjan = _tarjan2.default;\nexports.topsort = _topsort2.default;\nexports.default = {\n  components: _components2.default,\n  dijkstra: _dijkstra2.default,\n  dijkstraAll: _dijkstraAll2.default,\n  findCycles: _findCycles2.default,\n  floydWarshall: _floydWarshall2.default,\n  isAcyclic: _isAcyclic2.default,\n  postorder: _postorder2.default,\n  preorder: _preorder2.default,\n  prim: _prim2.default,\n  tarjan: _tarjan2.default,\n  topsort: _topsort2.default\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-graphlib/lib/alg/index.js\n// module id = 450\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (g) {\n  try {\n    (0, _topsort2.default)(g);\n  } catch (e) {\n    if (e instanceof _topsort2.default.CycleException) {\n      return false;\n    }\n    throw e;\n  }\n  return true;\n};\n\nvar _topsort = require('./topsort');\n\nvar _topsort2 = _interopRequireDefault(_topsort);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-graphlib/lib/alg/is-acyclic.js\n// module id = 451\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (g, vs) {\n  return (0, _dfs2.default)(g, vs, 'post');\n};\n\nvar _dfs = require('./dfs');\n\nvar _dfs2 = _interopRequireDefault(_dfs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-graphlib/lib/alg/postorder.js\n// module id = 452\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (g, vs) {\n  return (0, _dfs2.default)(g, vs, 'pre');\n};\n\nvar _dfs = require('./dfs');\n\nvar _dfs2 = _interopRequireDefault(_dfs);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-graphlib/lib/alg/preorder.js\n// module id = 453\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (g, weightFunc) {\n  var result = new _graph2.default();\n  var parents = {};\n  var pq = new _priorityQueue2.default();\n  var v;\n\n  function updateNeighbors(edge) {\n    var w = edge.v === v ? edge.w : edge.v;\n    var pri = pq.priority(w);\n    if (pri !== undefined) {\n      var edgeWeight = weightFunc(edge);\n      if (edgeWeight < pri) {\n        parents[w] = v;\n        pq.decrease(w, edgeWeight);\n      }\n    }\n  }\n\n  if (g.nodeCount() === 0) {\n    return result;\n  }\n\n  _lodash2.default.each(g.nodes(), function (v) {\n    pq.add(v, Number.POSITIVE_INFINITY);\n    result.setNode(v);\n  });\n\n  // Start from an arbitrary node\n  pq.decrease(g.nodes()[0], 0);\n\n  var init = false;\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n    if (_lodash2.default.has(parents, v)) {\n      result.setEdge(v, parents[v]);\n    } else if (init) {\n      throw new Error('Input graph is not connected: ' + g);\n    } else {\n      init = true;\n    }\n\n    g.nodeEdges(v).forEach(updateNeighbors);\n  }\n\n  return result;\n};\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _graph = require('../graph');\n\nvar _graph2 = _interopRequireDefault(_graph);\n\nvar _priorityQueue = require('../data/priority-queue');\n\nvar _priorityQueue2 = _interopRequireDefault(_priorityQueue);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-graphlib/lib/alg/prim.js\n// module id = 454\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.read = read;\nexports.write = write;\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _graph = require('./graph');\n\nvar _graph2 = _interopRequireDefault(_graph);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction writeNodes(g) {\n  return _lodash2.default.map(g.nodes(), function (v) {\n    var nodeValue = g.node(v);\n    var parent = g.parent(v);\n    var node = { v: v };\n    if (!_lodash2.default.isUndefined(nodeValue)) {\n      node.value = nodeValue;\n    }\n    if (!_lodash2.default.isUndefined(parent)) {\n      node.parent = parent;\n    }\n    return node;\n  });\n}\n\nfunction writeEdges(g) {\n  return _lodash2.default.map(g.edges(), function (e) {\n    var edgeValue = g.edge(e);\n    var edge = { v: e.v, w: e.w };\n    if (!_lodash2.default.isUndefined(e.name)) {\n      edge.name = e.name;\n    }\n    if (!_lodash2.default.isUndefined(edgeValue)) {\n      edge.value = edgeValue;\n    }\n    return edge;\n  });\n}\n\nfunction read(json) {\n  var g = new _graph2.default(json.options).setGraph(json.value);\n  _lodash2.default.each(json.nodes, function (entry) {\n    g.setNode(entry.v, entry.value);\n    if (entry.parent) {\n      g.setParent(entry.v, entry.parent);\n    }\n  });\n  _lodash2.default.each(json.edges, function (entry) {\n    g.setEdge({ v: entry.v, w: entry.w, name: entry.name }, entry.value);\n  });\n  return g;\n}\n\nfunction write(g) {\n  var json = {\n    options: {\n      directed: g.isDirected(),\n      multigraph: g.isMultigraph(),\n      compound: g.isCompound()\n    },\n    nodes: writeNodes(g),\n    edges: writeEdges(g)\n  };\n  if (!_lodash2.default.isUndefined(g.graph())) {\n    json.value = _lodash2.default.clone(g.graph());\n  }\n  return json;\n}\n\nexports.default = {\n  write: write,\n  read: read\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ciena-graphlib/lib/json.js\n// module id = 455\n// module chunks = 0","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/get-iterator.js\n// module id = 456\n// module chunks = 0","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof')\n  , TAG = require('./_wks')('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function(it, key){\n  try {\n    return it[key];\n  } catch(e){ /* empty */ }\n};\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_classof.js\n// module id = 457\n// module chunks = 0","var classof   = require('./_classof')\n  , ITERATOR  = require('./_wks')('iterator')\n  , Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/core.get-iterator-method.js\n// module id = 458\n// module chunks = 0","var anObject = require('./_an-object')\n  , get      = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function(it){\n  var iterFn = get(it);\n  if(typeof iterFn != 'function')throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/core.get-iterator.js\n// module id = 459\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".dagre-d3-output .content{-webkit-box-flex:1;-ms-flex:1;flex:1;overflow:auto}.dagre-d3-output .content .rendered{-webkit-box-flex:1;-ms-flex:1;flex:1;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;min-width:0;min-height:0}.dagre-d3-output .cluster rect{fill:#ddd}.dagre-d3-output .cluster .node-label{width:auto}.dagre-d3-output .cluster h3{margin:0;padding-top:3px;font-size:14px}.dagre-d3-output .cluster.level-0 rect{fill:#dadada}.dagre-d3-output .cluster.level-1 rect{fill:#bababa}.dagre-d3-output .cluster.level-2 rect{fill:#aaa}.dagre-d3-output text{font-weight:300;font-family:Helvetica Neue,Helvetica,Arial,sans-serf;font-size:14px}.dagre-d3-output .node rect{stroke:#999;fill:#fff;stroke-width:1.5px}.dagre-d3-output .edgePath path{stroke:#333;stroke-width:1.5px}.dagre-d3-output .edgePath.attack path{stroke:red}.dagre-d3-output .edgePath.attack marker{fill:red}.dagre-d3-output .edgePath.support path{stroke:green}.dagre-d3-output .edgePath.support marker{fill:green}.dagre-d3-output .edgePath.undercut path{stroke:purple}.dagre-d3-output .edgePath.undercut marker{fill:purple}.dagre-d3-output .node{cursor:pointer;display:block;position:static;margin:0;white-space:normal;width:200px;height:auto;text-align:center;color:#000}.dagre-d3-output .node .node-label{white-space:normal;padding:5px}.dagre-d3-output .node p{padding:0;margin:0;font-weight:400;font-size:12px;display:block}.dagre-d3-output .node h3{padding:0;margin:0;font-size:14px;font-weight:700;color:#264260;display:block}.dagre-d3-output .node.argument rect{fill:#6495ed;stroke:#000;stroke-width:2px}.dagre-d3-output .node.argument text{fill:#000}.dagre-d3-output .node.statement rect{fill:#fff;stroke:#6495ed;stroke-width:3px}.dagre-d3-output .node.statement text{fill:#000}.dagre-d3-output .node-label{text-align:center;width:150px}.dagre-d3-output .node-label h3{font-weight:700}.dagre-d3-output .node.statement.tag7 rect{stroke:#666}.dagre-d3-output .node.argument.tag7 rect{fill:#666}.dagre-d3-output .node.statement.tag6 rect{stroke:#a6761d}.dagre-d3-output .node.argument.tag6 rect{fill:#a6761d}.dagre-d3-output .node.statement.tag5 rect{stroke:#e6ab02}.dagre-d3-output .node.argument.tag5 rect{fill:#e6ab02}.dagre-d3-output .node.statement.tag4 rect{stroke:#66a61e}.dagre-d3-output .node.argument.tag4 rect{fill:#66a61e}.dagre-d3-output .node.statement.tag3 rect{stroke:#e7298a}.dagre-d3-output .node.argument.tag3 rect{fill:#e7298a}.dagre-d3-output .node.statement.tag2 rect{stroke:#7570b3}.dagre-d3-output .node.argument.tag2 rect{fill:#7570b3}.dagre-d3-output .node.statement.tag1 rect{stroke:#d95f02}.dagre-d3-output .node.argument.tag1 rect{fill:#d95f02}.dagre-d3-output .node.statement.tag0 rect{stroke:#1b9e77}.dagre-d3-output .node.argument.tag0 rect{fill:#1b9e77}\", \"\", {\"version\":3,\"sources\":[\"/Users/cvoigt/Documents/workspace/argdown/src/components/DagreD3Output.vue\"],\"names\":[],\"mappings\":\"AACA,0BACE,mBAAoB,AAChB,WAAY,AACR,OAAQ,AAChB,aAAe,CAChB,AACD,oCACI,mBAAoB,AAChB,WAAY,AACR,OAAQ,AAChB,oBAAqB,AACrB,oBAAqB,AACrB,aAAc,AACd,4BAA6B,AAC7B,6BAA8B,AAC1B,0BAA2B,AACvB,sBAAuB,AAE/B,YAAa,AACb,YAAc,CACjB,AACD,+BACE,SAAW,CACZ,AACD,sCACE,UAAY,CACb,AACD,6BACE,SAAU,AACV,gBAAiB,AACjB,cAAgB,CACjB,AACD,uCACE,YAAc,CACf,AACD,uCACE,YAAc,CACf,AACD,uCACE,SAAW,CACZ,AACD,sBACE,gBAAiB,AACjB,qDAA2D,AAC3D,cAAgB,CACjB,AACD,4BACE,YAAa,AACb,UAAW,AACX,kBAAoB,CACrB,AACD,gCACE,YAAa,AACb,kBAAoB,CACrB,AACD,uCACE,UAAY,CACb,AACD,yCACE,QAAU,CACX,AACD,wCACE,YAAc,CACf,AACD,0CACE,UAAY,CACb,AACD,yCACE,aAAe,CAChB,AACD,2CACE,WAAa,CACd,AACD,uBACE,eAAgB,AAChB,cAAe,AACf,gBAAiB,AACjB,SAAU,AACV,mBAAoB,AACpB,YAAa,AACb,YAAa,AACb,kBAAmB,AACnB,UAAY,CACb,AACD,mCACI,mBAAoB,AACpB,WAAa,CAChB,AACD,yBACI,UAAa,AACb,SAAU,AACV,gBAAoB,AACpB,eAAgB,AAChB,aAAe,CAClB,AACD,0BACI,UAAa,AACb,SAAU,AACV,eAAgB,AAChB,gBAAkB,AAClB,cAAe,AACf,aAAe,CAClB,AACD,qCACE,aAAqB,AACrB,YAAc,AACd,gBAAkB,CACnB,AACD,qCACE,SAAY,CACb,AACD,sCACE,UAAY,AACZ,eAAuB,AACvB,gBAAkB,CACnB,AACD,sCACE,SAAY,CACb,AACD,6BACE,kBAAmB,AACnB,WAAa,CACd,AACD,gCACI,eAAkB,CACrB,AACD,2CACE,WAAgB,CACjB,AACD,0CACE,SAAc,CACf,AACD,2CACE,cAAgB,CACjB,AACD,0CACE,YAAc,CACf,AACD,2CACE,cAAgB,CACjB,AACD,0CACE,YAAc,CACf,AACD,2CACE,cAAgB,CACjB,AACD,0CACE,YAAc,CACf,AACD,2CACE,cAAgB,CACjB,AACD,0CACE,YAAc,CACf,AACD,2CACE,cAAgB,CACjB,AACD,0CACE,YAAc,CACf,AACD,2CACE,cAAgB,CACjB,AACD,0CACE,YAAc,CACf,AACD,2CACE,cAAgB,CACjB,AACD,0CACE,YAAc,CACf\",\"file\":\"DagreD3Output.vue\",\"sourcesContent\":[\"\\n.dagre-d3-output .content {\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n  overflow: auto;\\n}\\n.dagre-d3-output .content .rendered {\\n    -webkit-box-flex: 1;\\n        -ms-flex: 1;\\n            flex: 1;\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: column;\\n            flex-direction: column;\\n    /* Firefox bug fix styles */\\n    min-width: 0;\\n    min-height: 0;\\n}\\n.dagre-d3-output .cluster rect {\\n  fill: #ddd;\\n}\\n.dagre-d3-output .cluster .node-label {\\n  width: auto;\\n}\\n.dagre-d3-output .cluster h3 {\\n  margin: 0;\\n  padding-top: 3px;\\n  font-size: 14px;\\n}\\n.dagre-d3-output .cluster.level-0 rect {\\n  fill: #dadada;\\n}\\n.dagre-d3-output .cluster.level-1 rect {\\n  fill: #bababa;\\n}\\n.dagre-d3-output .cluster.level-2 rect {\\n  fill: #aaa;\\n}\\n.dagre-d3-output text {\\n  font-weight: 300;\\n  font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serf;\\n  font-size: 14px;\\n}\\n.dagre-d3-output .node rect {\\n  stroke: #999;\\n  fill: #fff;\\n  stroke-width: 1.5px;\\n}\\n.dagre-d3-output .edgePath path {\\n  stroke: #333;\\n  stroke-width: 1.5px;\\n}\\n.dagre-d3-output .edgePath.attack path {\\n  stroke: red;\\n}\\n.dagre-d3-output .edgePath.attack marker {\\n  fill: red;\\n}\\n.dagre-d3-output .edgePath.support path {\\n  stroke: green;\\n}\\n.dagre-d3-output .edgePath.support marker {\\n  fill: green;\\n}\\n.dagre-d3-output .edgePath.undercut path {\\n  stroke: purple;\\n}\\n.dagre-d3-output .edgePath.undercut marker {\\n  fill: purple;\\n}\\n.dagre-d3-output .node {\\n  cursor: pointer;\\n  display: block;\\n  position: static;\\n  margin: 0;\\n  white-space: normal;\\n  width: 200px;\\n  height: auto;\\n  text-align: center;\\n  color: #000;\\n}\\n.dagre-d3-output .node .node-label {\\n    white-space: normal;\\n    padding: 5px;\\n}\\n.dagre-d3-output .node p {\\n    padding: 0px;\\n    margin: 0;\\n    font-weight: normal;\\n    font-size: 12px;\\n    display: block;\\n}\\n.dagre-d3-output .node h3 {\\n    padding: 0px;\\n    margin: 0;\\n    font-size: 14px;\\n    font-weight: bold;\\n    color: #264260;\\n    display: block;\\n}\\n.dagre-d3-output .node.argument rect {\\n  fill: cornflowerblue;\\n  stroke: black;\\n  stroke-width: 2px;\\n}\\n.dagre-d3-output .node.argument text {\\n  fill: black;\\n}\\n.dagre-d3-output .node.statement rect {\\n  fill: white;\\n  stroke: cornflowerblue;\\n  stroke-width: 3px;\\n}\\n.dagre-d3-output .node.statement text {\\n  fill: black;\\n}\\n.dagre-d3-output .node-label {\\n  text-align: center;\\n  width: 150px;\\n}\\n.dagre-d3-output .node-label h3 {\\n    font-weight: bold;\\n}\\n.dagre-d3-output .node.statement.tag7 rect {\\n  stroke: #666666;\\n}\\n.dagre-d3-output .node.argument.tag7 rect {\\n  fill: #666666;\\n}\\n.dagre-d3-output .node.statement.tag6 rect {\\n  stroke: #a6761d;\\n}\\n.dagre-d3-output .node.argument.tag6 rect {\\n  fill: #a6761d;\\n}\\n.dagre-d3-output .node.statement.tag5 rect {\\n  stroke: #e6ab02;\\n}\\n.dagre-d3-output .node.argument.tag5 rect {\\n  fill: #e6ab02;\\n}\\n.dagre-d3-output .node.statement.tag4 rect {\\n  stroke: #66a61e;\\n}\\n.dagre-d3-output .node.argument.tag4 rect {\\n  fill: #66a61e;\\n}\\n.dagre-d3-output .node.statement.tag3 rect {\\n  stroke: #e7298a;\\n}\\n.dagre-d3-output .node.argument.tag3 rect {\\n  fill: #e7298a;\\n}\\n.dagre-d3-output .node.statement.tag2 rect {\\n  stroke: #7570b3;\\n}\\n.dagre-d3-output .node.argument.tag2 rect {\\n  fill: #7570b3;\\n}\\n.dagre-d3-output .node.statement.tag1 rect {\\n  stroke: #d95f02;\\n}\\n.dagre-d3-output .node.argument.tag1 rect {\\n  fill: #d95f02;\\n}\\n.dagre-d3-output .node.statement.tag0 rect {\\n  stroke: #1b9e77;\\n}\\n.dagre-d3-output .node.argument.tag0 rect {\\n  fill: #1b9e77;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-42290744\",\"scoped\":false,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/DagreD3Output.vue\n// module id = 460\n// module chunks = 0","'use strict';\n\nvar util = require('./util');\n\nmodule.exports = {\n  'default': normal,\n  'normal': normal,\n  'vee': vee,\n  'undirected': undirected\n};\n\nfunction normal(parent, id, edge, type) {\n  var marker = parent.append('marker').attr('id', id).attr('viewBox', '0 0 10 10').attr('refX', 9).attr('refY', 5).attr('markerUnits', 'strokeWidth').attr('markerWidth', 8).attr('markerHeight', 6).attr('orient', 'auto');\n\n  var path = marker.append('path').attr('d', 'M 0 0 L 10 5 L 0 10 z').style('stroke-width', 1).style('stroke-dasharray', '1,0');\n  util.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n\nfunction vee(parent, id, edge, type) {\n  var marker = parent.append('marker').attr('id', id).attr('viewBox', '0 0 10 10').attr('refX', 9).attr('refY', 5).attr('markerUnits', 'strokeWidth').attr('markerWidth', 8).attr('markerHeight', 6).attr('orient', 'auto');\n\n  var path = marker.append('path').attr('d', 'M 0 0 L 10 5 L 0 10 L 4 5 z').style('stroke-width', 1).style('stroke-dasharray', '1,0');\n  util.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n\nfunction undirected(parent, id, edge, type) {\n  var marker = parent.append('marker').attr('id', id).attr('viewBox', '0 0 10 10').attr('refX', 9).attr('refY', 5).attr('markerUnits', 'strokeWidth').attr('markerWidth', 8).attr('markerHeight', 6).attr('orient', 'auto');\n\n  var path = marker.append('path').attr('d', 'M 0 5 L 10 5').style('stroke-width', 1).style('stroke-dasharray', '1,0');\n  util.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/arrows.js\n// module id = 462\n// module chunks = 0","'use strict';\n\nvar util = require('./util');\nvar addLabel = require('./label/add-label');\nvar d3 = require('./d3');\n\nmodule.exports = createClusters;\n\nfunction createClusters(selection, g) {\n  var clusters = g.nodes().filter(function (v) {\n    return util.isSubgraph(g, v);\n  });\n  var svgClusters = selection.selectAll('g.cluster').data(clusters, function (v) {\n    return v;\n  });\n\n  svgClusters.selectAll('*').remove();\n  svgClusters.enter().append('g').attr('class', 'cluster').attr('id', function (v) {\n    var node = g.node(v);\n    return node.id;\n  }).style('opacity', 0);\n\n  util.applyTransition(svgClusters, g).style('opacity', 1);\n\n  svgClusters.each(function (v) {\n    var node = g.node(v);\n    var thisGroup = d3.select(this);\n    d3.select(this).append('rect');\n    util.applyClass(thisGroup, node['class'], 'cluster');\n\n    var labelGroup = thisGroup.append('g').attr('class', 'label');\n    addLabel(labelGroup, node, node.clusterLabelPos);\n  });\n\n  svgClusters.selectAll('rect').each(function (c) {\n    var node = g.node(c);\n    var domCluster = d3.select(this);\n    util.applyStyle(domCluster, node.style);\n  });\n\n  util.applyTransition(svgClusters.exit(), g).style('opacity', 0).remove();\n\n  return svgClusters;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/create-clusters.js\n// module id = 463\n// module chunks = 0","'use strict';\n\nvar _ = require('./lodash');\nvar addLabel = require('./label/add-label');\nvar util = require('./util');\nvar d3 = require('./d3');\n\nmodule.exports = createEdgeLabels;\n\nfunction createEdgeLabels(selection, g) {\n  var svgEdgeLabels = selection.selectAll('g.edgeLabel').data(g.edges(), function (e) {\n    return util.edgeToId(e);\n  }).classed('update', true);\n\n  svgEdgeLabels.selectAll('*').remove();\n  svgEdgeLabels.enter().append('g').classed('edgeLabel', true).style('opacity', 0);\n  svgEdgeLabels.each(function (e) {\n    var edge = g.edge(e);\n    var label = addLabel(d3.select(this), g.edge(e), 0, 0).classed('label', true);\n    var bbox = label.node().getBBox();\n\n    if (edge.labelId) {\n      label.attr('id', edge.labelId);\n    }\n    if (!_.has(edge, 'width')) {\n      edge.width = bbox.width;\n    }\n    if (!_.has(edge, 'height')) {\n      edge.height = bbox.height;\n    }\n  });\n\n  util.applyTransition(svgEdgeLabels.exit(), g).style('opacity', 0).remove();\n\n  return svgEdgeLabels;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/create-edge-labels.js\n// module id = 464\n// module chunks = 0","'use strict';\n\nvar _ = require('./lodash');\nvar intersectNode = require('./intersect/intersect-node');\nvar util = require('./util');\nvar d3 = require('./d3');\nmodule.exports = createEdgePaths;\n\nfunction createEdgePaths(selection, g, arrows) {\n  var svgPaths = selection.selectAll('g.edgePath').data(g.edges(), function (e) {\n    return util.edgeToId(e);\n  }).classed('update', true);\n\n  enter(svgPaths, g);\n  exit(svgPaths, g);\n\n  util.applyTransition(svgPaths, g).style('opacity', 1\n\n  // Save DOM element in the path group, and set ID and class\n  );svgPaths.each(function (e) {\n    var domEdge = d3.select(this);\n    var edge = g.edge(e);\n    edge.elem = this;\n\n    if (edge.id) {\n      domEdge.attr('id', edge.id);\n    }\n\n    util.applyClass(domEdge, edge['class'], (domEdge.classed('update') ? 'update ' : '') + 'edgePath');\n  });\n\n  svgPaths.selectAll('path.path').each(function (e) {\n    var edge = g.edge(e);\n    edge.arrowheadId = _.uniqueId('arrowhead');\n\n    var domEdge = d3.select(this).attr('marker-end', function () {\n      return 'url(' + makeFragmentRef(location.href, edge.arrowheadId) + ')';\n    }).style('fill', 'none');\n\n    util.applyTransition(domEdge, g).attr('d', function (e) {\n      return calcPoints(g, e);\n    });\n\n    util.applyStyle(domEdge, edge.style);\n  });\n\n  svgPaths.selectAll('defs *').remove();\n  svgPaths.selectAll('defs').each(function (e) {\n    var edge = g.edge(e);\n    var arrowhead = arrows[edge.arrowhead];\n    arrowhead(d3.select(this), edge.arrowheadId, edge, 'arrowhead');\n  });\n\n  return svgPaths;\n}\n\nfunction makeFragmentRef(url, fragmentId) {\n  var baseUrl = url.split('#')[0];\n  return baseUrl + '#' + fragmentId;\n}\n\nfunction calcPoints(g, e) {\n  var edge = g.edge(e);\n  var tail = g.node(e.v);\n  var head = g.node(e.w);\n  var points = edge.points.slice(1, edge.points.length - 1);\n  points.unshift(intersectNode(tail, points[0]));\n  points.push(intersectNode(head, points[points.length - 1]));\n\n  return createLine(edge, points);\n}\n\nfunction createLine(edge, points) {\n  var line = d3.svg.line().x(function (d) {\n    return d.x;\n  }).y(function (d) {\n    return d.y;\n  });\n\n  if (_.has(edge, 'lineInterpolate')) {\n    line.interpolate(edge.lineInterpolate);\n  }\n\n  if (_.has(edge, 'lineTension')) {\n    line.tension(Number(edge.lineTension));\n  }\n\n  return line(points);\n}\n\nfunction getCoords(elem) {\n  var bbox = elem.getBBox();\n  var matrix = elem.ownerSVGElement.getScreenCTM().inverse().multiply(elem.getScreenCTM()).translate(bbox.width / 2, bbox.height / 2);\n  return { x: matrix.e, y: matrix.f };\n}\n\nfunction enter(svgPaths, g) {\n  var svgPathsEnter = svgPaths.enter().append('g').attr('class', 'edgePath').style('opacity', 0);\n  svgPathsEnter.append('path').attr('class', 'path').attr('d', function (e) {\n    var edge = g.edge(e);\n    var sourceElem = g.node(e.v).elem;\n    var points = _.range(edge.points.length).map(function () {\n      return getCoords(sourceElem);\n    });\n    return createLine(edge, points);\n  });\n  svgPathsEnter.append('defs');\n}\n\nfunction exit(svgPaths, g) {\n  var svgPathExit = svgPaths.exit();\n  util.applyTransition(svgPathExit, g).style('opacity', 0).remove();\n\n  util.applyTransition(svgPathExit.select('path.path'), g).attr('d', function (e) {\n    var source = g.node(e.v);\n\n    if (source) {\n      var points = _.range(this.getTotalLength()).map(function () {\n        return source;\n      });\n      return createLine({}, points);\n    } else {\n      return d3.select(this).attr('d');\n    }\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/create-edge-paths.js\n// module id = 465\n// module chunks = 0","'use strict';\n\nvar _ = require('./lodash');\nvar addLabel = require('./label/add-label');\nvar util = require('./util');\nvar d3 = require('./d3');\n\nmodule.exports = createNodes;\n\nfunction createNodes(selection, g, shapes) {\n  var simpleNodes = g.nodes().filter(function (v) {\n    return !util.isSubgraph(g, v);\n  });\n  var svgNodes = selection.selectAll('g.node').data(simpleNodes, function (v) {\n    return v;\n  }).classed('update', true);\n\n  svgNodes.selectAll('*').remove();\n  svgNodes.enter().append('g').attr('class', 'node').style('opacity', 0);\n  svgNodes.each(function (v) {\n    var node = g.node(v);\n    var thisGroup = d3.select(this);\n    var labelGroup = thisGroup.append('g').attr('class', 'label');\n    var labelDom = addLabel(labelGroup, node);\n    var shape = shapes[node.shape];\n    var bbox = _.pick(labelDom.node().getBBox(), 'width', 'height');\n\n    node.elem = this;\n\n    if (node.id) {\n      thisGroup.attr('id', node.id);\n    }\n    if (node.labelId) {\n      labelGroup.attr('id', node.labelId);\n    }\n    util.applyClass(thisGroup, node['class'], (thisGroup.classed('update') ? 'update ' : '') + 'node');\n\n    if (_.has(node, 'width')) {\n      bbox.width = node.width;\n    }\n    if (_.has(node, 'height')) {\n      bbox.height = node.height;\n    }\n\n    bbox.width += node.paddingLeft + node.paddingRight;\n    bbox.height += node.paddingTop + node.paddingBottom;\n    labelGroup.attr('transform', 'translate(' + (node.paddingLeft - node.paddingRight) / 2 + ',' + (node.paddingTop - node.paddingBottom) / 2 + ')');\n\n    var shapeSvg = shape(d3.select(this), bbox, node);\n    util.applyStyle(shapeSvg, node.style);\n\n    var shapeBBox = shapeSvg.node().getBBox();\n    node.width = shapeBBox.width;\n    node.height = shapeBBox.height;\n  });\n\n  util.applyTransition(svgNodes.exit(), g).style('opacity', 0).remove();\n\n  return svgNodes;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/create-nodes.js\n// module id = 466\n// module chunks = 0","'use strict';\n\nmodule.exports = require('ciena-graphlib') || window.graphlib;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/graphlib.js\n// module id = 467\n// module chunks = 0","'use strict';\n\n/**\n * @license\n * Copyright (c) 2012-2013 Chris Pettitt\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the 'Software'), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nmodule.exports = {\n  graphlib: require('./graphlib'),\n  dagre: require('./dagre'),\n  intersect: require('./intersect'),\n  render: require('./render'),\n  util: require('./util'),\n  version: require('./version')\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/index.js\n// module id = 468\n// module chunks = 0","'use strict';\n\nmodule.exports = {\n  node: require('./intersect-node'),\n  circle: require('./intersect-circle'),\n  ellipse: require('./intersect-ellipse'),\n  polygon: require('./intersect-polygon'),\n  rect: require('./intersect-rect')\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/intersect/index.js\n// module id = 469\n// module chunks = 0","\"use strict\";\n\nmodule.exports = intersectLine;\n\n/*\n * Returns the point at which two lines, p and q, intersect or returns\n * undefined if they do not intersect.\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1 = void 0,\n      a2 = void 0,\n      b1 = void 0,\n      b2 = void 0,\n      c1 = void 0,\n      c2 = void 0;\n  var r1 = void 0,\n      r2 = void 0,\n      r3 = void 0,\n      r4 = void 0;\n  var denom = void 0,\n      offset = void 0,\n      num = void 0;\n  var x = void 0,\n      y = void 0;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = p2.x * p1.y - p1.x * p2.y;\n\n  // Compute r3 and r4.\n  r3 = a1 * q1.x + b1 * q1.y + c1;\n  r4 = a1 * q2.x + b1 * q2.y + c1;\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if (r3 !== 0 && r4 !== 0 && sameSign(r3, r4)) {\n    return; /* DONT_INTERSECT */\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = q2.x * q1.y - q1.x * q2.y;\n\n  // Compute r1 and r2\n  r1 = a2 * p1.x + b2 * p1.y + c2;\n  r2 = a2 * p2.x + b2 * p2.y + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if (r1 !== 0 && r2 !== 0 && sameSign(r1, r2)) {\n    return; /* DONT_INTERSECT */\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = a1 * b2 - a2 * b1;\n  if (denom === 0) {\n    return; /* COLLINEAR */\n  }\n\n  offset = Math.abs(denom / 2\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  );num = b1 * c2 - b2 * c1;\n  x = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  num = a2 * c1 - a1 * c2;\n  y = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  return { x: x, y: y };\n}\n\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/intersect/intersect-line.js\n// module id = 470\n// module chunks = 0","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar util = require('../util');\n\nmodule.exports = addHtmlLabel;\n\nfunction addHtmlLabel(root, node) {\n  var fo = root.append('foreignObject').attr('width', '100000');\n\n  var div = fo.append('xhtml:div');\n  div.attr('xmlns', 'http://www.w3.org/1999/xhtml');\n\n  var label = node.label;\n  switch (typeof label === 'undefined' ? 'undefined' : _typeof(label)) {\n    case 'function':\n      div.insert(label);\n      break;\n    case 'object':\n      // Currently we assume this is a DOM object.\n      div.insert(function () {\n        return label;\n      });\n      break;\n    default:\n      div.html(label);\n  }\n\n  util.applyStyle(div, node.labelStyle);\n  div.style('display', 'inline-block'\n  // Fix for firefox\n  );div.style('white-space', 'nowrap');\n\n  var client = div[0][0].getBoundingClientRect();\n  fo.attr('width', client.width).attr('height', client.height);\n\n  return fo;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/label/add-html-label.js\n// module id = 471\n// module chunks = 0","'use strict';\n\nvar util = require('../util');\n\nmodule.exports = addSVGLabel;\n\nfunction addSVGLabel(root, node) {\n  var domNode = root;\n\n  domNode.node().appendChild(node.label);\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/label/add-svg-label.js\n// module id = 472\n// module chunks = 0","'use strict';\n\nvar util = require('../util');\n\nmodule.exports = addTextLabel;\n\n/*\n * Attaches a text label to the specified root. Handles escape sequences.\n */\nfunction addTextLabel(root, node) {\n  var domNode = root.append('text');\n\n  var lines = processEscapeSequences(node.label).split('\\n');\n  for (var i = 0; i < lines.length; i++) {\n    domNode.append('tspan').attr('xml:space', 'preserve').attr('dy', '1em').attr('x', '1').text(lines[i]);\n  }\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\nfunction processEscapeSequences(text) {\n  var newText = '';\n  var escaped = false;\n  var ch = void 0;\n  for (var i = 0; i < text.length; ++i) {\n    ch = text[i];\n    if (escaped) {\n      switch (ch) {\n        case 'n':\n          newText += '\\n';\n          break;\n        default:\n          newText += ch;\n      }\n      escaped = false;\n    } else if (ch === '\\\\') {\n      escaped = true;\n    } else {\n      newText += ch;\n    }\n  }\n  return newText;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/label/add-text-label.js\n// module id = 473\n// module chunks = 0","'use strict';\n\nvar util = require('./util');\nvar d3 = require('./d3');\n\nmodule.exports = positionClusters;\n\nfunction positionClusters(selection, g) {\n  var created = selection.filter(function () {\n    return !d3.select(this).classed('update');\n  });\n\n  function translate(v) {\n    var node = g.node(v);\n    return 'translate(' + node.x + ',' + node.y + ')';\n  }\n\n  created.attr('transform', translate);\n\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n\n  util.applyTransition(created.selectAll('rect'), g).attr('width', function (v) {\n    return g.node(v).width;\n  }).attr('height', function (v) {\n    return g.node(v).height;\n  }).attr('x', function (v) {\n    var node = g.node(v);\n    return -node.width / 2;\n  }).attr('y', function (v) {\n    var node = g.node(v);\n    return -node.height / 2;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/position-clusters.js\n// module id = 474\n// module chunks = 0","'use strict';\n\nvar util = require('./util');\nvar d3 = require('./d3');\nvar _ = require('./lodash');\n\nmodule.exports = positionEdgeLabels;\n\nfunction positionEdgeLabels(selection, g) {\n  var created = selection.filter(function () {\n    return !d3.select(this).classed('update');\n  });\n\n  function translate(e) {\n    var edge = g.edge(e);\n    return _.has(edge, 'x') ? 'translate(' + edge.x + ',' + edge.y + ')' : '';\n  }\n\n  created.attr('transform', translate);\n\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/position-edge-labels.js\n// module id = 475\n// module chunks = 0","'use strict';\n\nvar util = require('./util');\nvar d3 = require('./d3');\n\nmodule.exports = positionNodes;\n\nfunction positionNodes(selection, g) {\n  var created = selection.filter(function () {\n    return !d3.select(this).classed('update');\n  });\n\n  function translate(v) {\n    var node = g.node(v);\n    return 'translate(' + node.x + ',' + node.y + ')';\n  }\n\n  created.attr('transform', translate);\n\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/position-nodes.js\n// module id = 476\n// module chunks = 0","'use strict';\n\nvar _ = require('./lodash');\nvar layout = require('./dagre').layout;\n\nmodule.exports = render;\n\n// This design is based on http://bost.ocks.org/mike/chart/.\nfunction render() {\n  var createNodes = require('./create-nodes');\n  var createClusters = require('./create-clusters');\n  var createEdgeLabels = require('./create-edge-labels');\n  var createEdgePaths = require('./create-edge-paths');\n  var positionNodes = require('./position-nodes');\n  var positionEdgeLabels = require('./position-edge-labels');\n  var positionClusters = require('./position-clusters');\n  var shapes = require('./shapes');\n  var arrows = require('./arrows');\n\n  var fn = function fn(svg, g) {\n    preProcessGraph(g);\n\n    var outputGroup = createOrSelectGroup(svg, 'output');\n    var clustersGroup = createOrSelectGroup(outputGroup, 'clusters');\n    var edgePathsGroup = createOrSelectGroup(outputGroup, 'edgePaths');\n    var edgeLabels = createEdgeLabels(createOrSelectGroup(outputGroup, 'edgeLabels'), g);\n    var nodes = createNodes(createOrSelectGroup(outputGroup, 'nodes'), g, shapes);\n\n    layout(g);\n\n    positionNodes(nodes, g);\n    positionEdgeLabels(edgeLabels, g);\n    createEdgePaths(edgePathsGroup, g, arrows);\n\n    var clusters = createClusters(clustersGroup, g);\n    positionClusters(clusters, g);\n\n    postProcessGraph(g);\n  };\n\n  fn.createNodes = function (value) {\n    if (!arguments.length) {\n      return createNodes;\n    }\n    createNodes = value;\n    return fn;\n  };\n\n  fn.createClusters = function (value) {\n    if (!arguments.length) {\n      return createClusters;\n    }\n    createClusters = value;\n    return fn;\n  };\n\n  fn.createEdgeLabels = function (value) {\n    if (!arguments.length) {\n      return createEdgeLabels;\n    }\n    createEdgeLabels = value;\n    return fn;\n  };\n\n  fn.createEdgePaths = function (value) {\n    if (!arguments.length) {\n      return createEdgePaths;\n    }\n    createEdgePaths = value;\n    return fn;\n  };\n\n  fn.shapes = function (value) {\n    if (!arguments.length) {\n      return shapes;\n    }\n    shapes = value;\n    return fn;\n  };\n\n  fn.arrows = function (value) {\n    if (!arguments.length) {\n      return arrows;\n    }\n    arrows = value;\n    return fn;\n  };\n\n  return fn;\n}\n\nvar NODE_DEFAULT_ATTRS = {\n  paddingLeft: 10,\n  paddingRight: 10,\n  paddingTop: 10,\n  paddingBottom: 10,\n  rx: 0,\n  ry: 0,\n  shape: 'rect'\n};\n\nvar EDGE_DEFAULT_ATTRS = {\n  arrowhead: 'normal',\n  lineInterpolate: 'linear'\n};\n\nfunction preProcessGraph(g) {\n  g.nodes().forEach(function (v) {\n    var node = g.node(v);\n    if (!_.has(node, 'label') && !g.children(v).length) {\n      node.label = v;\n    }\n\n    if (_.has(node, 'paddingX')) {\n      _.defaults(node, {\n        paddingLeft: node.paddingX,\n        paddingRight: node.paddingX\n      });\n    }\n\n    if (_.has(node, 'paddingY')) {\n      _.defaults(node, {\n        paddingTop: node.paddingY,\n        paddingBottom: node.paddingY\n      });\n    }\n\n    if (_.has(node, 'padding')) {\n      _.defaults(node, {\n        paddingLeft: node.padding,\n        paddingRight: node.padding,\n        paddingTop: node.padding,\n        paddingBottom: node.padding\n      });\n    }\n\n    _.defaults(node, NODE_DEFAULT_ATTRS);\n\n    _.each(['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom'], function (k) {\n      node[k] = Number(node[k]);\n    }\n\n    // Save dimensions for restore during post-processing\n    );if (_.has(node, 'width')) {\n      node._prevWidth = node.width;\n    }\n    if (_.has(node, 'height')) {\n      node._prevHeight = node.height;\n    }\n  });\n\n  g.edges().forEach(function (e) {\n    var edge = g.edge(e);\n    if (!_.has(edge, 'label')) {\n      edge.label = '';\n    }\n    _.defaults(edge, EDGE_DEFAULT_ATTRS);\n  });\n}\n\nfunction postProcessGraph(g) {\n  _.each(g.nodes(), function (v) {\n    var node = g.node(v\n\n    // Restore original dimensions\n    );if (_.has(node, '_prevWidth')) {\n      node.width = node._prevWidth;\n    } else {\n      delete node.width;\n    }\n\n    if (_.has(node, '_prevHeight')) {\n      node.height = node._prevHeight;\n    } else {\n      delete node.height;\n    }\n\n    delete node._prevWidth;\n    delete node._prevHeight;\n  });\n}\n\nfunction createOrSelectGroup(root, name) {\n  var selection = root.select('g.' + name);\n  if (selection.empty()) {\n    selection = root.append('g').attr('class', name);\n  }\n  return selection;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/render.js\n// module id = 477\n// module chunks = 0","'use strict';\n\nvar intersectRect = require('./intersect/intersect-rect');\nvar intersectEllipse = require('./intersect/intersect-ellipse');\nvar intersectCircle = require('./intersect/intersect-circle');\nvar intersectPolygon = require('./intersect/intersect-polygon');\n\nmodule.exports = {\n  rect: rect,\n  ellipse: ellipse,\n  circle: circle,\n  diamond: diamond\n};\n\nfunction rect(parent, bbox, node) {\n  var shapeSvg = parent.insert('rect', ':first-child').attr('rx', node.rx).attr('ry', node.ry).attr('x', -bbox.width / 2).attr('y', -bbox.height / 2).attr('width', bbox.width).attr('height', bbox.height);\n\n  node.intersect = function (point) {\n    return intersectRect(node, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction ellipse(parent, bbox, node) {\n  var rx = bbox.width / 2;\n  var ry = bbox.height / 2;\n  var shapeSvg = parent.insert('ellipse', ':first-child').attr('x', -bbox.width / 2).attr('y', -bbox.height / 2).attr('rx', rx).attr('ry', ry);\n\n  node.intersect = function (point) {\n    return intersectEllipse(node, rx, ry, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction circle(parent, bbox, node) {\n  var r = Math.max(bbox.width, bbox.height) / 2;\n  var shapeSvg = parent.insert('circle', ':first-child').attr('x', -bbox.width / 2).attr('y', -bbox.height / 2).attr('r', r);\n\n  node.intersect = function (point) {\n    return intersectCircle(node, r, point);\n  };\n\n  return shapeSvg;\n}\n\n// Circumscribe an ellipse for the bounding box with a diamond shape. I derived\n// the function to calculate the diamond shape from:\n// http://mathforum.org/kb/message.jspa?messageID=3750236\nfunction diamond(parent, bbox, node) {\n  var w = bbox.width * Math.SQRT2 / 2;\n  var h = bbox.height * Math.SQRT2 / 2;\n  var points = [{ x: 0, y: -h }, { x: -w, y: 0 }, { x: 0, y: h }, { x: w, y: 0 }];\n  var shapeSvg = parent.insert('polygon', ':first-child').attr('points', points.map(function (p) {\n    return p.x + ',' + p.y;\n  }).join(' '));\n\n  node.intersect = function (p) {\n    return intersectPolygon(node, points, p);\n  };\n\n  return shapeSvg;\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/shapes.js\n// module id = 478\n// module chunks = 0","'use strict';\n\nmodule.exports = '0.5.0';\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dagre-d3/lib/version.js\n// module id = 479\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"id\\\":\\\"data-v-42290744\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/sass-loader/lib/loader.js?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./DagreD3Output.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"5415d007\", content, true);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"id\":\"data-v-42290744\",\"scoped\":false,\"hasInlineConfig\":false}!./~/sass-loader/lib/loader.js?{\"sourceMap\":true}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/DagreD3Output.vue\n// module id = 480\n// module chunks = 0","module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    ref: \"output\",\n    staticClass: \"dagre-d3-output map-output output\"\n  }, [_c('div', {\n    staticClass: \"content\"\n  }, [_c('div', {\n    staticClass: \"rendered\"\n  }, [_c('svg', {\n    ref: \"svg\",\n    attrs: {\n      \"width\": \"100%\",\n      \"height\": \"100%\"\n    }\n  }, [_c('g', {\n    staticStyle: {\n      \"transform\": \"translate(0, 10px)\"\n    }\n  })])])])])\n},staticRenderFns: []}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-42290744\"}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/DagreD3Output.vue\n// module id = 484\n// module chunks = 0"],"sourceRoot":""}