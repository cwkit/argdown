{"version":3,"sources":["webpack:///static/js/1.99b0f03b82adf416905f.js","webpack:///./src/components/VizJsOutput.vue","webpack:///./~/d3/d3.js?8d8f","webpack:///src/components/VizJsOutput.vue","webpack:///./src/components/VizJsOutput.vue?1371","webpack:///./src/components/VizJsOutput.vue?6b90","webpack:///./src/components/VizJsOutput.vue?f9bb"],"names":["webpackJsonp","136","module","__webpack_exports__","__webpack_require__","injectStyle","context","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_VizJsOutput_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_5a36472c_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_VizJsOutput_vue__","__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__","__vue_styles__","Component","i","417","exports","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_documentElement","node","ownerDocument","document","documentElement","d3_window","defaultView","d3_ascending","a","b","NaN","d3_number","x","d3_numeric","isNaN","d3_bisector","compare","left","lo","hi","arguments","length","mid","right","d3_transposeLength","d","d3_range_integerScale","k","d3_class","ctor","properties","key","prototype","enumerable","d3_Map","this","_","create","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","slice","d3_map_has","d3_map_remove","d3_map_keys","keys","push","d3_map_size","size","d3_map_empty","d3_Set","d3_identity","d3_rebind","target","source","method","apply","d3_vendorSymbol","object","name","charAt","toUpperCase","n","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","event","l","z","listeners","on","listenerByName","listener","get","indexOf","concat","remove","set","d3_eventPreventDefault","d3","preventDefault","d3_eventSource","s","e","sourceEvent","d3_eventDispatch","of","thiz","argumentz","e1","e0","type","d3_selection","groups","d3_subclass","d3_selectionPrototype","d3_selection_selector","selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","removeAttribute","attrNullNS","removeAttributeNS","space","local","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","trim","replace","d3_selection_classedRe","RegExp","requote","d3_selection_classes","split","d3_selection_classed","classedConstant","classedFunction","map","d3_selection_classedName","re","c","classList","add","getAttribute","lastIndex","test","d3_selection_style","priority","styleNull","style","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","namespace","namespaceURI","d3_nsXhtml","createElement","createElementNS","createNS","d3_selectionRemove","parent","parentNode","removeChild","d3_selection_dataNode","data","__data__","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","callback","j","m","group","d3_selection_enter","selection","d3_selection_enterPrototype","d3_selection_enterInsertBefore","enter","i0","j0","update","d3_selection_on","capture","onRemove","removeEventListener","$","onAdd","wrap","d3_array","call","addEventListener","removeAll","match","d3_selection_onListener","filter","d3_selection_onFilters","d3_selection_onFilter","o","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","w","select","d3_event_dragSelect","suppressClick","off","setTimeout","d3_mousePoint","container","changedTouches","svg","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","window","scrollX","scrollY","append","position","top","margin","padding","border","ctm","getScreenCTM","f","pageX","y","pageY","clientX","clientY","matrixTransform","inverse","rect","getBoundingClientRect","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","Math","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","sin","d3_color","d3_hsl","h","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","v","m1","m2","vv","round","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","rgb","r","g","d3_hcl_lab","cos","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","sqrt","d3_xyz_lab","pow","d3_rgbNumber","d3_rgbString","d3_rgb_hex","max","toString","min","format","hsl","color","exec","toLowerCase","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","response","url","mimeType","d3_xhr","respond","result","status","request","d3_xhrHasResponse","xhr","error","load","headers","XMLHttpRequest","responseType","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","header","forEach","send","open","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer","delay","then","Date","now","time","timer","t","d3_timer_queueTail","d3_timer_queueHead","d3_timer_interval","d3_timer_timeout","clearTimeout","d3_timer_frame","d3_timer_step","d3_timer_mark","d3_timer_sweep","isFinite","t0","t1","Infinity","d3_format_precision","p","ceil","log","LN10","d3_formatPrefix","abs","scale","symbol","d3_locale_numberFormat","locale","locale_decimal","decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","width","substring","reverse","join","specifier","d3_format_re","fill","align","sign","zfill","comma","precision","prefix","suffix","integer","exponent","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","unit","formatPrefix","before","after","lastIndexOf","Array","d3_date_utc","UTC","d3_time_interval","step","number","date","d0","d1","offset","d3_date","range","dt","times","range_utc","utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","string","charCodeAt","d3_time_formatPads","d3_time_formats","parse","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","getDay","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","multi","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","getMonth","B","d3_time_formatPad","getDate","getHours","I","d3_time","dayOfYear","getMilliseconds","getMinutes","getSeconds","sundayOfYear","mondayOfYear","getFullYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","names","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","hasOwnProperty","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","u","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","y0","z0","x0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cx","cy","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","interpolate","subject","clip","segment","p0","p1","d3_geo_clipPolygonIntersection","sort","d3_geo_clipPolygonLinkCircular","entry","points","start","current","isSubject","array","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotate","pointLine","line","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","pop","polygon","polygonStarted","shift","d3_geo_clipSegmentLength1","rotatedClipStart","merge","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","lines","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","from","to","direction","meridian","parallel","meridianNormal","polarAngle","winding","reset","point0","antimeridian","τ","arc","intersection","φarc","d3_geo_clipCircle","radius","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","t2","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","x1","y1","ax","ay","bx","by","dx","dy","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","first","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","stream","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","x2","y2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","center","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","output","translate","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","angle","PI","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","ua","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","circle","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","next","N","disappearing","lArc","unshift","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","newArc","insert","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","extent","cell","iHalfEdge","halfEdges","nHalfEdges","end","cells","d3_geom_voronoiCells","iCell","prepare","splice","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","fx","fy","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","sx","sy","children","d3_geom_quadtreeFind","root","closestPoint","minDistance2","find","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","index","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","r1","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransformPop","d3_interpolateTranslate","ta","tb","d3_interpolateRotate","ra","rb","d3_interpolateSkew","wa","wb","d3_interpolateScale","ka","kb","d3_interpolateTransform","transform","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","random","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","reduce","d3_layout_stackSum","d3_layout_histogramBinSturges","values","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","xMin","xMax","yMin","yMax","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","domain","stop","d3_scaleRange","rangeExtent","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","linear","input","Number","rangeRound","ticks","d3_scale_linearTicks","tickFormat","d3_scale_linearTickFormat","d3_scale_linearNice","copy","d3_scale_linearRebind","d3_scale_linearTickRange","span","err","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","steps","rangeBand","xi","has","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","identity","d3_zero","d3_svg_arcInnerRadius","innerRadius","d3_svg_arcOuterRadius","outerRadius","d3_svg_arcStartAngle","startAngle","d3_svg_arcEndAngle","endAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","defined","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","path","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","activeId","active","count","interrupt","d3_transition","id","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","textContent","d3_transitionNamespace","d3_transitionNode","inherit","schedule","elapsed","transition","cancelId","cancel","tick","tweens","ease","duration","d3_svg_axisX","attr","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","interval","skip","skipped","d3_json","JSON","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","version","d3_arraySlice","list","childNodes","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","transpose","matrix","row","zip","entries","arrays","merged","Error","isArray","empty","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","keyMap","order","behavior","d3_requote_re","__proto__","property","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","selectAll","d3_nsPrefix","xhtml","xlink","xml","xmlns","getAttributeNS","each","classed","contains","getComputedStyle","getPropertyValue","text","html","innerHTML","appendChild","insertBefore","bind","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","exit","datum","nextSibling","args","upgroup","mouseenter","mouseleave","mouse","navigator","userAgent","touch","touches","drag","mousedown","touchstart","dragstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","that","correspondingElement","origin","τε","SQRT2","interpolateZoom","ux0","uy0","w0","ux1","uy1","w1","coshr0","zoom","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","scaleExtent","translateTo","zoomTo","__chart__","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","scale0","locations0","started","touchmove","touchend","targets","changed","touchtime","distance0","l0","l1","distance1","scale1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","d3_hslPrototype","brighter","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","typedResponse","formatRow","formatValue","reFormat","delimiterCode","parseRows","Function","stringify","token","EOF","eol","EOL","rows","formatRows","fieldSet","fields","field","csv","tsv","flush","d3_formatPrefixes","String","fromCharCode","toPrecision","toExponential","toFixed","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTime","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","centroid","conicEqualArea","raw","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","xs","ys","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","in","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","layout","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","force","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","candidates","stack","childs","revalue","partition","pie","arcs","d3_layout_pieSortByValue","series","orders","offsets","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","bottom","tops","bottoms","default","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","mode","worst","stickify","rmax","rmin","ratio","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","category10","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","threshold","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","rc1","rc0","oc","kc","lc","t30","t12","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTween","attrTweenNS","styleString","styleTween","inheritId","id0","id1","axis","tickTransform","tickValues","tickArguments_","tickFormat_","tickEnter","tickExit","tickUpdate","tickSpacing","innerTickSize","tickPadding","pathUpdate","lineEnter","lineUpdate","textEnter","textUpdate","orient","outerTickSize","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSize","tickSubdivide","brush","brushstart","background","resize","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","redraw","xExtent","yExtent","keydown","keyCode","dragging","keyup","brushmove","altKey","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","ex","ey","d3_svg_brushResizes","extent1","extent0","yi","clear","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","json","responseXML","undefined","423","__WEBPACK_IMPORTED_MODULE_0_vue__","__WEBPACK_IMPORTED_MODULE_1_viz_js__","__WEBPACK_IMPORTED_MODULE_2_d3__","addZoomBehavior","svgContainer","$refs","console","nextTick","svgGroup","svgSize","groupSize","getBBox","height","mounted","computed","$store","getters","dot","474","sources","mappings","file","sourcesContent","sourceRoot","494","content","locals","496","render","staticRenderFns","_vm","_h","$createElement","_c","_self","staticClass","ref","domProps","_s"],"mappings":"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","file":"static/js/1.99b0f03b82adf416905f.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 136:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_VizJsOutput_vue__ = __webpack_require__(423);\n/* empty harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_5a36472c_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_VizJsOutput_vue__ = __webpack_require__(496);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__ = __webpack_require__(3);\nfunction injectStyle (context) {\n  __webpack_require__(494)\n}\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-5a36472c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\n\nvar Component = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_component_normalizer__[\"a\" /* default */])(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_VizJsOutput_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_5a36472c_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_VizJsOutput_vue__[\"a\" /* render */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_5a36472c_hasScoped_true_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_VizJsOutput_vue__[\"b\" /* staticRenderFns */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ 417:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n/***/ }),\n\n/***/ 423:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(37);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_viz_js__ = __webpack_require__(134);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_viz_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_viz_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_d3__ = __webpack_require__(417);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_d3___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_d3__);\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  name: 'viz-js-output',\n  methods: {\n    addZoomBehavior: function addZoomBehavior() {\n      var svgContainer = this.$refs.container;\n      if (!svgContainer) {\n        return;\n      }\n      console.log(svgContainer);\n      __WEBPACK_IMPORTED_MODULE_0_vue__[\"a\" /* default */].nextTick(function () {\n        var svg = __WEBPACK_IMPORTED_MODULE_2_d3__[\"select\"](svgContainer).select('svg');\n        var svgGroup = svg.select('g');\n        svg.attr('width', '100%');\n        svg.attr('height', '100%');\n        svg.attr('viewBox', null);\n        var zoom = __WEBPACK_IMPORTED_MODULE_2_d3__[\"behavior\"].zoom().on('zoom', function () {\n          svgGroup.attr('transform', 'translate(' + __WEBPACK_IMPORTED_MODULE_2_d3__[\"event\"].translate + ')' + 'scale(' + __WEBPACK_IMPORTED_MODULE_2_d3__[\"event\"].scale + ')');\n        });\n        svg.call(zoom);\n        var svgSize = svg.node().getBoundingClientRect();\n        var groupSize = svgGroup.node().getBBox();\n        var initialScale = 0.75;\n        zoom.translate([(svgSize.width - groupSize.width * initialScale) / 2, (svgSize.height + groupSize.height * initialScale) / 2]).scale(initialScale).event(svg);\n        svgGroup.attr('height', groupSize.height * initialScale + 40);\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.addZoomBehavior();\n  },\n  computed: {\n    svg: function svg() {\n      this.addZoomBehavior();\n      return __WEBPACK_IMPORTED_MODULE_1_viz_js__(this.$store.getters.dot);\n    }\n  }\n});\n\n/***/ }),\n\n/***/ 474:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(410)();\n// imports\n\n\n// module\nexports.push([module.i, \".rendered[data-v-5a36472c]{height:100%}\", \"\", {\"version\":3,\"sources\":[\"/Users/cvoigt/Documents/workspace/argdown/src/components/VizJsOutput.vue\"],\"names\":[],\"mappings\":\"AACA,2BACE,WAAY,CACb\",\"file\":\"VizJsOutput.vue\",\"sourcesContent\":[\"\\n.rendered[data-v-5a36472c]{\\n  height:100%;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 494:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(474);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = __webpack_require__(411).default\nvar update = add(\"57600e41\", content, true, {});\n\n/***/ }),\n\n/***/ 496:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return staticRenderFns; });\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"viz-js-output map-output output\"},[_c('div',{staticClass:\"content\"},[_c('div',{ref:\"container\",staticClass:\"rendered\",domProps:{\"innerHTML\":_vm._s(_vm.svg)}})])])}\nvar staticRenderFns = []\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/1.99b0f03b82adf416905f.js","function injectStyle (context) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5a36472c\\\",\\\"scoped\\\":true,\\\"sourceMap\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./VizJsOutput.vue\")\n}\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./VizJsOutput.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./VizJsOutput.vue\"\n/* template */\nimport {render as __vue_render__, staticRenderFns as __vue_static_render_fns__} from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5a36472c\\\",\\\"hasScoped\\\":true,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./VizJsOutput.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-5a36472c\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nimport normalizeComponent from \"!../../node_modules/vue-loader/lib/runtime/component-normalizer\"\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_render__,\n  __vue_static_render_fns__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/VizJsOutput.vue\n// module id = 136\n// module chunks = 1","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/d3.js\n// module id = 417\n// module chunks = 0 1","<template>\n  <div class=\"viz-js-output map-output output\">\n    <div class=\"content\">\n      <div ref=\"container\" class=\"rendered\" v-html=\"svg\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue'\nimport * as Viz from 'viz.js'\nimport * as d3 from 'd3'\n\nexport default {\n  name: 'viz-js-output',\n  methods: {\n    addZoomBehavior: function () {\n      const svgContainer = this.$refs.container\n      if (!svgContainer) {\n        return\n      }\n      console.log(svgContainer)\n      Vue.nextTick(function () {\n        const svg = d3.select(svgContainer).select('svg')\n        const svgGroup = svg.select('g')\n        svg.attr('width', '100%')\n        svg.attr('height', '100%')\n        svg.attr('viewBox', null)\n        var zoom = d3.behavior.zoom().on('zoom', function () {\n          svgGroup.attr('transform', 'translate(' + d3.event.translate + ')' + 'scale(' + d3.event.scale + ')')\n        })\n        svg.call(zoom)\n        const svgSize = svg.node().getBoundingClientRect()\n        const groupSize = svgGroup.node().getBBox()\n        const initialScale = 0.75\n        zoom\n          .translate([(svgSize.width - groupSize.width * initialScale) / 2, (svgSize.height + groupSize.height * initialScale) / 2])\n          .scale(initialScale)\n          .event(svg)\n        svgGroup.attr('height', groupSize.height * initialScale + 40)\n      })\n    }\n  },\n  mounted: function () {\n    this.addZoomBehavior()\n  },\n  computed: {\n    svg: function () {\n      this.addZoomBehavior()\n      return Viz(this.$store.getters.dot)\n    }\n  }\n}\n</script>\n\n<style scoped>\n.rendered{\n  height:100%;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/VizJsOutput.vue","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".rendered[data-v-5a36472c]{height:100%}\", \"\", {\"version\":3,\"sources\":[\"/Users/cvoigt/Documents/workspace/argdown/src/components/VizJsOutput.vue\"],\"names\":[],\"mappings\":\"AACA,2BACE,WAAY,CACb\",\"file\":\"VizJsOutput.vue\",\"sourcesContent\":[\"\\n.rendered[data-v-5a36472c]{\\n  height:100%;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-5a36472c\",\"scoped\":true,\"sourceMap\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/VizJsOutput.vue\n// module id = 474\n// module chunks = 1","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/index.js?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5a36472c\\\",\\\"scoped\\\":true,\\\"sourceMap\\\":false}!../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./VizJsOutput.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"57600e41\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extract-text-webpack-plugin/loader.js?{\"omit\":1,\"remove\":true}!./~/vue-style-loader!./~/css-loader?{\"minimize\":true,\"sourceMap\":true}!./~/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-5a36472c\",\"scoped\":true,\"sourceMap\":false}!./~/vue-loader/lib/selector.js?type=styles&index=0!./src/components/VizJsOutput.vue\n// module id = 494\n// module chunks = 1","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"viz-js-output map-output output\"},[_c('div',{staticClass:\"content\"},[_c('div',{ref:\"container\",staticClass:\"rendered\",domProps:{\"innerHTML\":_vm._s(_vm.svg)}})])])}\nvar staticRenderFns = []\nexport { render, staticRenderFns }\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/template-compiler?{\"id\":\"data-v-5a36472c\",\"hasScoped\":true,\"buble\":{\"transforms\":{}}}!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/VizJsOutput.vue\n// module id = 496\n// module chunks = 1"],"sourceRoot":""}